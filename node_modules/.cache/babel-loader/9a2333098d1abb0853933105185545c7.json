{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport LandmarkData from \"../../data/map.json\"; // import Pins from \"../Pins\";\n\nimport PopupContainer from \"../PopupContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landmarks = ({\n  map\n}) => {\n  _s();\n\n  const popUpRef = useRef(new mapboxgl.Popup({\n    offset: 10\n  }));\n  useEffect(() => {\n    if (map) {\n      LandmarkData.features.forEach((landmark, index) => {\n        // create React reference\n        const ref = /*#__PURE__*/React.createRef(); // Create a new DOM node and save it to the React Ref\n\n        ref.current = document.createElement(\"div\");\n        ref.current.className += \"pins-markers\";\n\n        const handleClick = () => {\n          const popupNode = document.createElement(\"div\");\n          ReactDOM.render( /*#__PURE__*/_jsxDEV(PopupContainer, {\n            id: \"place-pin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 27\n          }, this), popupNode);\n          popUpRef.current.setLngLat(landmark.geometry.coordinates).setDOMContent(popupNode).addTo(map);\n          console.log(\"testt\");\n        }; // render a Marker Component on our new DOM nodelib\n\n\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {\n          onClick: handleClick,\n          children: \"TTT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 25\n        }, this), ref.current);\n        new mapboxgl.Marker(ref.current).setLngLat(landmark.geometry.coordinates).addTo(map);\n      });\n      console.log(\"ehlo\");\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Landmarks, \"Fjgs9ZMAc80Bxj2IMzjskvaSvrU=\");\n\n_c = Landmarks;\nexport default Landmarks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landmarks\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx"],"names":["React","useEffect","useRef","mapboxgl","ReactDOM","LandmarkData","PopupContainer","Landmarks","map","popUpRef","Popup","offset","features","forEach","landmark","index","ref","createRef","current","document","createElement","className","handleClick","popupNode","render","setLngLat","geometry","coordinates","setDOMContent","addTo","console","log","Marker"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,qBAAzB,C,CACA;;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC7B,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAIC,QAAQ,CAACO,KAAb,CAAmB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAnB,CAAD,CAAvB;AAEAV,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,GAAJ,EAAS;AACPH,MAAAA,YAAY,CAACO,QAAb,CAAsBC,OAAtB,CAA8B,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjD;AACA,cAAMC,GAAG,gBAAGhB,KAAK,CAACiB,SAAN,EAAZ,CAFiD,CAGjD;;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAcC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AAEAJ,QAAAA,GAAG,CAACE,OAAJ,CAAYG,SAAZ,IAAyB,cAAzB;;AAEA,cAAMC,WAAW,GAAG,MAAM;AACxB,gBAAMC,SAAS,GAAGJ,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACAhB,UAAAA,QAAQ,CAACoB,MAAT,eAAgB,QAAC,cAAD;AAAgB,YAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAAhB,EAAmDD,SAAnD;AACAd,UAAAA,QAAQ,CAACS,OAAT,CACGO,SADH,CACaX,QAAQ,CAACY,QAAT,CAAkBC,WAD/B,EAEGC,aAFH,CAEiBL,SAFjB,EAGGM,KAHH,CAGSrB,GAHT;AAKAsB,UAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,SATD,CARiD,CAmBjD;;;AACA3B,QAAAA,QAAQ,CAACoB,MAAT,eAAgB;AAAK,UAAA,OAAO,EAAEF,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAhB,EAAsDN,GAAG,CAACE,OAA1D;AAEA,YAAIf,QAAQ,CAAC6B,MAAb,CAAoBhB,GAAG,CAACE,OAAxB,EACGO,SADH,CACaX,QAAQ,CAACY,QAAT,CAAkBC,WAD/B,EAEGE,KAFH,CAESrB,GAFT;AAGD,OAzBD;AA2BAsB,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACD;AACF,GA/BQ,EA+BN,CAACvB,GAAD,CA/BM,CAAT,CAH6B,CAkClB;;AACX,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApCD;;GAAMD,S;;KAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport LandmarkData from \"../../data/map.json\";\n// import Pins from \"../Pins\";\n\nimport PopupContainer from \"../PopupContainer\";\n\nconst Landmarks = ({ map }) => {\n  const popUpRef = useRef(new mapboxgl.Popup({ offset: 10 }));\n\n  useEffect(() => {\n    if (map) {\n      LandmarkData.features.forEach((landmark, index) => {\n        // create React reference\n        const ref = React.createRef();\n        // Create a new DOM node and save it to the React Ref\n        ref.current = document.createElement(\"div\");\n\n        ref.current.className += \"pins-markers\";\n\n        const handleClick = () => {\n          const popupNode = document.createElement(\"div\");\n          ReactDOM.render(<PopupContainer id=\"place-pin\" />, popupNode);\n          popUpRef.current\n            .setLngLat(landmark.geometry.coordinates)\n            .setDOMContent(popupNode)\n            .addTo(map);\n\n          console.log(\"testt\");\n        };\n\n        // render a Marker Component on our new DOM nodelib\n        ReactDOM.render(<div onClick={handleClick}>TTT</div>, ref.current);\n\n        new mapboxgl.Marker(ref.current)\n          .setLngLat(landmark.geometry.coordinates)\n          .addTo(map);\n      });\n\n      console.log(\"ehlo\");\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n  return <div></div>;\n};\n\nexport default Landmarks;\n"]},"metadata":{},"sourceType":"module"}
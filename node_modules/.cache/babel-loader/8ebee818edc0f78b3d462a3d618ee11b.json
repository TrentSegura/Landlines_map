{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/2021/landlines_map/src/Components/Map.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport Header from './Header';\nimport landLines from '../data/LandlinesWhite';\nimport landLinesThin from '../data/LandlinesThin';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (!('remove' in Element.prototype)) {\n  Element.prototype.remove = function () {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibTEyLXRyZW50IiwiYSI6ImNrNDNuejljbjA0NzMzZW15eGk4OWMwdTEifQ.8rs6af8i7F8oeHDpbD_zQw';\n\nconst Map = () => {\n  _s();\n\n  const mapContainerRef = useRef(null);\n  const [map, setMap] = useState(null);\n  var bounds = [[-110.113384, 35.747004], // Southwest coordinates\n  [-102.113384, 39.747004] // Northeast coordinates\n  ]; //   Determins which zoom level depending on screen size\n\n  const windowWidth = window.innerWidth;\n  const zoomLVL = windowWidth < 329 ? 7.4 : 8.5;\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: 'mapbox://styles/m12-trent/cknho9aum0mdz17p8qde7vrfo',\n      center: [-106.1828, 37.4792],\n      zoom: zoomLVL,\n      minZoom: 1,\n      maxZoom: 13,\n      attributionControl: false,\n      maxBounds: bounds,\n      maxPitch: 0\n    });\n    console.log(window.screen.width); // Load the Lines in Landlines\n\n    map.on('load', () => {\n      // Thick White Lines (Aka the Landlines)\n      map.addSource('landlines', {\n        'type': 'geojson',\n        'data': {\n          'type': 'Feature',\n          'properties': {},\n          'geometry': {\n            'type': 'LineString',\n            'coordinates': landLines\n          }\n        }\n      });\n      map.addLayer({\n        'id': 'lines',\n        'type': 'line',\n        'source': 'landlines',\n        'layout': {\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        'paint': {\n          'line-color': '#fff',\n          'line-opacity': .7,\n          'line-width': 1.25\n        }\n      }); // Thin white lines\n\n      map.addSource('landlines-thin', {\n        'type': 'geojson',\n        'data': {\n          'type': 'Feature',\n          'properties': {},\n          'geometry': {\n            'type': 'LineString',\n            'coordinates': landLinesThin\n          }\n        }\n      });\n      map.addLayer({\n        'id': 'lines-thin',\n        'type': 'line',\n        'source': 'landlines-thin',\n        'layout': {\n          'line-join': 'round',\n          'line-cap': 'round'\n        },\n        'paint': {\n          'line-color': '#f9dec2',\n          'line-opacity': 0.2,\n          'line-width': 1\n        }\n      });\n    });\n    setMap(map); // clean up on unmount\n\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  function handleClick() {\n    const aboutSection = document.getElementById('about-section');\n    aboutSection.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainerRef,\n      children: /*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"cta-scroll-down\",\n      onClick: () => handleClick(),\n      children: \"Icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Map, \"Hh8QRF6C4E4qZ4U1iagzXyTA9D0=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/trent/Sites/2021/landlines_map/src/Components/Map.js"],"names":["React","useRef","useEffect","useState","mapboxgl","Header","landLines","landLinesThin","Element","prototype","remove","parentNode","removeChild","accessToken","Map","mapContainerRef","map","setMap","bounds","windowWidth","window","innerWidth","zoomLVL","container","current","style","center","zoom","minZoom","maxZoom","attributionControl","maxBounds","maxPitch","console","log","screen","width","on","addSource","addLayer","handleClick","aboutSection","document","getElementById","scrollIntoView","behavior"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport Header from './Header';\n\nimport landLines from '../data/LandlinesWhite'\nimport landLinesThin from '../data/LandlinesThin'\n\nif (!('remove' in Element.prototype)) {\n    Element.prototype.remove = function() {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n}\n \n\nmapboxgl.accessToken = 'pk.eyJ1IjoibTEyLXRyZW50IiwiYSI6ImNrNDNuejljbjA0NzMzZW15eGk4OWMwdTEifQ.8rs6af8i7F8oeHDpbD_zQw';\n\n\nconst Map = () => {\n    const mapContainerRef = useRef(null);\n    const [map, setMap] = useState(null)\n\n    var bounds = [\n        [-110.113384, 35.747004], // Southwest coordinates\n        [-102.113384, 39.747004] // Northeast coordinates\n      ]\n\n    //   Determins which zoom level depending on screen size\n      const windowWidth = window.innerWidth\n      const zoomLVL = (windowWidth < 329 ? 7.4 : 8.5)\n\n\n    useEffect(() => {\n        const map = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/m12-trent/cknho9aum0mdz17p8qde7vrfo',\n        center: [ -106.1828, 37.4792 ],\n        zoom: zoomLVL,\n        minZoom: 1,\n        maxZoom: 13,\n        attributionControl: false,\n        maxBounds: bounds,\n        maxPitch: 0,\n    });\n\n    console.log(window.screen.width)\n\n        // Load the Lines in Landlines\n        map.on('load', () => {\n            // Thick White Lines (Aka the Landlines)\n            map.addSource('landlines', {\n                'type': 'geojson',\n                'data': {\n                    'type': 'Feature',\n                    'properties': {},\n                    'geometry': {\n                        'type': 'LineString',\n                        'coordinates': landLines\n                        }\n                    }    \n                });\n                map.addLayer({\n                    'id': 'lines',\n                    'type': 'line',\n                    'source': 'landlines',\n                    'layout': {\n                        'line-join': 'round',\n                        'line-cap': 'round'\n                        },\n                    'paint': {\n                        'line-color': '#fff',\n                        'line-opacity': .7,\n                        'line-width': 1.25\n                     }\n                });\n\n                // Thin white lines\n                map.addSource('landlines-thin', {\n                    'type': 'geojson',\n                    'data': {\n                        'type': 'Feature',\n                        'properties': {},\n                        'geometry': {\n                            'type': 'LineString',\n                            'coordinates': landLinesThin\n                            }\n                        }    \n                    });\n                map.addLayer({\n                    'id': 'lines-thin',\n                    'type': 'line',\n                    'source': 'landlines-thin',\n                    'layout': {\n                        'line-join': 'round',\n                        'line-cap': 'round'\n                        },\n                    'paint': {\n                        'line-color': '#f9dec2',\n                    'line-opacity': 0.2,\n                    'line-width': 1\n                        }\n                    });\n\n        })\n    \n    setMap(map)\n\n\n\n    // clean up on unmount\n    return () => map.remove();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    function handleClick() {\n        const aboutSection = document.getElementById('about-section')\n        aboutSection.scrollIntoView({\n            behavior: 'smooth'\n        })\n    }\n\n    return (\n        <div>\n            <div className='map-container' ref={mapContainerRef}>\n                <Header/>\n            </div>\n            <button className=\"cta-scroll-down\" onClick={()=> handleClick()}>Icon</button>\n            \n        </div>\n    )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}
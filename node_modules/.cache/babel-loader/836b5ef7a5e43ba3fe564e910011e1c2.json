{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/FormComponent/Index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, useField } from \"formik\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst InputComponent = ({\n  label,\n  ...props\n}) => {\n  _s();\n\n  const [field, meta] = useField(props);\n  return /*#__PURE__*/_jsxDEV(\"lable\", {\n    children: /*#__PURE__*/_jsxDEV(\"input\", { ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n};\n\n_s(InputComponent, \"ImX69+3rRx1BE5Ru6eNKPZVOEn4=\", false, function () {\n  return [useField];\n});\n\n_c = InputComponent;\n\nconst FormComponent = ({\n  handleSuccess\n}) => {\n  const schema = Yup.object().shape({\n    firstName: Yup.string().required(\"Required Field\"),\n    lastName: Yup.string().required(\"Required Field\"),\n    email: Yup.string().email(\"Must be a valid e-mail address\").required(\"Required Field\")\n  });\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\"\n    },\n    onSubmit: handleSuccess,\n    validationSchema: schema,\n    children: ({\n      errors,\n      touched\n    }) => /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(InputComponent, {\n        name: \"firstname\",\n        type: \"text\",\n        label: \"First Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputComponent, {\n        name: \"lastname\",\n        type: \"text\",\n        label: \"Last Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(InputComponent, {\n        name: \"email\",\n        type: \"text\",\n        label: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this) // <form onSubmit={handleSuccess}>\n  //   <label for=\"firstname\">First Name</label>\n  //   <input name=\"firstname\" type=\"text\" required autoComplete=\"off\" />\n  //   <label for=\"lastname\">Last Name</label>\n  //   <input name=\"lastname\" type=\"text\" required autoComplete=\"off\" />\n  //   <label for=\"email\">Email</label>\n  //   <input name=\"email\" type=\"text\" required autoComplete=\"off\" />\n  //   <button type=\"submit\">Submit</button>\n  // </form>\n  ;\n};\n\n_c2 = FormComponent;\nexport default FormComponent;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"InputComponent\");\n$RefreshReg$(_c2, \"FormComponent\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/FormComponent/Index.jsx"],"names":["React","Yup","Formik","Form","Field","useField","InputComponent","label","props","field","meta","FormComponent","handleSuccess","schema","object","shape","firstName","string","required","lastName","email","errors","touched"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,QAA9B,QAA8C,QAA9C;;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAAS,KAAGC;AAAZ,CAAD,KAAyB;AAAA;;AAC9C,QAAM,CAACC,KAAD,EAAQC,IAAR,IAAgBL,QAAQ,CAACG,KAAD,CAA9B;AAEA,sBACE;AAAA,2BACE,sBAAWA;AAAX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CARD;;GAAMF,c;UACkBD,Q;;;KADlBC,c;;AAUN,MAAMK,aAAa,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AAC3C,QAAMC,MAAM,GAAGZ,GAAG,CAACa,MAAJ,GAAaC,KAAb,CAAmB;AAChCC,IAAAA,SAAS,EAAEf,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,gBAAtB,CADqB;AAEhCC,IAAAA,QAAQ,EAAElB,GAAG,CAACgB,MAAJ,GAAaC,QAAb,CAAsB,gBAAtB,CAFsB;AAGhCE,IAAAA,KAAK,EAAEnB,GAAG,CAACgB,MAAJ,GACJG,KADI,CACE,gCADF,EAEJF,QAFI,CAEK,gBAFL;AAHyB,GAAnB,CAAf;AAQA,sBACE,QAAC,MAAD;AACE,IAAA,aAAa,EAAE;AACbF,MAAAA,SAAS,EAAE,EADE;AAEbG,MAAAA,QAAQ,EAAE,EAFG;AAGbC,MAAAA,KAAK,EAAE;AAHM,KADjB;AAME,IAAA,QAAQ,EAAER,aANZ;AAOE,IAAA,gBAAgB,EAAEC,MAPpB;AAAA,cASG,CAAC;AAAEQ,MAAAA,MAAF;AAAUC,MAAAA;AAAV,KAAD,kBACC,QAAC,IAAD;AAAA,8BACE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAC,WAArB;AAAiC,QAAA,IAAI,EAAC,MAAtC;AAA6C,QAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAC,UAArB;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,KAAK,EAAC;AAAlD;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,cAAD;AAAgB,QAAA,IAAI,EAAC,OAArB;AAA6B,QAAA,IAAI,EAAC,MAAlC;AAAyC,QAAA,KAAK,EAAC;AAA/C;AAAA;AAAA;AAAA;AAAA,cAHF,eAiBE;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA;AAVJ;AAAA;AAAA;AAAA;AAAA,UADF,CAgCE;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AA3CF;AA6CD,CAtDD;;MAAMX,a;AAwDN,eAAeA,aAAf","sourcesContent":["import React from \"react\";\nimport * as Yup from \"yup\";\nimport { Formik, Form, Field, useField } from \"formik\";\n\nconst InputComponent = ({ label, ...props }) => {\n  const [field, meta] = useField(props);\n\n  return (\n    <lable>\n      <input {...props} />\n    </lable>\n  );\n};\n\nconst FormComponent = ({ handleSuccess }) => {\n  const schema = Yup.object().shape({\n    firstName: Yup.string().required(\"Required Field\"),\n    lastName: Yup.string().required(\"Required Field\"),\n    email: Yup.string()\n      .email(\"Must be a valid e-mail address\")\n      .required(\"Required Field\"),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        firstName: \"\",\n        lastName: \"\",\n        email: \"\",\n      }}\n      onSubmit={handleSuccess}\n      validationSchema={schema}\n    >\n      {({ errors, touched }) => (\n        <Form>\n          <InputComponent name=\"firstname\" type=\"text\" label=\"First Name\" />\n          <InputComponent name=\"lastname\" type=\"text\" label=\"Last Name\" />\n          <InputComponent name=\"email\" type=\"text\" label=\"Email\" />\n\n          {/* <label>First Name</label>\n          <Field name=\"firstname\" type=\"text\" autoComplete=\"off\" />\n          {touched.firstName && errors && <div>{errors.firstName}</div>}\n\n          <label>Last Name</label>\n          <Field name=\"lastname\" type=\"text\" autoComplete=\"off\" />\n          {touched.lastName && errors && <div>{errors.lastName}</div>}\n\n          <label>Email</label>\n          <Field name=\"email\" type=\"text\" autoComplete=\"off\" />\n          {touched.email && errors && <div>{errors.email}</div>} */}\n\n          <button type=\"submit\">Submit</button>\n        </Form>\n      )}\n    </Formik>\n    // <form onSubmit={handleSuccess}>\n    //   <label for=\"firstname\">First Name</label>\n    //   <input name=\"firstname\" type=\"text\" required autoComplete=\"off\" />\n\n    //   <label for=\"lastname\">Last Name</label>\n    //   <input name=\"lastname\" type=\"text\" required autoComplete=\"off\" />\n\n    //   <label for=\"email\">Email</label>\n    //   <input name=\"email\" type=\"text\" required autoComplete=\"off\" />\n\n    //   <button type=\"submit\">Submit</button>\n    // </form>\n  );\n};\n\nexport default FormComponent;\n"]},"metadata":{},"sourceType":"module"}
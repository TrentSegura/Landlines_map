{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport LandmarkData from \"../../data/map.json\";\nimport Landmark from \"../Landmark\";\nimport PopupContainer from \"../PopupContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landmarks = ({\n  map\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (map) {\n      LandmarkData.features.forEach((landmark, index) => {\n        // create React reference\n        const ref = /*#__PURE__*/React.createRef(); // Create a new DOM node and save it to the React Ref\n\n        ref.current = document.createElement(\"div\"); // render a Marker Component on our new DOM nodelib\n\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(Landmark, {\n          landmark: landmark,\n          map: map\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this), ref.current);\n        const popup = new mapboxgl.Popup().setHTML(\"test\");\n        new mapboxgl.Marker(ref.current).setLngLat(landmark.geometry.coordinates).addTo(map).setPopup(popup);\n      });\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Landmarks, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Landmarks;\nexport default Landmarks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landmarks\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx"],"names":["React","useEffect","useRef","mapboxgl","ReactDOM","LandmarkData","Landmark","PopupContainer","Landmarks","map","features","forEach","landmark","index","ref","createRef","current","document","createElement","render","popup","Popup","setHTML","Marker","setLngLat","geometry","coordinates","addTo","setPopup"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,QAAP,MAAqB,aAArB;AAEA,OAAOC,cAAP,MAA2B,mBAA3B;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC7BR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIQ,GAAJ,EAAS;AACPJ,MAAAA,YAAY,CAACK,QAAb,CAAsBC,OAAtB,CAA8B,CAACC,QAAD,EAAWC,KAAX,KAAqB;AACjD;AACA,cAAMC,GAAG,gBAAGd,KAAK,CAACe,SAAN,EAAZ,CAFiD,CAIjD;;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAcC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd,CALiD,CAOjD;;AACAd,QAAAA,QAAQ,CAACe,MAAT,eACE,QAAC,QAAD;AAAU,UAAA,QAAQ,EAAEP,QAApB;AAA8B,UAAA,GAAG,EAAEH;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADF,EAEEK,GAAG,CAACE,OAFN;AAKA,cAAMI,KAAK,GAAG,IAAIjB,QAAQ,CAACkB,KAAb,GAAqBC,OAArB,CAA6B,MAA7B,CAAd;AAEA,YAAInB,QAAQ,CAACoB,MAAb,CAAoBT,GAAG,CAACE,OAAxB,EACGQ,SADH,CACaZ,QAAQ,CAACa,QAAT,CAAkBC,WAD/B,EAEGC,KAFH,CAESlB,GAFT,EAGGmB,QAHH,CAGYR,KAHZ;AAID,OAnBD;AAoBD;AACF,GAvBQ,EAuBN,CAACX,GAAD,CAvBM,CAAT,CAD6B,CAwBlB;;AAEX,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3BD;;GAAMD,S;;KAAAA,S;AA6BN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport LandmarkData from \"../../data/map.json\";\nimport Landmark from \"../Landmark\";\n\nimport PopupContainer from \"../PopupContainer\";\n\nconst Landmarks = ({ map }) => {\n  useEffect(() => {\n    if (map) {\n      LandmarkData.features.forEach((landmark, index) => {\n        // create React reference\n        const ref = React.createRef();\n\n        // Create a new DOM node and save it to the React Ref\n        ref.current = document.createElement(\"div\");\n\n        // render a Marker Component on our new DOM nodelib\n        ReactDOM.render(\n          <Landmark landmark={landmark} map={map} />,\n          ref.current\n        );\n\n        const popup = new mapboxgl.Popup().setHTML(\"test\");\n\n        new mapboxgl.Marker(ref.current)\n          .setLngLat(landmark.geometry.coordinates)\n          .addTo(map)\n          .setPopup(popup);\n      });\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <div></div>;\n};\n\nexport default Landmarks;\n"]},"metadata":{},"sourceType":"module"}
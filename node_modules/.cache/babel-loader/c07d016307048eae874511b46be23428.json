{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport Landmark from \"../Landmark\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landmarks = ({\n  map\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (map) {\n      Pins.features.forEach((pin, index) => {\n        const ref = React.createRef;\n        ref.current = document.createElement(\"div\");\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(Landmark, {\n          map: map,\n          pin: pin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 25\n        }, this), ref.current);\n        new mapboxgl.Marker(ref.current).setLngLat(pin.geometry.coordinates).addTo(map);\n      });\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Landmarks, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Landmarks;\nexport default Landmarks; // import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n// const Landmark = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       map.on(\"load\", function () {\n//         map.loadImage(\"./assets/whitecircle.svg\", (error, image) => {\n//           if (error) throw error;\n//           // Add the image to the map style.\n//           map.addImage(\"dot\", image);\n//           // Add a data source containing one point feature.\n//           map.addSource(\"point\", {\n//             type: \"geojson\",\n//             data: Pins,\n//           });\n//           // Add a layer to use the image to represent the data.\n//           map.addLayer({\n//             id: \"points\",\n//             type: \"symbol\",\n//             source: \"point\", // reference the data source\n//             layout: {\n//               \"icon-image\": \"dot\", // reference the image\n//               \"icon-size\": 0.1,\n//             },\n//           });\n//         });\n//       });\n//       map.on(\"mousemove\", \"points\", () => {});\n//     }\n//   });\n//   return <div></div>;\n// };\n// export default Landmark;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landmarks\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx"],"names":["React","useEffect","Pins","mapboxgl","ReactDOM","Landmark","Landmarks","map","features","forEach","pin","index","ref","createRef","current","document","createElement","render","Marker","setLngLat","geometry","coordinates","addTo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC7BN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,GAAJ,EAAS;AACPL,MAAAA,IAAI,CAACM,QAAL,CAAcC,OAAd,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpC,cAAMC,GAAG,GAAGZ,KAAK,CAACa,SAAlB;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAcC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AAEAZ,QAAAA,QAAQ,CAACa,MAAT,eAAgB,QAAC,QAAD;AAAU,UAAA,GAAG,EAAEV,GAAf;AAAoB,UAAA,GAAG,EAAEG;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAhB,EAAkDE,GAAG,CAACE,OAAtD;AAEA,YAAIX,QAAQ,CAACe,MAAb,CAAoBN,GAAG,CAACE,OAAxB,EACGK,SADH,CACaT,GAAG,CAACU,QAAJ,CAAaC,WAD1B,EAEGC,KAFH,CAESf,GAFT;AAGD,OATD;AAUD;AACF,GAbQ,EAaN,CAACA,GAAD,CAbM,CAAT,CAD6B,CAclB;;AAEX,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjBD;;GAAMD,S;;KAAAA,S;AAmBN,eAAeA,SAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useEffect } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport Landmark from \"../Landmark\";\n\nconst Landmarks = ({ map }) => {\n  useEffect(() => {\n    if (map) {\n      Pins.features.forEach((pin, index) => {\n        const ref = React.createRef;\n        ref.current = document.createElement(\"div\");\n\n        ReactDOM.render(<Landmark map={map} pin={pin} />, ref.current);\n\n        new mapboxgl.Marker(ref.current)\n          .setLngLat(pin.geometry.coordinates)\n          .addTo(map);\n      });\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <div></div>;\n};\n\nexport default Landmarks;\n\n// import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n\n// const Landmark = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       map.on(\"load\", function () {\n//         map.loadImage(\"./assets/whitecircle.svg\", (error, image) => {\n//           if (error) throw error;\n\n//           // Add the image to the map style.\n//           map.addImage(\"dot\", image);\n\n//           // Add a data source containing one point feature.\n//           map.addSource(\"point\", {\n//             type: \"geojson\",\n//             data: Pins,\n//           });\n\n//           // Add a layer to use the image to represent the data.\n//           map.addLayer({\n//             id: \"points\",\n//             type: \"symbol\",\n//             source: \"point\", // reference the data source\n//             layout: {\n//               \"icon-image\": \"dot\", // reference the image\n//               \"icon-size\": 0.1,\n//             },\n//           });\n//         });\n//       });\n\n//       map.on(\"mousemove\", \"points\", () => {});\n//     }\n//   });\n//   return <div></div>;\n// };\n\n// export default Landmark;\n"]},"metadata":{},"sourceType":"module"}
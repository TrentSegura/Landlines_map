{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n// import mapboxgl from \"mapbox-gl\";\n// import ReactDOM from \"react-dom\";\n// import Landmark from \"../Landmark\";\n// const Landmarks = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       Pins.features.forEach((pin, index) => {\n//         const ref = React.createRef;\n//         ref.current = document.createElement(\"div\");\n//         ReactDOM.render(<Landmark map={map} pin={pin} />, ref.current);\n//         new mapboxgl.Marker(ref.current)\n//           .setLngLat(pin.geometry.coordinates)\n//           .addTo(map);\n//       });\n//     }\n//   }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n//   return <div></div>;\n// };\n// export default Landmarks;\nimport React, { useEffect } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landmark = ({\n  map\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (map) {\n      map.on(\"loaded\", function () {\n        map.addSource(\"some id\", {\n          type: \"geojson\",\n          data: Pins\n        });\n        map.addLayer({\n          id: \"places\",\n          type: \"symbol\",\n          source: \"places\",\n          layout: {\n            \"icon-image\": \"{icon}\",\n            \"icon-allow-overlap\": true\n          }\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Landmark, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Landmark;\nexport default Landmark;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landmark\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx"],"names":["React","useEffect","Pins","Landmark","map","on","addSource","type","data","addLayer","id","source","layout"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC5BH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACC,EAAJ,CAAO,QAAP,EAAiB,YAAY;AAC3BD,QAAAA,GAAG,CAACE,SAAJ,CAAc,SAAd,EAAyB;AACvBC,UAAAA,IAAI,EAAE,SADiB;AAEvBC,UAAAA,IAAI,EAAEN;AAFiB,SAAzB;AAIAE,QAAAA,GAAG,CAACK,QAAJ,CAAa;AACXC,UAAAA,EAAE,EAAE,QADO;AAEXH,UAAAA,IAAI,EAAE,QAFK;AAGXI,UAAAA,MAAM,EAAE,QAHG;AAIXC,UAAAA,MAAM,EAAE;AACN,0BAAc,QADR;AAEN,kCAAsB;AAFhB;AAJG,SAAb;AASD,OAdD;AAeD;AACF,GAlBQ,CAAT;AAmBA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArBD;;GAAMT,Q;;KAAAA,Q;AAuBN,eAAeA,QAAf","sourcesContent":["// import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n// import mapboxgl from \"mapbox-gl\";\n// import ReactDOM from \"react-dom\";\n// import Landmark from \"../Landmark\";\n\n// const Landmarks = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       Pins.features.forEach((pin, index) => {\n//         const ref = React.createRef;\n//         ref.current = document.createElement(\"div\");\n\n//         ReactDOM.render(<Landmark map={map} pin={pin} />, ref.current);\n\n//         new mapboxgl.Marker(ref.current)\n//           .setLngLat(pin.geometry.coordinates)\n//           .addTo(map);\n//       });\n//     }\n//   }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n//   return <div></div>;\n// };\n\n// export default Landmarks;\n\nimport React, { useEffect } from \"react\";\nimport Pins from \"../../data/map.json\";\n\nconst Landmark = ({ map }) => {\n  useEffect(() => {\n    if (map) {\n      map.on(\"loaded\", function () {\n        map.addSource(\"some id\", {\n          type: \"geojson\",\n          data: Pins,\n        });\n        map.addLayer({\n          id: \"places\",\n          type: \"symbol\",\n          source: \"places\",\n          layout: {\n            \"icon-image\": \"{icon}\",\n            \"icon-allow-overlap\": true,\n          },\n        });\n      });\n    }\n  });\n  return <div></div>;\n};\n\nexport default Landmark;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/LandmarksComponent/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport PopupContainer from \"../PopupContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandmarksComponent = ({\n  map\n}) => {\n  _s();\n\n  const popUpRef = useRef(new mapboxgl.Popup({\n    offset: 10\n  }));\n\n  if (map) {\n    map.on(\"click\", \"landmarks\", e => {\n      popUpRef.current.remove();\n    });\n    map.on(\"click\", \"landmarks\", e => {\n      const features = map.queryRenderedFeatures(e.point, {\n        layers: [\"landmarks\"]\n      });\n\n      if (features.length > 0) {\n        const feature = features[0];\n        console.log(popUpRef.current); // create popup node\n\n        const popupNode = document.createElement(\"div\");\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(PopupContainer, {\n          id: \"place-pin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), popupNode);\n        popUpRef.current.setLngLat(feature.geometry.coordinates).setDOMContent(popupNode).addTo(map);\n      }\n    }); // Change the cursor to a pointer when the it enters a feature in the 'Landmarks' layer.\n\n    map.on(\"mouseenter\", \"landmarks\", () => {\n      map.getCanvas().style.cursor = \"pointer\";\n    }); // Change it back to a pointer when it leaves.\n\n    map.on(\"mouseleave\", \"landmarks\", () => {\n      map.getCanvas().style.cursor = \"\";\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LandmarksComponent, \"oRU6t6gT8gG09edoKqmsQ5gt6ww=\");\n\n_c = LandmarksComponent;\nexport default LandmarksComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandmarksComponent\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/LandmarksComponent/index.jsx"],"names":["React","useRef","mapboxgl","ReactDOM","PopupContainer","LandmarksComponent","map","popUpRef","Popup","offset","on","e","current","remove","features","queryRenderedFeatures","point","layers","length","feature","console","log","popupNode","document","createElement","render","setLngLat","geometry","coordinates","setDOMContent","addTo","getCanvas","style","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACtC,QAAMC,QAAQ,GAAGN,MAAM,CAAC,IAAIC,QAAQ,CAACM,KAAb,CAAmB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAnB,CAAD,CAAvB;;AAEA,MAAIH,GAAJ,EAAS;AACPA,IAAAA,GAAG,CAACI,EAAJ,CAAO,OAAP,EAAgB,WAAhB,EAA8BC,CAAD,IAAO;AAClCJ,MAAAA,QAAQ,CAACK,OAAT,CAAiBC,MAAjB;AACD,KAFD;AAIAP,IAAAA,GAAG,CAACI,EAAJ,CAAO,OAAP,EAAgB,WAAhB,EAA8BC,CAAD,IAAO;AAClC,YAAMG,QAAQ,GAAGR,GAAG,CAACS,qBAAJ,CAA0BJ,CAAC,CAACK,KAA5B,EAAmC;AAClDC,QAAAA,MAAM,EAAE,CAAC,WAAD;AAD0C,OAAnC,CAAjB;;AAIA,UAAIH,QAAQ,CAACI,MAAT,GAAkB,CAAtB,EAAyB;AACvB,cAAMC,OAAO,GAAGL,QAAQ,CAAC,CAAD,CAAxB;AAEAM,QAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACK,OAArB,EAHuB,CAIvB;;AACA,cAAMU,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACArB,QAAAA,QAAQ,CAACsB,MAAT,eAAgB,QAAC,cAAD;AAAgB,UAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAAhB,EAAmDH,SAAnD;AACAf,QAAAA,QAAQ,CAACK,OAAT,CACGc,SADH,CACaP,OAAO,CAACQ,QAAR,CAAiBC,WAD9B,EAEGC,aAFH,CAEiBP,SAFjB,EAGGQ,KAHH,CAGSxB,GAHT;AAID;AACF,KAjBD,EALO,CAwBP;;AACAA,IAAAA,GAAG,CAACI,EAAJ,CAAO,YAAP,EAAqB,WAArB,EAAkC,MAAM;AACtCJ,MAAAA,GAAG,CAACyB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,SAA/B;AACD,KAFD,EAzBO,CA6BP;;AACA3B,IAAAA,GAAG,CAACI,EAAJ,CAAO,YAAP,EAAqB,WAArB,EAAkC,MAAM;AACtCJ,MAAAA,GAAG,CAACyB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,EAA/B;AACD,KAFD;AAGD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAvCD;;GAAM5B,kB;;KAAAA,kB;AAyCN,eAAeA,kBAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport PopupContainer from \"../PopupContainer\";\n\nconst LandmarksComponent = ({ map }) => {\n  const popUpRef = useRef(new mapboxgl.Popup({ offset: 10 }));\n\n  if (map) {\n    map.on(\"click\", \"landmarks\", (e) => {\n      popUpRef.current.remove();\n    });\n\n    map.on(\"click\", \"landmarks\", (e) => {\n      const features = map.queryRenderedFeatures(e.point, {\n        layers: [\"landmarks\"],\n      });\n\n      if (features.length > 0) {\n        const feature = features[0];\n\n        console.log(popUpRef.current);\n        // create popup node\n        const popupNode = document.createElement(\"div\");\n        ReactDOM.render(<PopupContainer id=\"place-pin\" />, popupNode);\n        popUpRef.current\n          .setLngLat(feature.geometry.coordinates)\n          .setDOMContent(popupNode)\n          .addTo(map);\n      }\n    });\n\n    // Change the cursor to a pointer when the it enters a feature in the 'Landmarks' layer.\n    map.on(\"mouseenter\", \"landmarks\", () => {\n      map.getCanvas().style.cursor = \"pointer\";\n    });\n\n    // Change it back to a pointer when it leaves.\n    map.on(\"mouseleave\", \"landmarks\", () => {\n      map.getCanvas().style.cursor = \"\";\n    });\n  }\n\n  return <div></div>;\n};\n\nexport default LandmarksComponent;\n"]},"metadata":{},"sourceType":"module"}
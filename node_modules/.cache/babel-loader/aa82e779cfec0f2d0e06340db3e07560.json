{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map/src/components/MarkersDesktop.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./Markers.css\";\nimport Sidebar from \"./Sidebar\";\nimport projects from \"../data/landlines.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst MarkersDesktop = ({\n  map,\n  handleHeader\n}) => {\n  _s();\n\n  const [open, setOpen] = useState(false);\n  const [state, setState] = useState({\n    title: \"\",\n    artist: \"\",\n    description: \"\",\n    images: \"\",\n    id: \"\",\n    alt: \"\"\n  });\n  console.log();\n\n  function addMarkers() {\n    projects.features.forEach(function (marker, index) {\n      const el = document.createElement(\"div\");\n      el.id = \"marker-\" + marker.properties.id;\n      el.className = \"markers-ll\";\n      el.innerHTML = `<div class=\"marker\"><h4><span>` + marker.properties.alt + `</span></h4></div>`;\n      new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).addTo(map);\n      el.addEventListener(\"click\", function (e) {\n        flyToProject(marker);\n        handleHeader(true);\n      });\n    });\n  } // Use Mapbox GL JS's `flyTo` to move the camera smoothly\n  // a given center point.\n\n\n  function flyToProject(currentFeature) {\n    map.flyTo({\n      center: [currentFeature.geometry.coordinates[0], currentFeature.geometry.coordinates[1]],\n      zoom: 12,\n      speed: 1,\n      padding: {\n        left: 500\n      }\n    });\n    setState(currentFeature.properties);\n    setOpen(true);\n  }\n\n  if (map) {\n    map.on(\"load\", () => {\n      addMarkers();\n    });\n  }\n\n  const onExit = () => {\n    setOpen(false);\n    map.flyTo({\n      center: [-106.1828, 37.4792],\n      zoom: 8.5,\n      speed: 1,\n      padding: {\n        left: 0\n      }\n    });\n  };\n\n  console.log(projects.features[12].properties); // console.log(projects.features[12].properties)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: open === true ? /*#__PURE__*/_jsxDEV(Sidebar, {\n      state: projects.features[12].properties,\n      map: map,\n      projects: projects.features.length,\n      onExit: onExit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this) : null\n  }, void 0, false);\n};\n\n_s(MarkersDesktop, \"jjSwZ7WG65WhSTpttR+RMX70Hs8=\");\n\n_c = MarkersDesktop;\nexport default MarkersDesktop;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarkersDesktop\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map/src/components/MarkersDesktop.js"],"names":["React","useState","mapboxgl","Sidebar","projects","MarkersDesktop","map","handleHeader","open","setOpen","state","setState","title","artist","description","images","id","alt","console","log","addMarkers","features","forEach","marker","index","el","document","createElement","properties","className","innerHTML","Marker","setLngLat","geometry","coordinates","addTo","addEventListener","e","flyToProject","currentFeature","flyTo","center","zoom","speed","padding","left","on","onExit","length"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\n\nimport \"./Markers.css\";\n\nimport Sidebar from \"./Sidebar\";\n\nimport projects from \"../data/landlines.json\";\n\nconst MarkersDesktop = ({ map, handleHeader }) => {\n  const [open, setOpen] = useState(false);\n\n  const [state, setState] = useState({\n    title: \"\",\n    artist: \"\",\n    description: \"\",\n    images: \"\",\n    id: \"\",\n    alt: \"\",\n  });\n\n  console.log();\n\n  function addMarkers() {\n    projects.features.forEach(function (marker, index) {\n      const el = document.createElement(\"div\");\n      el.id = \"marker-\" + marker.properties.id;\n      el.className = \"markers-ll\";\n      el.innerHTML =\n        `<div class=\"marker\"><h4><span>` +\n        marker.properties.alt +\n        `</span></h4></div>`;\n\n      new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).addTo(map);\n\n      el.addEventListener(\"click\", function (e) {\n        flyToProject(marker);\n        handleHeader(true);\n      });\n    });\n  }\n\n  // Use Mapbox GL JS's `flyTo` to move the camera smoothly\n  // a given center point.\n  function flyToProject(currentFeature) {\n    map.flyTo({\n      center: [\n        currentFeature.geometry.coordinates[0],\n        currentFeature.geometry.coordinates[1],\n      ],\n      zoom: 12,\n      speed: 1,\n      padding: { left: 500 },\n    });\n    setState(currentFeature.properties);\n    setOpen(true);\n  }\n\n  if (map) {\n    map.on(\"load\", () => {\n      addMarkers();\n    });\n  }\n\n  const onExit = () => {\n    setOpen(false);\n    map.flyTo({\n      center: [-106.1828, 37.4792],\n      zoom: 8.5,\n      speed: 1,\n      padding: { left: 0 },\n    });\n  };\n\n  console.log(projects.features[12].properties);\n\n  // console.log(projects.features[12].properties)\n  return (\n    <>\n      {open === true ? (\n        <Sidebar\n          state={projects.features[12].properties}\n          map={map}\n          projects={projects.features.length}\n          onExit={onExit}\n        />\n      ) : null}\n    </>\n  );\n};\n\nexport default MarkersDesktop;\n"]},"metadata":{},"sourceType":"module"}
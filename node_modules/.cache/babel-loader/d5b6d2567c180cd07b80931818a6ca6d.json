{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/LandmarksComponent/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport PopupContainer from \"../PopupContainer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandmarksComponent = ({\n  map\n}) => {\n  _s();\n\n  const popUpRef = useRef(new mapboxgl.Popup({\n    offset: 10\n  }));\n  useEffect(() => {\n    if (map) {\n      map.on(\"click\", \"landmarks\", e => {\n        const features = map.queryRenderedFeatures(e.point, {\n          layers: [\"landmarks\"]\n        });\n\n        if (features.length > 0) {\n          const feature = features[0];\n          console.log(popUpRef.current); // create popup node\n\n          const popupNode = document.createElement(\"div\");\n          ReactDOM.render( /*#__PURE__*/_jsxDEV(PopupContainer, {\n            id: \"place-pin\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 27\n          }, this), popupNode);\n          popUpRef.current.setLngLat(feature.geometry.coordinates).setDOMContent(popupNode).addTo(map);\n        }\n      }); // Change the cursor to a pointer when the it enters a feature in the 'Landmarks' layer.\n\n      map.on(\"mouseenter\", \"landmarks\", () => {\n        map.getCanvas().style.cursor = \"pointer\";\n      }); // Change it back to a pointer when it leaves.\n\n      map.on(\"mouseleave\", \"landmarks\", () => {\n        map.getCanvas().style.cursor = \"\";\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LandmarksComponent, \"Fjgs9ZMAc80Bxj2IMzjskvaSvrU=\");\n\n_c = LandmarksComponent;\nexport default LandmarksComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandmarksComponent\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/LandmarksComponent/index.jsx"],"names":["React","useRef","useEffect","mapboxgl","ReactDOM","PopupContainer","LandmarksComponent","map","popUpRef","Popup","offset","on","e","features","queryRenderedFeatures","point","layers","length","feature","console","log","current","popupNode","document","createElement","render","setLngLat","geometry","coordinates","setDOMContent","addTo","getCanvas","style","cursor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACtC,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAIE,QAAQ,CAACM,KAAb,CAAmB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAnB,CAAD,CAAvB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACI,EAAJ,CAAO,OAAP,EAAgB,WAAhB,EAA8BC,CAAD,IAAO;AAClC,cAAMC,QAAQ,GAAGN,GAAG,CAACO,qBAAJ,CAA0BF,CAAC,CAACG,KAA5B,EAAmC;AAClDC,UAAAA,MAAM,EAAE,CAAC,WAAD;AAD0C,SAAnC,CAAjB;;AAIA,YAAIH,QAAQ,CAACI,MAAT,GAAkB,CAAtB,EAAyB;AACvB,gBAAMC,OAAO,GAAGL,QAAQ,CAAC,CAAD,CAAxB;AAEAM,UAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAQ,CAACa,OAArB,EAHuB,CAIvB;;AACA,gBAAMC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACApB,UAAAA,QAAQ,CAACqB,MAAT,eAAgB,QAAC,cAAD;AAAgB,YAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBAAhB,EAAmDH,SAAnD;AACAd,UAAAA,QAAQ,CAACa,OAAT,CACGK,SADH,CACaR,OAAO,CAACS,QAAR,CAAiBC,WAD9B,EAEGC,aAFH,CAEiBP,SAFjB,EAGGQ,KAHH,CAGSvB,GAHT;AAID;AACF,OAjBD,EADO,CAoBP;;AACAA,MAAAA,GAAG,CAACI,EAAJ,CAAO,YAAP,EAAqB,WAArB,EAAkC,MAAM;AACtCJ,QAAAA,GAAG,CAACwB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,SAA/B;AACD,OAFD,EArBO,CAyBP;;AACA1B,MAAAA,GAAG,CAACI,EAAJ,CAAO,YAAP,EAAqB,WAArB,EAAkC,MAAM;AACtCJ,QAAAA,GAAG,CAACwB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,EAA/B;AACD,OAFD;AAGD;AACF,GA/BQ,CAAT;AAiCA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CArCD;;GAAM3B,kB;;KAAAA,kB;AAuCN,eAAeA,kBAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport PopupContainer from \"../PopupContainer\";\n\nconst LandmarksComponent = ({ map }) => {\n  const popUpRef = useRef(new mapboxgl.Popup({ offset: 10 }));\n\n  useEffect(() => {\n    if (map) {\n      map.on(\"click\", \"landmarks\", (e) => {\n        const features = map.queryRenderedFeatures(e.point, {\n          layers: [\"landmarks\"],\n        });\n\n        if (features.length > 0) {\n          const feature = features[0];\n\n          console.log(popUpRef.current);\n          // create popup node\n          const popupNode = document.createElement(\"div\");\n          ReactDOM.render(<PopupContainer id=\"place-pin\" />, popupNode);\n          popUpRef.current\n            .setLngLat(feature.geometry.coordinates)\n            .setDOMContent(popupNode)\n            .addTo(map);\n        }\n      });\n\n      // Change the cursor to a pointer when the it enters a feature in the 'Landmarks' layer.\n      map.on(\"mouseenter\", \"landmarks\", () => {\n        map.getCanvas().style.cursor = \"pointer\";\n      });\n\n      // Change it back to a pointer when it leaves.\n      map.on(\"mouseleave\", \"landmarks\", () => {\n        map.getCanvas().style.cursor = \"\";\n      });\n    }\n  });\n\n  return <div></div>;\n};\n\nexport default LandmarksComponent;\n"]},"metadata":{},"sourceType":"module"}
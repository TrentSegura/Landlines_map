{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/ProjectComponent/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport ProjectMarker from \"../ProjectMarker\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProjectComponent = ({\n  map,\n  projects,\n  pickProject\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (map) {\n      projects.features.forEach((project, index) => {\n        // create React reference\n        const ref = /*#__PURE__*/React.createRef(); // Create a new DOM node and save it to the React Ref\n\n        ref.current = document.createElement(\"div\"); // render a Marker Component on our new DOM nodelib\n\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(ProjectMarker, {\n          pickProject: pickProject,\n          project: project\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this), ref.current);\n        new mapboxgl.Marker(ref.current).setLngLat(project.geometry.coordinates).setPopup(new mapboxgl.Popup({\n          offset: 25\n        }) // add popups\n        .setHTML(`<h3>${properties.title}</h3><p>${properties.description}</p>`)).addTo(map);\n      });\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_s(ProjectComponent, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ProjectComponent;\nexport default ProjectComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProjectComponent\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/ProjectComponent/index.jsx"],"names":["React","useEffect","mapboxgl","ReactDOM","ProjectMarker","ProjectComponent","map","projects","pickProject","features","forEach","project","index","ref","createRef","current","document","createElement","render","Marker","setLngLat","geometry","coordinates","setPopup","Popup","offset","setHTML","properties","title","description","addTo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;;;AAEA,MAAMC,gBAAgB,GAAG,CAAC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,QAAP;AAAiBC,EAAAA;AAAjB,CAAD,KAAoC;AAAA;;AAC3DP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,GAAJ,EAAS;AACPC,MAAAA,QAAQ,CAACE,QAAT,CAAkBC,OAAlB,CAA0B,CAACC,OAAD,EAAUC,KAAV,KAAoB;AAC5C;AACA,cAAMC,GAAG,gBAAGb,KAAK,CAACc,SAAN,EAAZ,CAF4C,CAG5C;;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAcC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd,CAJ4C,CAK5C;;AACAd,QAAAA,QAAQ,CAACe,MAAT,eACE,QAAC,aAAD;AAAe,UAAA,WAAW,EAAEV,WAA5B;AAAyC,UAAA,OAAO,EAAEG;AAAlD;AAAA;AAAA;AAAA;AAAA,gBADF,EAEEE,GAAG,CAACE,OAFN;AAKA,YAAIb,QAAQ,CAACiB,MAAb,CAAoBN,GAAG,CAACE,OAAxB,EACGK,SADH,CACaT,OAAO,CAACU,QAAR,CAAiBC,WAD9B,EAEGC,QAFH,CAGI,IAAIrB,QAAQ,CAACsB,KAAb,CAAmB;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAAnB,EAAmC;AAAnC,SACGC,OADH,CAEK,OAAMC,UAAU,CAACC,KAAM,WAAUD,UAAU,CAACE,WAAY,MAF7D,CAHJ,EAQGC,KARH,CAQSxB,GART;AASD,OApBD;AAqBD;AACF,GAxBQ,EAwBN,CAACA,GAAD,CAxBM,CAAT,CAD2D,CAyBhD;;AAEX,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA5BD;;GAAMD,gB;;KAAAA,gB;AA8BN,eAAeA,gBAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport ProjectMarker from \"../ProjectMarker\";\n\nconst ProjectComponent = ({ map, projects, pickProject }) => {\n  useEffect(() => {\n    if (map) {\n      projects.features.forEach((project, index) => {\n        // create React reference\n        const ref = React.createRef();\n        // Create a new DOM node and save it to the React Ref\n        ref.current = document.createElement(\"div\");\n        // render a Marker Component on our new DOM nodelib\n        ReactDOM.render(\n          <ProjectMarker pickProject={pickProject} project={project} />,\n          ref.current\n        );\n\n        new mapboxgl.Marker(ref.current)\n          .setLngLat(project.geometry.coordinates)\n          .setPopup(\n            new mapboxgl.Popup({ offset: 25 }) // add popups\n              .setHTML(\n                `<h3>${properties.title}</h3><p>${properties.description}</p>`\n              )\n          )\n          .addTo(map);\n      });\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <div></div>;\n};\n\nexport default ProjectComponent;\n"]},"metadata":{},"sourceType":"module"}
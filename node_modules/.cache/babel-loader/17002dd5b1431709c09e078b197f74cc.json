{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useState, useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n// import mapboxgl from \"mapbox-gl\";\n// import ReactDOM from \"react-dom\";\n// import Landmark from \"../Landmark\";\n// import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n// const Landmark = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       map.on(\"load\", function () {\n//         map.loadImage(\"./assets/whitecircle.svg\", (error, image) => {\n//           if (error) throw error;\n//           // Add the image to the map style.\n//           map.addImage(\"dot\", image);\n//           // Add a data source containing one point feature.\n//           map.addSource(\"point\", {\n//             type: \"geojson\",\n//             data: Pins,\n//           });\n//           // Add a layer to use the image to represent the data.\n//           map.addLayer({\n//             id: \"points\",\n//             type: \"symbol\",\n//             source: \"point\", // reference the data source\n//             layout: {\n//               \"icon-image\": \"dot\", // reference the image\n//               \"icon-size\": 0.1,\n//             },\n//           });\n//         });\n//       });\n//       map.on(\"mousemove\", \"points\", () => {});\n//     }\n//   });\n//   return <div></div>;\n// };\n// export default Landmark;\nimport React, { useEffect } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./styles.css\";\nimport ReactDOM from \"react-dom\";\nimport Landmark from \"../Landmark\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landmarks = ({\n  map\n}) => {\n  _s();\n\n  const handlePopUp = () => {\n    console.log(\"handle\");\n  };\n\n  useEffect(() => {\n    if (map) {\n      Pins.features.forEach((pin, index) => {\n        const coordinates = pin.geometry.coordinates; // const el = document.createElement(\"div\");\n        // el.id = \"marker_\" + index;\n        // create React reference\n\n        const ref = /*#__PURE__*/React.createRef(); // Create a new DOM node and save it to the React Ref\n\n        ref.current = document.createElement(\"div\"); // render a Marker Component on our new DOM nodelib\n\n        ref.current.className = \"pin-marker\";\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(Landmark, {\n          pin: pin,\n          map: map,\n          children: \"\\u26AA\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), ref.current);\n        const marker = new mapboxgl.Marker(ref.current);\n        marker.setLngLat(coordinates);\n        marker.addTo(map);\n      });\n    }\n  }, [map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Landmarks, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Landmarks;\nexport default Landmarks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landmarks\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx"],"names":["React","useEffect","Pins","mapboxgl","ReactDOM","Landmark","Landmarks","map","handlePopUp","console","log","features","forEach","pin","index","coordinates","geometry","ref","createRef","current","document","createElement","className","render","marker","Marker","setLngLat","addTo"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC7B,QAAMC,WAAW,GAAG,MAAM;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD,GAFD;;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,GAAJ,EAAS;AACPL,MAAAA,IAAI,CAACS,QAAL,CAAcC,OAAd,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpC,cAAMC,WAAW,GAAGF,GAAG,CAACG,QAAJ,CAAaD,WAAjC,CADoC,CAEpC;AACA;AAEA;;AACA,cAAME,GAAG,gBAAGjB,KAAK,CAACkB,SAAN,EAAZ,CANoC,CAOpC;;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAcC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd,CARoC,CASpC;;AAEAJ,QAAAA,GAAG,CAACE,OAAJ,CAAYG,SAAZ,GAAwB,YAAxB;AAEAlB,QAAAA,QAAQ,CAACmB,MAAT,eACE,QAAC,QAAD;AAAU,UAAA,GAAG,EAAEV,GAAf;AAAoB,UAAA,GAAG,EAAEN,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAIEU,GAAG,CAACE,OAJN;AAOA,cAAMK,MAAM,GAAG,IAAIrB,QAAQ,CAACsB,MAAb,CAAoBR,GAAG,CAACE,OAAxB,CAAf;AAEAK,QAAAA,MAAM,CAACE,SAAP,CAAiBX,WAAjB;AACAS,QAAAA,MAAM,CAACG,KAAP,CAAapB,GAAb;AACD,OAxBD;AAyBD;AACF,GA5BQ,EA4BN,CAACA,GAAD,CA5BM,CAAT;AA8BA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApCD;;GAAMD,S;;KAAAA,S;AAsCN,eAAeA,SAAf","sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n// import mapboxgl from \"mapbox-gl\";\n// import ReactDOM from \"react-dom\";\n// import Landmark from \"../Landmark\";\n\n// import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n\n// const Landmark = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       map.on(\"load\", function () {\n//         map.loadImage(\"./assets/whitecircle.svg\", (error, image) => {\n//           if (error) throw error;\n\n//           // Add the image to the map style.\n//           map.addImage(\"dot\", image);\n\n//           // Add a data source containing one point feature.\n//           map.addSource(\"point\", {\n//             type: \"geojson\",\n//             data: Pins,\n//           });\n\n//           // Add a layer to use the image to represent the data.\n//           map.addLayer({\n//             id: \"points\",\n//             type: \"symbol\",\n//             source: \"point\", // reference the data source\n//             layout: {\n//               \"icon-image\": \"dot\", // reference the image\n//               \"icon-size\": 0.1,\n//             },\n//           });\n//         });\n//       });\n\n//       map.on(\"mousemove\", \"points\", () => {});\n//     }\n//   });\n//   return <div></div>;\n// };\n\n// export default Landmark;\n\nimport React, { useEffect } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./styles.css\";\nimport ReactDOM from \"react-dom\";\n\nimport Landmark from \"../Landmark\";\n\nconst Landmarks = ({ map }) => {\n  const handlePopUp = () => {\n    console.log(\"handle\");\n  };\n\n  useEffect(() => {\n    if (map) {\n      Pins.features.forEach((pin, index) => {\n        const coordinates = pin.geometry.coordinates;\n        // const el = document.createElement(\"div\");\n        // el.id = \"marker_\" + index;\n\n        // create React reference\n        const ref = React.createRef();\n        // Create a new DOM node and save it to the React Ref\n        ref.current = document.createElement(\"div\");\n        // render a Marker Component on our new DOM nodelib\n\n        ref.current.className = \"pin-marker\";\n\n        ReactDOM.render(\n          <Landmark pin={pin} map={map}>\n            âšª\n          </Landmark>,\n          ref.current\n        );\n\n        const marker = new mapboxgl.Marker(ref.current);\n\n        marker.setLngLat(coordinates);\n        marker.addTo(map);\n      });\n    }\n  }, [map]);\n\n  return <div></div>;\n};\n\nexport default Landmarks;\n"]},"metadata":{},"sourceType":"module"}
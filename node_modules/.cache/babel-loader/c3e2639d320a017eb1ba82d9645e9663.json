{"ast":null,"code":"import _slicedToArray from\"/Users/trent/Sites/landlines_map_test/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import{ImageContainer,IMG,ButtonContainer,Button,ImgCounter,Caption}from\"./styles\";import Modal from\"../Modal\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Slideshow=function Slideshow(_ref){var images=_ref.images;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),current=_useState2[0],setCurrent=_useState2[1];var length=images.length;// Open Modal State\nvar _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isOpen=_useState4[0],setIsOpen=_useState4[1];React.useEffect(function(){setCurrent(0);},[images]);var nextSlide=function nextSlide(){setCurrent(current===length-1?0:current+1);};var prevSlide=function prevSlide(){setCurrent(current===0?length-1:current-1);};if(!Array.isArray(images)||images.length<=0){var imgFile=\"/assets/images/slide_\"+images.file;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ImageContainer,{onClick:function onClick(){return setIsOpen(true);},children:/*#__PURE__*/_jsx(IMG,{src:imgFile,alt:\"landlines\",className:\"image\"})}),images.caption?/*#__PURE__*/_jsx(Caption,{children:images.caption}):\"\",/*#__PURE__*/_jsx(Modal,{images:images,open:isOpen,onClose:function onClose(){return setIsOpen(false);}})]});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ImageContainer,{onClick:function onClick(){return setIsOpen(true);},children:images.map(function(image,index){var imgSrc=\"assets/images/slide_\"+image.file;return/*#__PURE__*/_jsx(React.Fragment,{children:index===current&&/*#__PURE__*/_jsx(IMG,{src:imgSrc,alt:\"landlines\"},index)},index);})}),images.map(function(image,index){return/*#__PURE__*/_jsx(React.Fragment,{children:index===current&&/*#__PURE__*/_jsx(Caption,{children:image.caption},index)},index);}),/*#__PURE__*/_jsx(Modal,{open:isOpen,current:current,images:images,onClose:function onClose(){return setIsOpen(false);},prev:prevSlide,next:nextSlide}),/*#__PURE__*/_jsxs(ButtonContainer,{children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return nextSlide();},children:\"Next\"}),/*#__PURE__*/_jsxs(ImgCounter,{children:[current+1,\"\\u2009/\\u2009\",length]}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return prevSlide();},children:\"Prev\"})]})]});};export default Slideshow;// {images.forEach((image, index) => {\n//         const imgSrc = \"assets/images/slide_\" + image.file;\n//         return (\n//           <>\n//             {index === current && (\n//               <>\n//                 <ImageContainer key={index}>\n//                   <IMG src={imgSrc} alt=\"landlines\" className=\"image\" />\n//                 </ImageContainer>\n//                 <Caption>{image.caption}</Caption>\n//               </>\n//             )}\n//           </>\n//         );\n//       })}","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Slideshow/index.jsx"],"names":["React","useState","ImageContainer","IMG","ButtonContainer","Button","ImgCounter","Caption","Modal","Slideshow","images","current","setCurrent","length","isOpen","setIsOpen","useEffect","nextSlide","prevSlide","Array","isArray","imgFile","file","caption","map","image","index","imgSrc"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ImageContainer,\n  IMG,\n  ButtonContainer,\n  Button,\n  ImgCounter,\n  Caption,\n} from \"./styles\";\nimport Modal from \"../Modal\";\n\nconst Slideshow = ({ images }) => {\n  const [current, setCurrent] = useState(0);\n  const length = images.length;\n\n  // Open Modal State\n  const [isOpen, setIsOpen] = useState(false);\n\n  React.useEffect(() => {\n    setCurrent(0);\n  }, [images]);\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(images) || images.length <= 0) {\n    const imgFile = \"/assets/images/slide_\" + images.file;\n\n    return (\n      <>\n        <ImageContainer onClick={() => setIsOpen(true)}>\n          <IMG src={imgFile} alt=\"landlines\" className=\"image\" />\n        </ImageContainer>\n        {images.caption ? <Caption>{images.caption}</Caption> : \"\"}\n        <Modal images={images} open={isOpen} onClose={() => setIsOpen(false)} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ImageContainer onClick={() => setIsOpen(true)}>\n        {images.map((image, index) => {\n          const imgSrc = \"assets/images/slide_\" + image.file;\n          return (\n            <React.Fragment key={index}>\n              {index === current && (\n                <IMG src={imgSrc} key={index} alt=\"landlines\" />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </ImageContainer>\n\n      {images.map((image, index) => {\n        return (\n          <React.Fragment key={index}>\n            {index === current && (\n              <Caption key={index}>{image.caption}</Caption>\n            )}\n          </React.Fragment>\n        );\n      })}\n      <Modal\n        open={isOpen}\n        current={current}\n        images={images}\n        onClose={() => setIsOpen(false)}\n        prev={prevSlide}\n        next={nextSlide}\n      />\n\n      <ButtonContainer>\n        <Button onClick={() => nextSlide()}>Next</Button>\n        <ImgCounter>\n          {current + 1}&thinsp;/&thinsp;{length}\n        </ImgCounter>\n        <Button onClick={() => prevSlide()}>Prev</Button>\n      </ButtonContainer>\n    </>\n  );\n};\n\nexport default Slideshow;\n\n// {images.forEach((image, index) => {\n//         const imgSrc = \"assets/images/slide_\" + image.file;\n//         return (\n//           <>\n//             {index === current && (\n//               <>\n//                 <ImageContainer key={index}>\n//                   <IMG src={imgSrc} alt=\"landlines\" className=\"image\" />\n//                 </ImageContainer>\n//                 <Caption>{image.caption}</Caption>\n//               </>\n//             )}\n//           </>\n//         );\n//       })}\n"]},"metadata":{},"sourceType":"module"}
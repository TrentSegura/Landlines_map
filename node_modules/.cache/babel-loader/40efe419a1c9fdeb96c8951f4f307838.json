{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx\";\n// import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n// import mapboxgl from \"mapbox-gl\";\n// import ReactDOM from \"react-dom\";\n// import Landmark from \"../Landmark\";\n// const Landmarks = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       Pins.features.forEach((pin, index) => {\n//         const ref = React.createRef;\n//         ref.current = document.createElement(\"div\");\n//         ReactDOM.render(<Landmark map={map} pin={pin} />, ref.current);\n//         new mapboxgl.Marker(ref.current)\n//           .setLngLat(pin.geometry.coordinates)\n//           .addTo(map);\n//       });\n//     }\n//   }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n//   return <div></div>;\n// };\n// export default Landmarks;\nimport React from \"react\";\nimport Pins from \"../../data/map.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landmark = ({\n  map\n}) => {\n  map.addSource(\"places-pins\", {\n    // This GeoJSON contains features that include an \"icon\"\n    // property. The value of the \"icon\" property corresponds\n    // to an image in the Mapbox Streets style's sprite.\n    type: \"geojson\",\n    data: Pins\n  });\n  map.addLayer({\n    id: \"landmarks\",\n    type: \"symbol\",\n    source: \"places-pins\",\n    layout: {\n      \"icon-image\": \"{icon}\",\n      \"icon-allow-overlap\": true\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Landmark;\nexport default Landmark;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landmark\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx"],"names":["React","Pins","Landmark","map","addSource","type","data","addLayer","id","source","layout"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAC5BA,EAAAA,GAAG,CAACC,SAAJ,CAAc,aAAd,EAA6B;AAC3B;AACA;AACA;AACAC,IAAAA,IAAI,EAAE,SAJqB;AAK3BC,IAAAA,IAAI,EAAEL;AALqB,GAA7B;AAQAE,EAAAA,GAAG,CAACI,QAAJ,CAAa;AACXC,IAAAA,EAAE,EAAE,WADO;AAEXH,IAAAA,IAAI,EAAE,QAFK;AAGXI,IAAAA,MAAM,EAAE,aAHG;AAIXC,IAAAA,MAAM,EAAE;AACN,oBAAc,QADR;AAEN,4BAAsB;AAFhB;AAJG,GAAb;AAUA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApBD;;KAAMR,Q;AAsBN,eAAeA,QAAf","sourcesContent":["// import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n// import mapboxgl from \"mapbox-gl\";\n// import ReactDOM from \"react-dom\";\n// import Landmark from \"../Landmark\";\n\n// const Landmarks = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       Pins.features.forEach((pin, index) => {\n//         const ref = React.createRef;\n//         ref.current = document.createElement(\"div\");\n\n//         ReactDOM.render(<Landmark map={map} pin={pin} />, ref.current);\n\n//         new mapboxgl.Marker(ref.current)\n//           .setLngLat(pin.geometry.coordinates)\n//           .addTo(map);\n//       });\n//     }\n//   }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n//   return <div></div>;\n// };\n\n// export default Landmarks;\n\nimport React from \"react\";\nimport Pins from \"../../data/map.json\";\n\nconst Landmark = ({ map }) => {\n  map.addSource(\"places-pins\", {\n    // This GeoJSON contains features that include an \"icon\"\n    // property. The value of the \"icon\" property corresponds\n    // to an image in the Mapbox Streets style's sprite.\n    type: \"geojson\",\n    data: Pins,\n  });\n\n  map.addLayer({\n    id: \"landmarks\",\n    type: \"symbol\",\n    source: \"places-pins\",\n    layout: {\n      \"icon-image\": \"{icon}\",\n      \"icon-allow-overlap\": true,\n    },\n  });\n\n  return <div></div>;\n};\n\nexport default Landmark;\n"]},"metadata":{},"sourceType":"module"}
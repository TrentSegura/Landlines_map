{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Slideshow/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { ImageContainer, IMG, ButtonContainer, Button, ImgCounter, Caption } from \"./styles\";\nimport Modal from \"../Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Slideshow = ({\n  images\n}) => {\n  _s();\n\n  const [current, setCurrent] = useState(0);\n  const length = images.length; // Open Modal State\n\n  const [isOpen, setIsOpen] = useState(false);\n  React.useEffect(() => {\n    setCurrent(0);\n  }, [images]);\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(images) || images.length <= 0) {\n    const imgFile = \"/assets/images/slide_\" + images.file;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(ImageContainer, {\n        onClick: () => setIsOpen(true),\n        children: /*#__PURE__*/_jsxDEV(IMG, {\n          src: imgFile,\n          alt: \"landlines\",\n          className: \"image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), images.caption ? /*#__PURE__*/_jsxDEV(Caption, {\n        children: images.caption\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(Modal, {\n        images: images,\n        open: isOpen,\n        onClose: () => setIsOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ImageContainer, {\n      onClick: () => setIsOpen(true),\n      children: images.map((image, index) => {\n        const imgSrc = \"assets/images/slide_\" + image.file;\n        return /*#__PURE__*/_jsxDEV(React.Fragment, {\n          children: index === current && /*#__PURE__*/_jsxDEV(IMG, {\n            src: imgSrc,\n            alt: \"landlines\"\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), images.map((image, index) => {\n      return /*#__PURE__*/_jsxDEV(React.Fragment, {\n        children: index === current && /*#__PURE__*/_jsxDEV(Caption, {\n          children: image.caption\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(Modal, {\n      open: isOpen,\n      current: current,\n      images: images,\n      onClose: () => setIsOpen(false),\n      prev: prevSlide,\n      next: nextSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => nextSlide(),\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ImgCounter, {\n        children: [current + 1, \"\\u2009/\\u2009\", length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => prevSlide(),\n        children: \"Prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Slideshow, \"DqJzn3UxZFW8zoVSAyUoLE02dOM=\");\n\n_c = Slideshow;\nexport default Slideshow; // {images.forEach((image, index) => {\n//         const imgSrc = \"assets/images/slide_\" + image.file;\n//         return (\n//           <>\n//             {index === current && (\n//               <>\n//                 <ImageContainer key={index}>\n//                   <IMG src={imgSrc} alt=\"landlines\" className=\"image\" />\n//                 </ImageContainer>\n//                 <Caption>{image.caption}</Caption>\n//               </>\n//             )}\n//           </>\n//         );\n//       })}\n\nvar _c;\n\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Slideshow/index.jsx"],"names":["React","useState","ImageContainer","IMG","ButtonContainer","Button","ImgCounter","Caption","Modal","Slideshow","images","current","setCurrent","length","isOpen","setIsOpen","useEffect","nextSlide","prevSlide","Array","isArray","imgFile","file","caption","map","image","index","imgSrc"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport {\n  ImageContainer,\n  IMG,\n  ButtonContainer,\n  Button,\n  ImgCounter,\n  Caption,\n} from \"./styles\";\nimport Modal from \"../Modal\";\n\nconst Slideshow = ({ images }) => {\n  const [current, setCurrent] = useState(0);\n  const length = images.length;\n\n  // Open Modal State\n  const [isOpen, setIsOpen] = useState(false);\n\n  React.useEffect(() => {\n    setCurrent(0);\n  }, [images]);\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(images) || images.length <= 0) {\n    const imgFile = \"/assets/images/slide_\" + images.file;\n\n    return (\n      <>\n        <ImageContainer onClick={() => setIsOpen(true)}>\n          <IMG src={imgFile} alt=\"landlines\" className=\"image\" />\n        </ImageContainer>\n        {images.caption ? <Caption>{images.caption}</Caption> : \"\"}\n        <Modal images={images} open={isOpen} onClose={() => setIsOpen(false)} />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <ImageContainer onClick={() => setIsOpen(true)}>\n        {images.map((image, index) => {\n          const imgSrc = \"assets/images/slide_\" + image.file;\n          return (\n            <React.Fragment key={index}>\n              {index === current && (\n                <IMG src={imgSrc} key={index} alt=\"landlines\" />\n              )}\n            </React.Fragment>\n          );\n        })}\n      </ImageContainer>\n\n      {images.map((image, index) => {\n        return (\n          <React.Fragment key={index}>\n            {index === current && (\n              <Caption key={index}>{image.caption}</Caption>\n            )}\n          </React.Fragment>\n        );\n      })}\n      <Modal\n        open={isOpen}\n        current={current}\n        images={images}\n        onClose={() => setIsOpen(false)}\n        prev={prevSlide}\n        next={nextSlide}\n      />\n\n      <ButtonContainer>\n        <Button onClick={() => nextSlide()}>Next</Button>\n        <ImgCounter>\n          {current + 1}&thinsp;/&thinsp;{length}\n        </ImgCounter>\n        <Button onClick={() => prevSlide()}>Prev</Button>\n      </ButtonContainer>\n    </>\n  );\n};\n\nexport default Slideshow;\n\n// {images.forEach((image, index) => {\n//         const imgSrc = \"assets/images/slide_\" + image.file;\n//         return (\n//           <>\n//             {index === current && (\n//               <>\n//                 <ImageContainer key={index}>\n//                   <IMG src={imgSrc} alt=\"landlines\" className=\"image\" />\n//                 </ImageContainer>\n//                 <Caption>{image.caption}</Caption>\n//               </>\n//             )}\n//           </>\n//         );\n//       })}\n"]},"metadata":{},"sourceType":"module"}
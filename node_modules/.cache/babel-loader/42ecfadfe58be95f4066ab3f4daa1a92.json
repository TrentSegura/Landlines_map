{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./styles.css\";\nimport ReactDOM from \"react-dom\";\nimport Landmark from \"../Landmark\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landmarks = ({\n  map\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (map) {\n      Pins.features.forEach((pin, index) => {\n        const coordinates = pin.geometry.coordinates; // const el = document.createElement(\"div\");\n        // el.id = \"marker_\" + index;\n        // create React reference\n\n        const ref = /*#__PURE__*/React.createRef(); // Create a new DOM node and save it to the React Ref\n\n        ref.current = document.createElement(\"div\"); // render a Marker Component on our new DOM nodelib\n\n        ref.current.className = \"pin-marker\";\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(Landmark, {\n          pin: pin,\n          map: map\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 25\n        }, this), ref.current);\n        const marker = new mapboxgl.Marker(ref.current);\n        marker.setLngLat(coordinates);\n        marker.addTo(map);\n      });\n    }\n  }, [map]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Landmarks, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Landmarks;\nexport default Landmarks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landmarks\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx"],"names":["React","useEffect","useState","Pins","mapboxgl","ReactDOM","Landmark","Landmarks","map","features","forEach","pin","index","coordinates","geometry","ref","createRef","current","document","createElement","className","render","marker","Marker","setLngLat","addTo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC7BP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,GAAJ,EAAS;AACPL,MAAAA,IAAI,CAACM,QAAL,CAAcC,OAAd,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpC,cAAMC,WAAW,GAAGF,GAAG,CAACG,QAAJ,CAAaD,WAAjC,CADoC,CAEpC;AACA;AAEA;;AACA,cAAME,GAAG,gBAAGf,KAAK,CAACgB,SAAN,EAAZ,CANoC,CAOpC;;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAcC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd,CARoC,CASpC;;AAEAJ,QAAAA,GAAG,CAACE,OAAJ,CAAYG,SAAZ,GAAwB,YAAxB;AAEAf,QAAAA,QAAQ,CAACgB,MAAT,eAAgB,QAAC,QAAD;AAAU,UAAA,GAAG,EAAEV,GAAf;AAAoB,UAAA,GAAG,EAAEH;AAAzB;AAAA;AAAA;AAAA;AAAA,gBAAhB,EAAkDO,GAAG,CAACE,OAAtD;AAEA,cAAMK,MAAM,GAAG,IAAIlB,QAAQ,CAACmB,MAAb,CAAoBR,GAAG,CAACE,OAAxB,CAAf;AAEAK,QAAAA,MAAM,CAACE,SAAP,CAAiBX,WAAjB;AACAS,QAAAA,MAAM,CAACG,KAAP,CAAajB,GAAb;AACD,OAnBD;AAoBD;AACF,GAvBQ,EAuBN,CAACA,GAAD,CAvBM,CAAT;AAyBA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3BD;;GAAMD,S;;KAAAA,S;AA6BN,eAAeA,SAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./styles.css\";\nimport ReactDOM from \"react-dom\";\n\nimport Landmark from \"../Landmark\";\n\nconst Landmarks = ({ map }) => {\n  useEffect(() => {\n    if (map) {\n      Pins.features.forEach((pin, index) => {\n        const coordinates = pin.geometry.coordinates;\n        // const el = document.createElement(\"div\");\n        // el.id = \"marker_\" + index;\n\n        // create React reference\n        const ref = React.createRef();\n        // Create a new DOM node and save it to the React Ref\n        ref.current = document.createElement(\"div\");\n        // render a Marker Component on our new DOM nodelib\n\n        ref.current.className = \"pin-marker\";\n\n        ReactDOM.render(<Landmark pin={pin} map={map} />, ref.current);\n\n        const marker = new mapboxgl.Marker(ref.current);\n\n        marker.setLngLat(coordinates);\n        marker.addTo(map);\n      });\n    }\n  }, [map]);\n\n  return <div></div>;\n};\n\nexport default Landmarks;\n"]},"metadata":{},"sourceType":"module"}
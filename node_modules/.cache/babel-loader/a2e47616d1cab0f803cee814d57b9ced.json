{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/LandmarksComponent/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport PopupContainer from \"../PopupContainer\";\nimport LandmarksData from \"../../data/map.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandmarksComponent = ({\n  map\n}) => {\n  _s();\n\n  const popUpRef = useRef(new mapboxgl.Popup({\n    offset: 10\n  }));\n\n  if (map) {\n    map.on(\"click\", \"landmarks\", e => {\n      const features = map.queryRenderedFeatures(e.point, {\n        layers: [\"landmarks\"]\n      });\n      popUpRef.current.remove();\n\n      if (features.length > 0) {\n        const feature = features[0];\n        console.log(popUpRef.current); // create popup node\n\n        const popupNode = document.createElement(\"div\");\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(PopupContainer, {\n          id: \"place-pin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 25\n        }, this), popupNode);\n        popUpRef.current.setLngLat(feature.geometry.coordinates).setDOMContent(popupNode).addTo(map);\n      }\n    }); // Change the cursor to a pointer when the it enters a feature in the 'Landmarks' layer.\n\n    map.on(\"mouseenter\", \"landmarks\", () => {\n      map.getCanvas().style.cursor = \"pointer\";\n    }); // Change it back to a pointer when it leaves.\n\n    map.on(\"mouseleave\", \"landmarks\", () => {\n      map.getCanvas().style.cursor = \"\";\n    });\n  }\n\n  useEffect(() => {\n    LandmarksData.features.forEach((pin, index) => {\n      // create React reference\n      const ref = /*#__PURE__*/React.createRef(); // Create a new DOM node and save it to the React Ref\n\n      ref.current = document.createElement(\"div\"); // render a Marker Component on our new DOM nodelib\n\n      ReactDOM.render( /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 23\n      }, this), ref.current);\n      new mapboxgl.Marker(ref.current).setLngLat(pin.geometry.coordinates).addTo(map);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LandmarksComponent, \"Fjgs9ZMAc80Bxj2IMzjskvaSvrU=\");\n\n_c = LandmarksComponent;\nexport default LandmarksComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandmarksComponent\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/LandmarksComponent/index.jsx"],"names":["React","useRef","useEffect","mapboxgl","ReactDOM","PopupContainer","LandmarksData","LandmarksComponent","map","popUpRef","Popup","offset","on","e","features","queryRenderedFeatures","point","layers","current","remove","length","feature","console","log","popupNode","document","createElement","render","setLngLat","geometry","coordinates","setDOMContent","addTo","getCanvas","style","cursor","forEach","pin","index","ref","createRef","Marker"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAOC,aAAP,MAA0B,qBAA1B;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACtC,QAAMC,QAAQ,GAAGR,MAAM,CAAC,IAAIE,QAAQ,CAACO,KAAb,CAAmB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAnB,CAAD,CAAvB;;AAEA,MAAIH,GAAJ,EAAS;AACPA,IAAAA,GAAG,CAACI,EAAJ,CAAO,OAAP,EAAgB,WAAhB,EAA8BC,CAAD,IAAO;AAClC,YAAMC,QAAQ,GAAGN,GAAG,CAACO,qBAAJ,CAA0BF,CAAC,CAACG,KAA5B,EAAmC;AAClDC,QAAAA,MAAM,EAAE,CAAC,WAAD;AAD0C,OAAnC,CAAjB;AAGAR,MAAAA,QAAQ,CAACS,OAAT,CAAiBC,MAAjB;;AAEA,UAAIL,QAAQ,CAACM,MAAT,GAAkB,CAAtB,EAAyB;AACvB,cAAMC,OAAO,GAAGP,QAAQ,CAAC,CAAD,CAAxB;AAEAQ,QAAAA,OAAO,CAACC,GAAR,CAAYd,QAAQ,CAACS,OAArB,EAHuB,CAIvB;;AACA,cAAMM,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACAtB,QAAAA,QAAQ,CAACuB,MAAT,eAAgB,QAAC,cAAD;AAAgB,UAAA,EAAE,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAAhB,EAAmDH,SAAnD;AACAf,QAAAA,QAAQ,CAACS,OAAT,CACGU,SADH,CACaP,OAAO,CAACQ,QAAR,CAAiBC,WAD9B,EAEGC,aAFH,CAEiBP,SAFjB,EAGGQ,KAHH,CAGSxB,GAHT;AAID;AACF,KAlBD,EADO,CAqBP;;AACAA,IAAAA,GAAG,CAACI,EAAJ,CAAO,YAAP,EAAqB,WAArB,EAAkC,MAAM;AACtCJ,MAAAA,GAAG,CAACyB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,SAA/B;AACD,KAFD,EAtBO,CA0BP;;AACA3B,IAAAA,GAAG,CAACI,EAAJ,CAAO,YAAP,EAAqB,WAArB,EAAkC,MAAM;AACtCJ,MAAAA,GAAG,CAACyB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,EAA/B;AACD,KAFD;AAGD;;AAEDjC,EAAAA,SAAS,CAAC,MAAM;AACdI,IAAAA,aAAa,CAACQ,QAAd,CAAuBsB,OAAvB,CAA+B,CAACC,GAAD,EAAMC,KAAN,KAAgB;AAC7C;AACA,YAAMC,GAAG,gBAAGvC,KAAK,CAACwC,SAAN,EAAZ,CAF6C,CAG7C;;AACAD,MAAAA,GAAG,CAACrB,OAAJ,GAAcO,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd,CAJ6C,CAK7C;;AACAtB,MAAAA,QAAQ,CAACuB,MAAT,eAAgB;AAAA;AAAA;AAAA;AAAA,cAAhB,EAAyBY,GAAG,CAACrB,OAA7B;AAEA,UAAIf,QAAQ,CAACsC,MAAb,CAAoBF,GAAG,CAACrB,OAAxB,EACGU,SADH,CACaS,GAAG,CAACR,QAAJ,CAAaC,WAD1B,EAEGE,KAFH,CAESxB,GAFT;AAGD,KAXD;AAYD,GAbQ,CAAT;AAeA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAnDD;;GAAMD,kB;;KAAAA,kB;AAqDN,eAAeA,kBAAf","sourcesContent":["import React, { useRef, useEffect } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport PopupContainer from \"../PopupContainer\";\n\nimport LandmarksData from \"../../data/map.json\";\n\nconst LandmarksComponent = ({ map }) => {\n  const popUpRef = useRef(new mapboxgl.Popup({ offset: 10 }));\n\n  if (map) {\n    map.on(\"click\", \"landmarks\", (e) => {\n      const features = map.queryRenderedFeatures(e.point, {\n        layers: [\"landmarks\"],\n      });\n      popUpRef.current.remove();\n\n      if (features.length > 0) {\n        const feature = features[0];\n\n        console.log(popUpRef.current);\n        // create popup node\n        const popupNode = document.createElement(\"div\");\n        ReactDOM.render(<PopupContainer id=\"place-pin\" />, popupNode);\n        popUpRef.current\n          .setLngLat(feature.geometry.coordinates)\n          .setDOMContent(popupNode)\n          .addTo(map);\n      }\n    });\n\n    // Change the cursor to a pointer when the it enters a feature in the 'Landmarks' layer.\n    map.on(\"mouseenter\", \"landmarks\", () => {\n      map.getCanvas().style.cursor = \"pointer\";\n    });\n\n    // Change it back to a pointer when it leaves.\n    map.on(\"mouseleave\", \"landmarks\", () => {\n      map.getCanvas().style.cursor = \"\";\n    });\n  }\n\n  useEffect(() => {\n    LandmarksData.features.forEach((pin, index) => {\n      // create React reference\n      const ref = React.createRef();\n      // Create a new DOM node and save it to the React Ref\n      ref.current = document.createElement(\"div\");\n      // render a Marker Component on our new DOM nodelib\n      ReactDOM.render(<div />, ref.current);\n\n      new mapboxgl.Marker(ref.current)\n        .setLngLat(pin.geometry.coordinates)\n        .addTo(map);\n    });\n  });\n\n  return <div></div>;\n};\n\nexport default LandmarksComponent;\n"]},"metadata":{},"sourceType":"module"}
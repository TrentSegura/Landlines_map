{"ast":null,"code":"import { __assign, __values, __spreadArray, __read, __rest } from './_virtual/_tslib.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { mapValues, isArray, flatten, keys, toArray, toStateValue, isString, getEventType, matchesState, path, evaluateGuard, mapContext, toSCXMLEvent, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, isFunction } from './utils.js';\nimport { SpecialTargets } from './types.js';\nimport { getAllStateNodes, getConfiguration, isInFinalState, has, getChildren, getValue, isLeafNode } from './stateUtils.js';\nimport { start as start$1, stop as stop$1, invoke, update, nullEvent, raise as raise$1, send as send$1 } from './actionTypes.js';\nimport { done, start, raise, stop, toActionObjects, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send, cancel, initEvent } from './actions.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { createInvocableActor } from './Actor.js';\nimport { toInvokeDefinition } from './invokeUtils.js';\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\n\nvar isStateId = function isStateId(str) {\n  return str[0] === STATE_IDENTIFIER;\n};\n\nvar createDefaultOptions = function createDefaultOptions() {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\n\nvar validateArrayifiedTransitions = function validateArrayifiedTransitions(stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\" + event + \"'\";\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \" + eventText + \" on state '\" + stateNode.id + \"' are unreachable. \" + \"Make sure that the default transition is the last one defined.\");\n};\n\nvar StateNode =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  context // TODO: this is unsafe, but we're removing it in v5 anyway\n  ) {\n    var _this = this;\n\n    if (context === void 0) {\n      context = undefined;\n    }\n\n    var _a;\n\n    this.config = config;\n    this.context = context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.tags = [];\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = this.options._parent;\n    this.key = this.config.key || this.options._key || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spreadArray([this.machine.key], __read(this.path)).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \" + (this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\" + this.type + \"'`\") + \" in the config for state node '\" + this.id + \"' instead.\");\n    }\n\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n\n      var stateNode = new StateNode(stateConfig, {\n        _parent: _this,\n        _key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n\n    function dfs(stateNode) {\n      var e_1, _a;\n\n      stateNode.order = order++;\n\n      try {\n        for (var _b = __values(getChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n\n      if (isMachine(invokeConfig)) {\n        _this.machine.options.services = __assign((_a = {}, _a[invokeConfig.id] = invokeConfig, _a), _this.machine.options.services);\n        return toInvokeDefinition({\n          src: invokeConfig.id,\n          id: invokeConfig.id\n        });\n      } else if (isString(invokeConfig.src)) {\n        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n          id: invokeConfig.id || invokeConfig.src,\n          src: invokeConfig.src\n        }));\n      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n        var invokeSrc = _this.id + \":invocation[\" + i + \"]\"; // TODO: util function\n\n        _this.machine.options.services = __assign((_b = {}, _b[invokeSrc] = invokeConfig.src, _b), _this.machine.options.services);\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeSrc\n        }, invokeConfig), {\n          src: invokeSrc\n        }));\n      } else {\n        var invokeSource = invokeConfig.src;\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeSource.type\n        }, invokeConfig), {\n          src: invokeSource\n        }));\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n    // state node getters are deprecated\n    // if (!this.parent) {\n    //   this._init();\n    // }\n  }\n\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n\n  StateNode.prototype.withConfig = function (options, context) {\n    if (context === void 0) {\n      context = this.context;\n    }\n\n    var _a = this.options,\n        actions = _a.actions,\n        activities = _a.activities,\n        guards = _a.guards,\n        services = _a.services,\n        delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function get() {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function get() {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function get() {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function get() {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n\n    var afterConfig = this.config.after;\n\n    if (!afterConfig) {\n      return [];\n    }\n\n    var mutateEntryExit = function mutateEntryExit(delay, i) {\n      var delayRef = isFunction(delay) ? _this.id + \":delay[\" + i + \"]\" : delay;\n      var eventType = after(delayRef, _this.id);\n\n      _this.onEntry.push(send(eventType, {\n        delay: delay\n      }));\n\n      _this.onExit.push(cancel(eventType));\n\n      return eventType;\n    };\n\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n\n    var _this = this;\n\n    if (!state) {\n      return [];\n    }\n\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this, this.states[stateValue]];\n    }\n\n    var subStateKeys = keys(stateValue);\n    var subStateNodes = subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey);\n    });\n    subStateNodes.push(this);\n    return subStateNodes.concat(subStateKeys.reduce(function (allSubStateNodes, subStateKey) {\n      var subStateNode = _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n\n      return allSubStateNodes.concat(subStateNode);\n    }, []));\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n\n  StateNode.prototype.resolveState = function (state) {\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(state.value)));\n    return new State(__assign(__assign({}, state), {\n      value: this.resolve(state.value),\n      configuration: configuration,\n      done: isInFinalState(configuration, this)\n    }));\n  };\n\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n\n    var transitionMap = {};\n\n    try {\n      for (var _b = __values(keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n\n        if (!subStateValue) {\n          continue;\n        }\n\n        var subStateNode = this.getStateNode(subStateKey);\n\n        var next = subStateNode._transition(subStateValue, state, _event);\n\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var stateTransitions = keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n\n    var entryNodes = flatten(stateTransitions.map(function (t) {\n      return t.entrySet;\n    }));\n    var configuration = flatten(keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      entrySet: entryNodes,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n\n    if (keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n\n    var _this = this;\n\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n            stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ? // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) : // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\" + (cond.name || cond.type) + \"' in transition for event '\" + eventName + \"' in state node '\" + this.id + \"':\\n\" + err.message);\n        }\n\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n\n          actions.push.apply(actions, __spreadArray([], __read(candidate.actions)));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    if (!selectedTransition) {\n      return undefined;\n    }\n\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        entrySet: [],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    var reentryNodes = isInternal ? [] : flatten(allNextStateNodes.map(function (n) {\n      return _this.nodesFromChild(n);\n    }));\n    return {\n      transitions: [selectedTransition],\n      entrySet: reentryNodes,\n      exitSet: isInternal ? [] : [this],\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  };\n\n  StateNode.prototype.nodesFromChild = function (childStateNode) {\n    if (childStateNode.escapes(this)) {\n      return [];\n    }\n\n    var nodes = [];\n    var marker = childStateNode;\n\n    while (marker && marker !== this) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n\n    nodes.push(this); // inclusive\n\n    return nodes;\n  };\n  /**\r\n   * Whether the given state node \"escapes\" this state node. If the `stateNode` is equal to or the parent of\r\n   * this state node, it does not escape.\r\n   */\n\n\n  StateNode.prototype.escapes = function (stateNode) {\n    if (this === stateNode) {\n      return false;\n    }\n\n    var parent = this.parent;\n\n    while (parent) {\n      if (parent === stateNode) {\n        return false;\n      }\n\n      parent = parent.parent;\n    }\n\n    return true;\n  };\n\n  StateNode.prototype.getActions = function (transition, currentContext, _event, prevState) {\n    var e_4, _a, e_5, _b;\n\n    var prevConfig = getConfiguration([], prevState ? this.getStateNodes(prevState.value) : [this]);\n    var resolvedConfig = transition.configuration.length ? getConfiguration(prevConfig, transition.configuration) : prevConfig;\n\n    try {\n      for (var resolvedConfig_1 = __values(resolvedConfig), resolvedConfig_1_1 = resolvedConfig_1.next(); !resolvedConfig_1_1.done; resolvedConfig_1_1 = resolvedConfig_1.next()) {\n        var sn = resolvedConfig_1_1.value;\n\n        if (!has(prevConfig, sn)) {\n          transition.entrySet.push(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (resolvedConfig_1_1 && !resolvedConfig_1_1.done && (_a = resolvedConfig_1.return)) _a.call(resolvedConfig_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    if (!transition.source) {\n      transition.exitSet = []; // Ensure that root StateNode (machine) is entered\n\n      transition.entrySet.push(this);\n    }\n\n    var doneEvents = flatten(transition.entrySet.map(function (sn) {\n      var events = [];\n\n      if (sn.type !== 'final') {\n        return events;\n      }\n\n      var parent = sn.parent;\n\n      if (!parent.parent) {\n        return events;\n      }\n\n      events.push(done(sn.id, sn.doneData), // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n\n      return events;\n    }));\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    transition.entrySet.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var entryStates = new Set(transition.entrySet);\n    var exitStates = new Set(transition.exitSet);\n\n    var _c = __read([flatten(Array.from(entryStates).map(function (stateNode) {\n      return __spreadArray(__spreadArray([], __read(stateNode.activities.map(function (activity) {\n        return start(activity);\n      }))), __read(stateNode.onEntry));\n    })).concat(doneEvents.map(raise)), flatten(Array.from(exitStates).map(function (stateNode) {\n      return __spreadArray(__spreadArray([], __read(stateNode.onExit)), __read(stateNode.activities.map(function (activity) {\n        return stop(activity);\n      })));\n    }))], 2),\n        entryActions = _c[0],\n        exitActions = _c[1];\n\n    var actions = toActionObjects(exitActions.concat(transition.actions).concat(entryActions), this.machine.options.actions);\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n\n  StateNode.prototype.transition = function (state, event, context) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    var currentState;\n\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\" + WILDCARD + \"')\");\n    }\n\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\" + this.id + \"' does not accept event '\" + _event.name + \"'\");\n      }\n    }\n\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      entrySet: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spreadArray([], __read(resolvedConfig));\n    return this.resolveTransition(stateTransition, currentState, _event);\n  };\n\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, originalEvent) {\n    var _a;\n\n    var currentActions = state.actions;\n    state = this.transition(state, _event); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n\n    (_a = state.actions).unshift.apply(_a, __spreadArray([], __read(currentActions)));\n\n    return state;\n  };\n\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, _event, context) {\n    var e_6, _a;\n\n    var _this = this;\n\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n\n    if (context === void 0) {\n      context = this.machine.context;\n    }\n\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var currentContext = currentState ? currentState.context : context;\n    var actions = this.getActions(stateTransition, currentContext, _event, currentState);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n\n    try {\n      for (var actions_1 = __values(actions), actions_1_1 = actions_1.next(); !actions_1_1.done; actions_1_1 = actions_1.next()) {\n        var action = actions_1_1.value;\n\n        if (action.type === start$1) {\n          activities[action.activity.id || action.activity.type] = action;\n        } else if (action.type === stop$1) {\n          activities[action.activity.id || action.activity.type] = false;\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actions_1_1 && !actions_1_1.done && (_a = actions_1.return)) _a.call(actions_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    var _b = __read(resolveActions(this, currentState, currentContext, _event, actions), 2),\n        resolvedActions = _b[0],\n        updatedContext = _b[1];\n\n    var _c = __read(partition(resolvedActions, function (action) {\n      return action.type === raise$1 || action.type === send$1 && action.to === SpecialTargets.Internal;\n    }), 2),\n        raisedEvents = _c[0],\n        nonRaisedActions = _c[1];\n\n    var invokeActions = resolvedActions.filter(function (action) {\n      var _a;\n\n      return action.type === start$1 && ((_a = action.activity) === null || _a === void 0 ? void 0 : _a.type) === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine, updatedContext, _event);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var resolvedConfiguration = resolvedStateValue ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var meta = resolvedConfiguration.reduce(function (acc, stateNode) {\n      if (stateNode.meta !== undefined) {\n        acc[stateNode.id] = stateNode.meta;\n      }\n\n      return acc;\n    }, {});\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      meta: resolvedStateValue ? meta : currentState ? currentState.meta : undefined,\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone,\n      tags: currentState === null || currentState === void 0 ? void 0 : currentState.tags\n    });\n    var didUpdateContext = currentContext !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n\n    if (history) {\n      delete history.history;\n    }\n\n    if (!resolvedStateValue) {\n      return nextState;\n    }\n\n    var maybeNextState = nextState;\n\n    if (!isDone) {\n      var isTransient = this._transient || configuration.some(function (stateNode) {\n        return stateNode._transient;\n      });\n\n      if (isTransient) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event);\n      }\n\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event);\n      }\n    } // Detect if state changed\n\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.history = history;\n    maybeNextState.tags = new Set(flatten(maybeNextState.configuration.map(function (sn) {\n      return sn.tags;\n    })));\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\" + stateKey + \"' from '\" + this.id + \"'; no child states exist.\");\n    }\n\n    var result = this.states[stateKey];\n\n    if (!result) {\n      throw new Error(\"Child state '\" + stateKey + \"' does not exist on '\" + this.id + \"'\");\n    }\n\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n\n    var stateNode = this.machine.idMap[resolvedStateId];\n\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\" + resolvedStateId + \"' does not exist on machine '\" + this.id + \"'\");\n    }\n\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n\n      if (!key.length) {\n        break;\n      }\n\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n\n    var _this = this;\n\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n\n          return stateValue;\n        }\n\n        if (!keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\" + stateIdentifier + \"'\");\n      }\n\n      return stateNode.path;\n    }\n\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function get() {\n      var _a;\n\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n\n      var initialStateValue;\n\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\" + this.initial + \"' not found on '\" + this.key + \"'\");\n        }\n\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      } else {\n        // The finite state value of a machine without child states is just an empty object\n        initialStateValue = {};\n      }\n\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      entrySet: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, undefined, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function get() {\n      this._init(); // TODO: this should be in the constructor (see note in constructor)\n\n\n      var initialStateValue = this.initialStateValue;\n\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\" + this.id + \"'.\");\n      }\n\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function get() {\n      var target;\n\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n\n      return target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function get() {\n      var _this = this;\n\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\" + this.id + \"' has no initial state.\");\n        }\n\n        return [this];\n      }\n\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n\n    var _a = __read(relativePath),\n        stateKey = _a[0],\n        childStatePath = _a.slice(1);\n\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\" + stateKey + \"' from node with no states\");\n    }\n\n    var childStateNode = this.getStateNode(stateKey);\n\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\" + stateKey + \"' does not exist on '\" + this.id + \"'\");\n    }\n\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!keys(this.states).length) {\n      return undefined;\n    }\n\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n\n    if (this.type !== 'history') {\n      return [this];\n    }\n\n    var parent = this.parent;\n\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function get() {\n      var _this = this;\n\n      var childStateIds = flatten(keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function get() {\n      var e_7, _a, e_8, _b;\n\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n\n      if (states) {\n        try {\n          for (var _c = __values(keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n\n            if (state.states) {\n              try {\n                for (var _e = (e_8 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\" + event_1);\n                }\n              } catch (e_8_1) {\n                e_8 = {\n                  error: e_8_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_8) throw e_8.error;\n                }\n              }\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function get() {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\" + _this.id + \"':\\n\" + err.message);\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function toJSON() {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\" + t.id;\n          }) : undefined,\n          source: \"#\" + _this.id\n        });\n      }\n    });\n\n    return transition;\n  };\n\n  StateNode.prototype.formatTransitions = function () {\n    var e_9, _a;\n\n    var _this = this;\n\n    var onConfig;\n\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n          _c = WILDCARD,\n          _d = _b[_c],\n          wildcardConfigs = _d === void 0 ? [] : _d,\n          strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n\n      onConfig = flatten(keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + (\"Please check the `on` configuration for \\\"#\" + _this.id + \"\\\".\"));\n        }\n\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\" + this.id + \"\\\".\");\n    }\n\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone))));\n      }\n\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError))));\n      }\n\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(doneConfig)), __read(invokeConfig)), __read(onConfig)), __read(eventlessConfig)).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    return formattedTransitions;\n  };\n\n  return StateNode;\n}();\n\nexport { StateNode };","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map/node_modules/xstate/es/StateNode.js"],"names":["__assign","__values","__spreadArray","__read","__rest","STATE_DELIMITER","IS_PRODUCTION","mapValues","isArray","flatten","keys","toArray","toStateValue","isString","getEventType","matchesState","path","evaluateGuard","mapContext","toSCXMLEvent","pathToStateValue","isBuiltInEvent","partition","updateHistoryValue","toStatePath","mapFilterValues","warn","toStatePaths","nestedPath","normalizeTarget","toGuard","toTransitionConfigArray","isMachine","isFunction","SpecialTargets","getAllStateNodes","getConfiguration","isInFinalState","has","getChildren","getValue","isLeafNode","start","start$1","stop","stop$1","invoke","update","nullEvent","raise","raise$1","send","send$1","done","toActionObjects","resolveActions","doneInvoke","error","toActionObject","toActivityDefinition","after","cancel","initEvent","State","stateValuesEqual","createInvocableActor","toInvokeDefinition","NULL_EVENT","STATE_IDENTIFIER","WILDCARD","EMPTY_OBJECT","isStateId","str","createDefaultOptions","actions","guards","services","activities","delays","validateArrayifiedTransitions","stateNode","event","transitions","hasNonLastUnguardedTarget","slice","some","transition","target","eventText","id","StateNode","config","options","context","_this","undefined","_a","order","__xstatenode","__cache","events","relativeValue","Map","initialStateValue","initialState","on","candidates","delayedTransitions","idMap","tags","Object","assign","parent","_parent","key","_key","machine","concat","delimiter","join","version","type","parallel","states","length","history","schema","initial","stateConfig","dfs","e_1","_b","_c","next","child","value","e_1_1","return","call","_transient","always","Array","strict","onEntry","entry","map","action","onExit","exit","meta","doneData","data","invokeConfig","i","src","invokeSrc","invokeSource","activity","bind","prototype","_init","forEach","withConfig","withContext","defineProperty","get","state","definition","enumerable","configurable","toJSON","reduce","eventType","push","getDelayedTransitions","formatTransitions","getCandidates","eventName","transient","filter","sameEventType","afterConfig","mutateEntryExit","delay","delayRef","configTransition","resolvedTransition","resolvedDelay","isNaN","delayedTransition","formatTransition","getStateNodes","stateValue","getStateNode","subStateKeys","subStateNodes","subStateKey","allSubStateNodes","subStateNode","handles","includes","resolveState","configuration","from","resolve","transitionLeafNode","_event","transitionCompoundNode","_transition","transitionParallelNode","e_2","transitionMap","subStateValue","e_2_1","stateTransitions","enabledTransitions","st","willTransition","entryNodes","t","entrySet","exitSet","source","e_3","name","nextStateNodes","selectedTransition","candidate","cond","stateIn","in","resolvedContext","isInState","matches","getStateNodeById","guardPassed","err","Error","message","apply","e_3_1","allNextStateNodes","getRelativeStateNodes","historyValue","isInternal","internal","reentryNodes","n","nodesFromChild","childStateNode","escapes","nodes","marker","getActions","currentContext","prevState","e_4","e_5","prevConfig","resolvedConfig","resolvedConfig_1","resolvedConfig_1_1","sn","e_4_1","prevConfig_1","prevConfig_1_1","e_5_1","doneEvents","grandparent","every","parentNode","sort","a","b","entryStates","Set","exitStates","entryActions","exitActions","currentState","resolvedStateValue","getResolvedPath","stateTransition","resolveTransition","resolveRaisedTransition","originalEvent","currentActions","unshift","e_6","actions_1","actions_1_1","e_6_1","resolvedActions","updatedContext","to","Internal","raisedEvents","nonRaisedActions","invokeActions","children","acc","resolvedConfiguration","isDone","nextState","_sessionid","didUpdateContext","changed","maybeNextState","isTransient","raisedEvent","shift","stateKey","result","stateId","resolvedStateId","getStateNodeByPath","statePath","e","arrayStatePath","currentStateNode","stateIdentifier","getInitialState","historyConfig","relativeStateId","resolveHistory","initialStateNodes","initialStateNodePaths","initialPath","getFromRelativePath","relativePath","childStatePath","relativeStateValue","current","historyTarget","relativeChildPath","subHistoryValue","subStatePath","childStateIds","stateIds","e_7","e_8","ownEvents","_d","_e","_f","event_1","add","e_8_1","e_7_1","resolveTarget","_target","isInternalTarget","resolvedTarget","targetStateNode","transitionConfig","normalizedTarget","e_9","onConfig","wildcardConfigs","strictTransitionConfigs_1","transitionConfigArray","eventlessConfig","doneConfig","onDone","String","invokeDef","settleTransitions","onError","formattedTransitions","delayedTransitions_1","delayedTransitions_1_1","e_9_1"],"mappings":"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","sourcesContent":["import { __assign, __values, __spreadArray, __read, __rest } from './_virtual/_tslib.js';\nimport { STATE_DELIMITER } from './constants.js';\nimport { IS_PRODUCTION } from './environment.js';\nimport { mapValues, isArray, flatten, keys, toArray, toStateValue, isString, getEventType, matchesState, path, evaluateGuard, mapContext, toSCXMLEvent, pathToStateValue, isBuiltInEvent, partition, updateHistoryValue, toStatePath, mapFilterValues, warn, toStatePaths, nestedPath, normalizeTarget, toGuard, toTransitionConfigArray, isMachine, isFunction } from './utils.js';\nimport { SpecialTargets } from './types.js';\nimport { getAllStateNodes, getConfiguration, isInFinalState, has, getChildren, getValue, isLeafNode } from './stateUtils.js';\nimport { start as start$1, stop as stop$1, invoke, update, nullEvent, raise as raise$1, send as send$1 } from './actionTypes.js';\nimport { done, start, raise, stop, toActionObjects, resolveActions, doneInvoke, error, toActionObject, toActivityDefinition, after, send, cancel, initEvent } from './actions.js';\nimport { State, stateValuesEqual } from './State.js';\nimport { createInvocableActor } from './Actor.js';\nimport { toInvokeDefinition } from './invokeUtils.js';\nvar NULL_EVENT = '';\nvar STATE_IDENTIFIER = '#';\nvar WILDCARD = '*';\nvar EMPTY_OBJECT = {};\n\nvar isStateId = function (str) {\n  return str[0] === STATE_IDENTIFIER;\n};\n\nvar createDefaultOptions = function () {\n  return {\n    actions: {},\n    guards: {},\n    services: {},\n    activities: {},\n    delays: {}\n  };\n};\n\nvar validateArrayifiedTransitions = function (stateNode, event, transitions) {\n  var hasNonLastUnguardedTarget = transitions.slice(0, -1).some(function (transition) {\n    return !('cond' in transition) && !('in' in transition) && (isString(transition.target) || isMachine(transition.target));\n  });\n  var eventText = event === NULL_EVENT ? 'the transient event' : \"event '\" + event + \"'\";\n  warn(!hasNonLastUnguardedTarget, \"One or more transitions for \" + eventText + \" on state '\" + stateNode.id + \"' are unreachable. \" + \"Make sure that the default transition is the last one defined.\");\n};\n\nvar StateNode =\n/*#__PURE__*/\n\n/** @class */\nfunction () {\n  function StateNode(\n  /**\r\n   * The raw config used to create the machine.\r\n   */\n  config, options,\n  /**\r\n   * The initial extended state\r\n   */\n  context // TODO: this is unsafe, but we're removing it in v5 anyway\n  ) {\n    var _this = this;\n\n    if (context === void 0) {\n      context = undefined;\n    }\n\n    var _a;\n\n    this.config = config;\n    this.context = context;\n    /**\r\n     * The order this state node appears. Corresponds to the implicit SCXML document order.\r\n     */\n\n    this.order = -1;\n    this.__xstatenode = true;\n    this.__cache = {\n      events: undefined,\n      relativeValue: new Map(),\n      initialStateValue: undefined,\n      initialState: undefined,\n      on: undefined,\n      transitions: undefined,\n      candidates: {},\n      delayedTransitions: undefined\n    };\n    this.idMap = {};\n    this.tags = [];\n    this.options = Object.assign(createDefaultOptions(), options);\n    this.parent = this.options._parent;\n    this.key = this.config.key || this.options._key || this.config.id || '(machine)';\n    this.machine = this.parent ? this.parent.machine : this;\n    this.path = this.parent ? this.parent.path.concat(this.key) : [];\n    this.delimiter = this.config.delimiter || (this.parent ? this.parent.delimiter : STATE_DELIMITER);\n    this.id = this.config.id || __spreadArray([this.machine.key], __read(this.path)).join(this.delimiter);\n    this.version = this.parent ? this.parent.version : this.config.version;\n    this.type = this.config.type || (this.config.parallel ? 'parallel' : this.config.states && keys(this.config.states).length ? 'compound' : this.config.history ? 'history' : 'atomic');\n    this.schema = this.parent ? this.machine.schema : (_a = this.config.schema) !== null && _a !== void 0 ? _a : {};\n\n    if (!IS_PRODUCTION) {\n      warn(!('parallel' in this.config), \"The \\\"parallel\\\" property is deprecated and will be removed in version 4.1. \" + (this.config.parallel ? \"Replace with `type: 'parallel'`\" : \"Use `type: '\" + this.type + \"'`\") + \" in the config for state node '\" + this.id + \"' instead.\");\n    }\n\n    this.initial = this.config.initial;\n    this.states = this.config.states ? mapValues(this.config.states, function (stateConfig, key) {\n      var _a;\n\n      var stateNode = new StateNode(stateConfig, {\n        _parent: _this,\n        _key: key\n      });\n      Object.assign(_this.idMap, __assign((_a = {}, _a[stateNode.id] = stateNode, _a), stateNode.idMap));\n      return stateNode;\n    }) : EMPTY_OBJECT; // Document order\n\n    var order = 0;\n\n    function dfs(stateNode) {\n      var e_1, _a;\n\n      stateNode.order = order++;\n\n      try {\n        for (var _b = __values(getChildren(stateNode)), _c = _b.next(); !_c.done; _c = _b.next()) {\n          var child = _c.value;\n          dfs(child);\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n    }\n\n    dfs(this); // History config\n\n    this.history = this.config.history === true ? 'shallow' : this.config.history || false;\n    this._transient = !!this.config.always || (!this.config.on ? false : Array.isArray(this.config.on) ? this.config.on.some(function (_a) {\n      var event = _a.event;\n      return event === NULL_EVENT;\n    }) : NULL_EVENT in this.config.on);\n    this.strict = !!this.config.strict; // TODO: deprecate (entry)\n\n    this.onEntry = toArray(this.config.entry || this.config.onEntry).map(function (action) {\n      return toActionObject(action);\n    }); // TODO: deprecate (exit)\n\n    this.onExit = toArray(this.config.exit || this.config.onExit).map(function (action) {\n      return toActionObject(action);\n    });\n    this.meta = this.config.meta;\n    this.doneData = this.type === 'final' ? this.config.data : undefined;\n    this.invoke = toArray(this.config.invoke).map(function (invokeConfig, i) {\n      var _a, _b;\n\n      if (isMachine(invokeConfig)) {\n        _this.machine.options.services = __assign((_a = {}, _a[invokeConfig.id] = invokeConfig, _a), _this.machine.options.services);\n        return toInvokeDefinition({\n          src: invokeConfig.id,\n          id: invokeConfig.id\n        });\n      } else if (isString(invokeConfig.src)) {\n        return toInvokeDefinition(__assign(__assign({}, invokeConfig), {\n          id: invokeConfig.id || invokeConfig.src,\n          src: invokeConfig.src\n        }));\n      } else if (isMachine(invokeConfig.src) || isFunction(invokeConfig.src)) {\n        var invokeSrc = _this.id + \":invocation[\" + i + \"]\"; // TODO: util function\n\n        _this.machine.options.services = __assign((_b = {}, _b[invokeSrc] = invokeConfig.src, _b), _this.machine.options.services);\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeSrc\n        }, invokeConfig), {\n          src: invokeSrc\n        }));\n      } else {\n        var invokeSource = invokeConfig.src;\n        return toInvokeDefinition(__assign(__assign({\n          id: invokeSource.type\n        }, invokeConfig), {\n          src: invokeSource\n        }));\n      }\n    });\n    this.activities = toArray(this.config.activities).concat(this.invoke).map(function (activity) {\n      return toActivityDefinition(activity);\n    });\n    this.transition = this.transition.bind(this);\n    this.tags = toArray(this.config.tags); // TODO: this is the real fix for initialization once\n    // state node getters are deprecated\n    // if (!this.parent) {\n    //   this._init();\n    // }\n  }\n\n  StateNode.prototype._init = function () {\n    if (this.__cache.transitions) {\n      return;\n    }\n\n    getAllStateNodes(this).forEach(function (stateNode) {\n      return stateNode.on;\n    });\n  };\n  /**\r\n   * Clones this state machine with custom options and context.\r\n   *\r\n   * @param options Options (actions, guards, activities, services) to recursively merge with the existing options.\r\n   * @param context Custom context (will override predefined context)\r\n   */\n\n\n  StateNode.prototype.withConfig = function (options, context) {\n    if (context === void 0) {\n      context = this.context;\n    }\n\n    var _a = this.options,\n        actions = _a.actions,\n        activities = _a.activities,\n        guards = _a.guards,\n        services = _a.services,\n        delays = _a.delays;\n    return new StateNode(this.config, {\n      actions: __assign(__assign({}, actions), options.actions),\n      activities: __assign(__assign({}, activities), options.activities),\n      guards: __assign(__assign({}, guards), options.guards),\n      services: __assign(__assign({}, services), options.services),\n      delays: __assign(__assign({}, delays), options.delays)\n    }, context);\n  };\n  /**\r\n   * Clones this state machine with custom context.\r\n   *\r\n   * @param context Custom context (will override predefined context, not recursive)\r\n   */\n\n\n  StateNode.prototype.withContext = function (context) {\n    return new StateNode(this.config, this.options, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"definition\", {\n    /**\r\n     * The well-structured state node definition.\r\n     */\n    get: function () {\n      return {\n        id: this.id,\n        key: this.key,\n        version: this.version,\n        context: this.context,\n        type: this.type,\n        initial: this.initial,\n        history: this.history,\n        states: mapValues(this.states, function (state) {\n          return state.definition;\n        }),\n        on: this.on,\n        transitions: this.transitions,\n        entry: this.onEntry,\n        exit: this.onExit,\n        activities: this.activities || [],\n        meta: this.meta,\n        order: this.order || -1,\n        data: this.doneData,\n        invoke: this.invoke\n      };\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.toJSON = function () {\n    return this.definition;\n  };\n\n  Object.defineProperty(StateNode.prototype, \"on\", {\n    /**\r\n     * The mapping of events to transitions.\r\n     */\n    get: function () {\n      if (this.__cache.on) {\n        return this.__cache.on;\n      }\n\n      var transitions = this.transitions;\n      return this.__cache.on = transitions.reduce(function (map, transition) {\n        map[transition.eventType] = map[transition.eventType] || [];\n        map[transition.eventType].push(transition);\n        return map;\n      }, {});\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"after\", {\n    get: function () {\n      return this.__cache.delayedTransitions || (this.__cache.delayedTransitions = this.getDelayedTransitions(), this.__cache.delayedTransitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"transitions\", {\n    /**\r\n     * All the transitions that can be taken from this state node.\r\n     */\n    get: function () {\n      return this.__cache.transitions || (this.__cache.transitions = this.formatTransitions(), this.__cache.transitions);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getCandidates = function (eventName) {\n    if (this.__cache.candidates[eventName]) {\n      return this.__cache.candidates[eventName];\n    }\n\n    var transient = eventName === NULL_EVENT;\n    var candidates = this.transitions.filter(function (transition) {\n      var sameEventType = transition.eventType === eventName; // null events should only match against eventless transitions\n\n      return transient ? sameEventType : sameEventType || transition.eventType === WILDCARD;\n    });\n    this.__cache.candidates[eventName] = candidates;\n    return candidates;\n  };\n  /**\r\n   * All delayed transitions from the config.\r\n   */\n\n\n  StateNode.prototype.getDelayedTransitions = function () {\n    var _this = this;\n\n    var afterConfig = this.config.after;\n\n    if (!afterConfig) {\n      return [];\n    }\n\n    var mutateEntryExit = function (delay, i) {\n      var delayRef = isFunction(delay) ? _this.id + \":delay[\" + i + \"]\" : delay;\n      var eventType = after(delayRef, _this.id);\n\n      _this.onEntry.push(send(eventType, {\n        delay: delay\n      }));\n\n      _this.onExit.push(cancel(eventType));\n\n      return eventType;\n    };\n\n    var delayedTransitions = isArray(afterConfig) ? afterConfig.map(function (transition, i) {\n      var eventType = mutateEntryExit(transition.delay, i);\n      return __assign(__assign({}, transition), {\n        event: eventType\n      });\n    }) : flatten(keys(afterConfig).map(function (delay, i) {\n      var configTransition = afterConfig[delay];\n      var resolvedTransition = isString(configTransition) ? {\n        target: configTransition\n      } : configTransition;\n      var resolvedDelay = !isNaN(+delay) ? +delay : delay;\n      var eventType = mutateEntryExit(resolvedDelay, i);\n      return toArray(resolvedTransition).map(function (transition) {\n        return __assign(__assign({}, transition), {\n          event: eventType,\n          delay: resolvedDelay\n        });\n      });\n    }));\n    return delayedTransitions.map(function (delayedTransition) {\n      var delay = delayedTransition.delay;\n      return __assign(__assign({}, _this.formatTransition(delayedTransition)), {\n        delay: delay\n      });\n    });\n  };\n  /**\r\n   * Returns the state nodes represented by the current state value.\r\n   *\r\n   * @param state The state value or State instance\r\n   */\n\n\n  StateNode.prototype.getStateNodes = function (state) {\n    var _a;\n\n    var _this = this;\n\n    if (!state) {\n      return [];\n    }\n\n    var stateValue = state instanceof State ? state.value : toStateValue(state, this.delimiter);\n\n    if (isString(stateValue)) {\n      var initialStateValue = this.getStateNode(stateValue).initial;\n      return initialStateValue !== undefined ? this.getStateNodes((_a = {}, _a[stateValue] = initialStateValue, _a)) : [this, this.states[stateValue]];\n    }\n\n    var subStateKeys = keys(stateValue);\n    var subStateNodes = subStateKeys.map(function (subStateKey) {\n      return _this.getStateNode(subStateKey);\n    });\n    subStateNodes.push(this);\n    return subStateNodes.concat(subStateKeys.reduce(function (allSubStateNodes, subStateKey) {\n      var subStateNode = _this.getStateNode(subStateKey).getStateNodes(stateValue[subStateKey]);\n\n      return allSubStateNodes.concat(subStateNode);\n    }, []));\n  };\n  /**\r\n   * Returns `true` if this state node explicitly handles the given event.\r\n   *\r\n   * @param event The event in question\r\n   */\n\n\n  StateNode.prototype.handles = function (event) {\n    var eventType = getEventType(event);\n    return this.events.includes(eventType);\n  };\n  /**\r\n   * Resolves the given `state` to a new `State` instance relative to this machine.\r\n   *\r\n   * This ensures that `.events` and `.nextEvents` represent the correct values.\r\n   *\r\n   * @param state The state to resolve\r\n   */\n\n\n  StateNode.prototype.resolveState = function (state) {\n    var configuration = Array.from(getConfiguration([], this.getStateNodes(state.value)));\n    return new State(__assign(__assign({}, state), {\n      value: this.resolve(state.value),\n      configuration: configuration,\n      done: isInFinalState(configuration, this)\n    }));\n  };\n\n  StateNode.prototype.transitionLeafNode = function (stateValue, state, _event) {\n    var stateNode = this.getStateNode(stateValue);\n    var next = stateNode.next(state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionCompoundNode = function (stateValue, state, _event) {\n    var subStateKeys = keys(stateValue);\n    var stateNode = this.getStateNode(subStateKeys[0]);\n\n    var next = stateNode._transition(stateValue[subStateKeys[0]], state, _event);\n\n    if (!next || !next.transitions.length) {\n      return this.next(state, _event);\n    }\n\n    return next;\n  };\n\n  StateNode.prototype.transitionParallelNode = function (stateValue, state, _event) {\n    var e_2, _a;\n\n    var transitionMap = {};\n\n    try {\n      for (var _b = __values(keys(stateValue)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var subStateKey = _c.value;\n        var subStateValue = stateValue[subStateKey];\n\n        if (!subStateValue) {\n          continue;\n        }\n\n        var subStateNode = this.getStateNode(subStateKey);\n\n        var next = subStateNode._transition(subStateValue, state, _event);\n\n        if (next) {\n          transitionMap[subStateKey] = next;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    var stateTransitions = keys(transitionMap).map(function (key) {\n      return transitionMap[key];\n    });\n    var enabledTransitions = flatten(stateTransitions.map(function (st) {\n      return st.transitions;\n    }));\n    var willTransition = stateTransitions.some(function (st) {\n      return st.transitions.length > 0;\n    });\n\n    if (!willTransition) {\n      return this.next(state, _event);\n    }\n\n    var entryNodes = flatten(stateTransitions.map(function (t) {\n      return t.entrySet;\n    }));\n    var configuration = flatten(keys(transitionMap).map(function (key) {\n      return transitionMap[key].configuration;\n    }));\n    return {\n      transitions: enabledTransitions,\n      entrySet: entryNodes,\n      exitSet: flatten(stateTransitions.map(function (t) {\n        return t.exitSet;\n      })),\n      configuration: configuration,\n      source: state,\n      actions: flatten(keys(transitionMap).map(function (key) {\n        return transitionMap[key].actions;\n      }))\n    };\n  };\n\n  StateNode.prototype._transition = function (stateValue, state, _event) {\n    // leaf node\n    if (isString(stateValue)) {\n      return this.transitionLeafNode(stateValue, state, _event);\n    } // hierarchical node\n\n\n    if (keys(stateValue).length === 1) {\n      return this.transitionCompoundNode(stateValue, state, _event);\n    } // orthogonal node\n\n\n    return this.transitionParallelNode(stateValue, state, _event);\n  };\n\n  StateNode.prototype.next = function (state, _event) {\n    var e_3, _a;\n\n    var _this = this;\n\n    var eventName = _event.name;\n    var actions = [];\n    var nextStateNodes = [];\n    var selectedTransition;\n\n    try {\n      for (var _b = __values(this.getCandidates(eventName)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var candidate = _c.value;\n        var cond = candidate.cond,\n            stateIn = candidate.in;\n        var resolvedContext = state.context;\n        var isInState = stateIn ? isString(stateIn) && isStateId(stateIn) ? // Check if in state by ID\n        state.matches(toStateValue(this.getStateNodeById(stateIn).path, this.delimiter)) : // Check if in state by relative grandparent\n        matchesState(toStateValue(stateIn, this.delimiter), path(this.path.slice(0, -2))(state.value)) : true;\n        var guardPassed = false;\n\n        try {\n          guardPassed = !cond || evaluateGuard(this.machine, cond, resolvedContext, _event, state);\n        } catch (err) {\n          throw new Error(\"Unable to evaluate guard '\" + (cond.name || cond.type) + \"' in transition for event '\" + eventName + \"' in state node '\" + this.id + \"':\\n\" + err.message);\n        }\n\n        if (guardPassed && isInState) {\n          if (candidate.target !== undefined) {\n            nextStateNodes = candidate.target;\n          }\n\n          actions.push.apply(actions, __spreadArray([], __read(candidate.actions)));\n          selectedTransition = candidate;\n          break;\n        }\n      }\n    } catch (e_3_1) {\n      e_3 = {\n        error: e_3_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_3) throw e_3.error;\n      }\n    }\n\n    if (!selectedTransition) {\n      return undefined;\n    }\n\n    if (!nextStateNodes.length) {\n      return {\n        transitions: [selectedTransition],\n        entrySet: [],\n        exitSet: [],\n        configuration: state.value ? [this] : [],\n        source: state,\n        actions: actions\n      };\n    }\n\n    var allNextStateNodes = flatten(nextStateNodes.map(function (stateNode) {\n      return _this.getRelativeStateNodes(stateNode, state.historyValue);\n    }));\n    var isInternal = !!selectedTransition.internal;\n    var reentryNodes = isInternal ? [] : flatten(allNextStateNodes.map(function (n) {\n      return _this.nodesFromChild(n);\n    }));\n    return {\n      transitions: [selectedTransition],\n      entrySet: reentryNodes,\n      exitSet: isInternal ? [] : [this],\n      configuration: allNextStateNodes,\n      source: state,\n      actions: actions\n    };\n  };\n\n  StateNode.prototype.nodesFromChild = function (childStateNode) {\n    if (childStateNode.escapes(this)) {\n      return [];\n    }\n\n    var nodes = [];\n    var marker = childStateNode;\n\n    while (marker && marker !== this) {\n      nodes.push(marker);\n      marker = marker.parent;\n    }\n\n    nodes.push(this); // inclusive\n\n    return nodes;\n  };\n  /**\r\n   * Whether the given state node \"escapes\" this state node. If the `stateNode` is equal to or the parent of\r\n   * this state node, it does not escape.\r\n   */\n\n\n  StateNode.prototype.escapes = function (stateNode) {\n    if (this === stateNode) {\n      return false;\n    }\n\n    var parent = this.parent;\n\n    while (parent) {\n      if (parent === stateNode) {\n        return false;\n      }\n\n      parent = parent.parent;\n    }\n\n    return true;\n  };\n\n  StateNode.prototype.getActions = function (transition, currentContext, _event, prevState) {\n    var e_4, _a, e_5, _b;\n\n    var prevConfig = getConfiguration([], prevState ? this.getStateNodes(prevState.value) : [this]);\n    var resolvedConfig = transition.configuration.length ? getConfiguration(prevConfig, transition.configuration) : prevConfig;\n\n    try {\n      for (var resolvedConfig_1 = __values(resolvedConfig), resolvedConfig_1_1 = resolvedConfig_1.next(); !resolvedConfig_1_1.done; resolvedConfig_1_1 = resolvedConfig_1.next()) {\n        var sn = resolvedConfig_1_1.value;\n\n        if (!has(prevConfig, sn)) {\n          transition.entrySet.push(sn);\n        }\n      }\n    } catch (e_4_1) {\n      e_4 = {\n        error: e_4_1\n      };\n    } finally {\n      try {\n        if (resolvedConfig_1_1 && !resolvedConfig_1_1.done && (_a = resolvedConfig_1.return)) _a.call(resolvedConfig_1);\n      } finally {\n        if (e_4) throw e_4.error;\n      }\n    }\n\n    try {\n      for (var prevConfig_1 = __values(prevConfig), prevConfig_1_1 = prevConfig_1.next(); !prevConfig_1_1.done; prevConfig_1_1 = prevConfig_1.next()) {\n        var sn = prevConfig_1_1.value;\n\n        if (!has(resolvedConfig, sn) || has(transition.exitSet, sn.parent)) {\n          transition.exitSet.push(sn);\n        }\n      }\n    } catch (e_5_1) {\n      e_5 = {\n        error: e_5_1\n      };\n    } finally {\n      try {\n        if (prevConfig_1_1 && !prevConfig_1_1.done && (_b = prevConfig_1.return)) _b.call(prevConfig_1);\n      } finally {\n        if (e_5) throw e_5.error;\n      }\n    }\n\n    if (!transition.source) {\n      transition.exitSet = []; // Ensure that root StateNode (machine) is entered\n\n      transition.entrySet.push(this);\n    }\n\n    var doneEvents = flatten(transition.entrySet.map(function (sn) {\n      var events = [];\n\n      if (sn.type !== 'final') {\n        return events;\n      }\n\n      var parent = sn.parent;\n\n      if (!parent.parent) {\n        return events;\n      }\n\n      events.push(done(sn.id, sn.doneData), // TODO: deprecate - final states should not emit done events for their own state.\n      done(parent.id, sn.doneData ? mapContext(sn.doneData, currentContext, _event) : undefined));\n      var grandparent = parent.parent;\n\n      if (grandparent.type === 'parallel') {\n        if (getChildren(grandparent).every(function (parentNode) {\n          return isInFinalState(transition.configuration, parentNode);\n        })) {\n          events.push(done(grandparent.id));\n        }\n      }\n\n      return events;\n    }));\n    transition.exitSet.sort(function (a, b) {\n      return b.order - a.order;\n    });\n    transition.entrySet.sort(function (a, b) {\n      return a.order - b.order;\n    });\n    var entryStates = new Set(transition.entrySet);\n    var exitStates = new Set(transition.exitSet);\n\n    var _c = __read([flatten(Array.from(entryStates).map(function (stateNode) {\n      return __spreadArray(__spreadArray([], __read(stateNode.activities.map(function (activity) {\n        return start(activity);\n      }))), __read(stateNode.onEntry));\n    })).concat(doneEvents.map(raise)), flatten(Array.from(exitStates).map(function (stateNode) {\n      return __spreadArray(__spreadArray([], __read(stateNode.onExit)), __read(stateNode.activities.map(function (activity) {\n        return stop(activity);\n      })));\n    }))], 2),\n        entryActions = _c[0],\n        exitActions = _c[1];\n\n    var actions = toActionObjects(exitActions.concat(transition.actions).concat(entryActions), this.machine.options.actions);\n    return actions;\n  };\n  /**\r\n   * Determines the next state given the current `state` and sent `event`.\r\n   *\r\n   * @param state The current State instance or state value\r\n   * @param event The event that was sent at the current state\r\n   * @param context The current context (extended state) of the current state\r\n   */\n\n\n  StateNode.prototype.transition = function (state, event, context) {\n    if (state === void 0) {\n      state = this.initialState;\n    }\n\n    var _event = toSCXMLEvent(event);\n\n    var currentState;\n\n    if (state instanceof State) {\n      currentState = context === undefined ? state : this.resolveState(State.from(state, context));\n    } else {\n      var resolvedStateValue = isString(state) ? this.resolve(pathToStateValue(this.getResolvedPath(state))) : this.resolve(state);\n      var resolvedContext = context ? context : this.machine.context;\n      currentState = this.resolveState(State.from(resolvedStateValue, resolvedContext));\n    }\n\n    if (!IS_PRODUCTION && _event.name === WILDCARD) {\n      throw new Error(\"An event cannot have the wildcard type ('\" + WILDCARD + \"')\");\n    }\n\n    if (this.strict) {\n      if (!this.events.includes(_event.name) && !isBuiltInEvent(_event.name)) {\n        throw new Error(\"Machine '\" + this.id + \"' does not accept event '\" + _event.name + \"'\");\n      }\n    }\n\n    var stateTransition = this._transition(currentState.value, currentState, _event) || {\n      transitions: [],\n      configuration: [],\n      entrySet: [],\n      exitSet: [],\n      source: currentState,\n      actions: []\n    };\n    var prevConfig = getConfiguration([], this.getStateNodes(currentState.value));\n    var resolvedConfig = stateTransition.configuration.length ? getConfiguration(prevConfig, stateTransition.configuration) : prevConfig;\n    stateTransition.configuration = __spreadArray([], __read(resolvedConfig));\n    return this.resolveTransition(stateTransition, currentState, _event);\n  };\n\n  StateNode.prototype.resolveRaisedTransition = function (state, _event, originalEvent) {\n    var _a;\n\n    var currentActions = state.actions;\n    state = this.transition(state, _event); // Save original event to state\n    // TODO: this should be the raised event! Delete in V5 (breaking)\n\n    state._event = originalEvent;\n    state.event = originalEvent.data;\n\n    (_a = state.actions).unshift.apply(_a, __spreadArray([], __read(currentActions)));\n\n    return state;\n  };\n\n  StateNode.prototype.resolveTransition = function (stateTransition, currentState, _event, context) {\n    var e_6, _a;\n\n    var _this = this;\n\n    if (_event === void 0) {\n      _event = initEvent;\n    }\n\n    if (context === void 0) {\n      context = this.machine.context;\n    }\n\n    var configuration = stateTransition.configuration; // Transition will \"apply\" if:\n    // - this is the initial state (there is no current state)\n    // - OR there are transitions\n\n    var willTransition = !currentState || stateTransition.transitions.length > 0;\n    var resolvedStateValue = willTransition ? getValue(this.machine, configuration) : undefined;\n    var historyValue = currentState ? currentState.historyValue ? currentState.historyValue : stateTransition.source ? this.machine.historyValue(currentState.value) : undefined : undefined;\n    var currentContext = currentState ? currentState.context : context;\n    var actions = this.getActions(stateTransition, currentContext, _event, currentState);\n    var activities = currentState ? __assign({}, currentState.activities) : {};\n\n    try {\n      for (var actions_1 = __values(actions), actions_1_1 = actions_1.next(); !actions_1_1.done; actions_1_1 = actions_1.next()) {\n        var action = actions_1_1.value;\n\n        if (action.type === start$1) {\n          activities[action.activity.id || action.activity.type] = action;\n        } else if (action.type === stop$1) {\n          activities[action.activity.id || action.activity.type] = false;\n        }\n      }\n    } catch (e_6_1) {\n      e_6 = {\n        error: e_6_1\n      };\n    } finally {\n      try {\n        if (actions_1_1 && !actions_1_1.done && (_a = actions_1.return)) _a.call(actions_1);\n      } finally {\n        if (e_6) throw e_6.error;\n      }\n    }\n\n    var _b = __read(resolveActions(this, currentState, currentContext, _event, actions), 2),\n        resolvedActions = _b[0],\n        updatedContext = _b[1];\n\n    var _c = __read(partition(resolvedActions, function (action) {\n      return action.type === raise$1 || action.type === send$1 && action.to === SpecialTargets.Internal;\n    }), 2),\n        raisedEvents = _c[0],\n        nonRaisedActions = _c[1];\n\n    var invokeActions = resolvedActions.filter(function (action) {\n      var _a;\n\n      return action.type === start$1 && ((_a = action.activity) === null || _a === void 0 ? void 0 : _a.type) === invoke;\n    });\n    var children = invokeActions.reduce(function (acc, action) {\n      acc[action.activity.id] = createInvocableActor(action.activity, _this.machine, updatedContext, _event);\n      return acc;\n    }, currentState ? __assign({}, currentState.children) : {});\n    var resolvedConfiguration = resolvedStateValue ? stateTransition.configuration : currentState ? currentState.configuration : [];\n    var meta = resolvedConfiguration.reduce(function (acc, stateNode) {\n      if (stateNode.meta !== undefined) {\n        acc[stateNode.id] = stateNode.meta;\n      }\n\n      return acc;\n    }, {});\n    var isDone = isInFinalState(resolvedConfiguration, this);\n    var nextState = new State({\n      value: resolvedStateValue || currentState.value,\n      context: updatedContext,\n      _event: _event,\n      // Persist _sessionid between states\n      _sessionid: currentState ? currentState._sessionid : null,\n      historyValue: resolvedStateValue ? historyValue ? updateHistoryValue(historyValue, resolvedStateValue) : undefined : currentState ? currentState.historyValue : undefined,\n      history: !resolvedStateValue || stateTransition.source ? currentState : undefined,\n      actions: resolvedStateValue ? nonRaisedActions : [],\n      activities: resolvedStateValue ? activities : currentState ? currentState.activities : {},\n      meta: resolvedStateValue ? meta : currentState ? currentState.meta : undefined,\n      events: [],\n      configuration: resolvedConfiguration,\n      transitions: stateTransition.transitions,\n      children: children,\n      done: isDone,\n      tags: currentState === null || currentState === void 0 ? void 0 : currentState.tags\n    });\n    var didUpdateContext = currentContext !== updatedContext;\n    nextState.changed = _event.name === update || didUpdateContext; // Dispose of penultimate histories to prevent memory leaks\n\n    var history = nextState.history;\n\n    if (history) {\n      delete history.history;\n    }\n\n    if (!resolvedStateValue) {\n      return nextState;\n    }\n\n    var maybeNextState = nextState;\n\n    if (!isDone) {\n      var isTransient = this._transient || configuration.some(function (stateNode) {\n        return stateNode._transient;\n      });\n\n      if (isTransient) {\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, {\n          type: nullEvent\n        }, _event);\n      }\n\n      while (raisedEvents.length) {\n        var raisedEvent = raisedEvents.shift();\n        maybeNextState = this.resolveRaisedTransition(maybeNextState, raisedEvent._event, _event);\n      }\n    } // Detect if state changed\n\n\n    var changed = maybeNextState.changed || (history ? !!maybeNextState.actions.length || didUpdateContext || typeof history.value !== typeof maybeNextState.value || !stateValuesEqual(maybeNextState.value, history.value) : undefined);\n    maybeNextState.changed = changed; // Preserve original history after raised events\n\n    maybeNextState.history = history;\n    maybeNextState.tags = new Set(flatten(maybeNextState.configuration.map(function (sn) {\n      return sn.tags;\n    })));\n    return maybeNextState;\n  };\n  /**\r\n   * Returns the child state node from its relative `stateKey`, or throws.\r\n   */\n\n\n  StateNode.prototype.getStateNode = function (stateKey) {\n    if (isStateId(stateKey)) {\n      return this.machine.getStateNodeById(stateKey);\n    }\n\n    if (!this.states) {\n      throw new Error(\"Unable to retrieve child state '\" + stateKey + \"' from '\" + this.id + \"'; no child states exist.\");\n    }\n\n    var result = this.states[stateKey];\n\n    if (!result) {\n      throw new Error(\"Child state '\" + stateKey + \"' does not exist on '\" + this.id + \"'\");\n    }\n\n    return result;\n  };\n  /**\r\n   * Returns the state node with the given `stateId`, or throws.\r\n   *\r\n   * @param stateId The state ID. The prefix \"#\" is removed.\r\n   */\n\n\n  StateNode.prototype.getStateNodeById = function (stateId) {\n    var resolvedStateId = isStateId(stateId) ? stateId.slice(STATE_IDENTIFIER.length) : stateId;\n\n    if (resolvedStateId === this.id) {\n      return this;\n    }\n\n    var stateNode = this.machine.idMap[resolvedStateId];\n\n    if (!stateNode) {\n      throw new Error(\"Child state node '#\" + resolvedStateId + \"' does not exist on machine '\" + this.id + \"'\");\n    }\n\n    return stateNode;\n  };\n  /**\r\n   * Returns the relative state node from the given `statePath`, or throws.\r\n   *\r\n   * @param statePath The string or string array relative path to the state node.\r\n   */\n\n\n  StateNode.prototype.getStateNodeByPath = function (statePath) {\n    if (typeof statePath === 'string' && isStateId(statePath)) {\n      try {\n        return this.getStateNodeById(statePath.slice(1));\n      } catch (e) {// try individual paths\n        // throw e;\n      }\n    }\n\n    var arrayStatePath = toStatePath(statePath, this.delimiter).slice();\n    var currentStateNode = this;\n\n    while (arrayStatePath.length) {\n      var key = arrayStatePath.shift();\n\n      if (!key.length) {\n        break;\n      }\n\n      currentStateNode = currentStateNode.getStateNode(key);\n    }\n\n    return currentStateNode;\n  };\n  /**\r\n   * Resolves a partial state value with its full representation in this machine.\r\n   *\r\n   * @param stateValue The partial state value to resolve.\r\n   */\n\n\n  StateNode.prototype.resolve = function (stateValue) {\n    var _a;\n\n    var _this = this;\n\n    if (!stateValue) {\n      return this.initialStateValue || EMPTY_OBJECT; // TODO: type-specific properties\n    }\n\n    switch (this.type) {\n      case 'parallel':\n        return mapValues(this.initialStateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(stateValue[subStateKey] || subStateValue) : EMPTY_OBJECT;\n        });\n\n      case 'compound':\n        if (isString(stateValue)) {\n          var subStateNode = this.getStateNode(stateValue);\n\n          if (subStateNode.type === 'parallel' || subStateNode.type === 'compound') {\n            return _a = {}, _a[stateValue] = subStateNode.initialStateValue, _a;\n          }\n\n          return stateValue;\n        }\n\n        if (!keys(stateValue).length) {\n          return this.initialStateValue || {};\n        }\n\n        return mapValues(stateValue, function (subStateValue, subStateKey) {\n          return subStateValue ? _this.getStateNode(subStateKey).resolve(subStateValue) : EMPTY_OBJECT;\n        });\n\n      default:\n        return stateValue || EMPTY_OBJECT;\n    }\n  };\n\n  StateNode.prototype.getResolvedPath = function (stateIdentifier) {\n    if (isStateId(stateIdentifier)) {\n      var stateNode = this.machine.idMap[stateIdentifier.slice(STATE_IDENTIFIER.length)];\n\n      if (!stateNode) {\n        throw new Error(\"Unable to find state node '\" + stateIdentifier + \"'\");\n      }\n\n      return stateNode.path;\n    }\n\n    return toStatePath(stateIdentifier, this.delimiter);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateValue\", {\n    get: function () {\n      var _a;\n\n      if (this.__cache.initialStateValue) {\n        return this.__cache.initialStateValue;\n      }\n\n      var initialStateValue;\n\n      if (this.type === 'parallel') {\n        initialStateValue = mapFilterValues(this.states, function (state) {\n          return state.initialStateValue || EMPTY_OBJECT;\n        }, function (stateNode) {\n          return !(stateNode.type === 'history');\n        });\n      } else if (this.initial !== undefined) {\n        if (!this.states[this.initial]) {\n          throw new Error(\"Initial state '\" + this.initial + \"' not found on '\" + this.key + \"'\");\n        }\n\n        initialStateValue = isLeafNode(this.states[this.initial]) ? this.initial : (_a = {}, _a[this.initial] = this.states[this.initial].initialStateValue, _a);\n      } else {\n        // The finite state value of a machine without child states is just an empty object\n        initialStateValue = {};\n      }\n\n      this.__cache.initialStateValue = initialStateValue;\n      return this.__cache.initialStateValue;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.getInitialState = function (stateValue, context) {\n    var configuration = this.getStateNodes(stateValue);\n    return this.resolveTransition({\n      configuration: configuration,\n      entrySet: configuration,\n      exitSet: [],\n      transitions: [],\n      source: undefined,\n      actions: []\n    }, undefined, undefined, context);\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialState\", {\n    /**\r\n     * The initial State instance, which includes all actions to be executed from\r\n     * entering the initial state.\r\n     */\n    get: function () {\n      this._init(); // TODO: this should be in the constructor (see note in constructor)\n\n\n      var initialStateValue = this.initialStateValue;\n\n      if (!initialStateValue) {\n        throw new Error(\"Cannot retrieve initial state from simple state '\" + this.id + \"'.\");\n      }\n\n      return this.getInitialState(initialStateValue);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"target\", {\n    /**\r\n     * The target state value of the history state node, if it exists. This represents the\r\n     * default state value to transition to if no history value exists yet.\r\n     */\n    get: function () {\n      var target;\n\n      if (this.type === 'history') {\n        var historyConfig = this.config;\n\n        if (isString(historyConfig.target)) {\n          target = isStateId(historyConfig.target) ? pathToStateValue(this.machine.getStateNodeById(historyConfig.target).path.slice(this.path.length - 1)) : historyConfig.target;\n        } else {\n          target = historyConfig.target;\n        }\n      }\n\n      return target;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Returns the leaf nodes from a state path relative to this state node.\r\n   *\r\n   * @param relativeStateId The relative state path to retrieve the state nodes\r\n   * @param history The previous state to retrieve history\r\n   * @param resolve Whether state nodes should resolve to initial child state nodes\r\n   */\n\n  StateNode.prototype.getRelativeStateNodes = function (relativeStateId, historyValue, resolve) {\n    if (resolve === void 0) {\n      resolve = true;\n    }\n\n    return resolve ? relativeStateId.type === 'history' ? relativeStateId.resolveHistory(historyValue) : relativeStateId.initialStateNodes : [relativeStateId];\n  };\n\n  Object.defineProperty(StateNode.prototype, \"initialStateNodes\", {\n    get: function () {\n      var _this = this;\n\n      if (isLeafNode(this)) {\n        return [this];\n      } // Case when state node is compound but no initial state is defined\n\n\n      if (this.type === 'compound' && !this.initial) {\n        if (!IS_PRODUCTION) {\n          warn(false, \"Compound state node '\" + this.id + \"' has no initial state.\");\n        }\n\n        return [this];\n      }\n\n      var initialStateNodePaths = toStatePaths(this.initialStateValue);\n      return flatten(initialStateNodePaths.map(function (initialPath) {\n        return _this.getFromRelativePath(initialPath);\n      }));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\r\n   * Retrieves state nodes from a relative path to this state node.\r\n   *\r\n   * @param relativePath The relative path from this state node\r\n   * @param historyValue\r\n   */\n\n  StateNode.prototype.getFromRelativePath = function (relativePath) {\n    if (!relativePath.length) {\n      return [this];\n    }\n\n    var _a = __read(relativePath),\n        stateKey = _a[0],\n        childStatePath = _a.slice(1);\n\n    if (!this.states) {\n      throw new Error(\"Cannot retrieve subPath '\" + stateKey + \"' from node with no states\");\n    }\n\n    var childStateNode = this.getStateNode(stateKey);\n\n    if (childStateNode.type === 'history') {\n      return childStateNode.resolveHistory();\n    }\n\n    if (!this.states[stateKey]) {\n      throw new Error(\"Child state '\" + stateKey + \"' does not exist on '\" + this.id + \"'\");\n    }\n\n    return this.states[stateKey].getFromRelativePath(childStatePath);\n  };\n\n  StateNode.prototype.historyValue = function (relativeStateValue) {\n    if (!keys(this.states).length) {\n      return undefined;\n    }\n\n    return {\n      current: relativeStateValue || this.initialStateValue,\n      states: mapFilterValues(this.states, function (stateNode, key) {\n        if (!relativeStateValue) {\n          return stateNode.historyValue();\n        }\n\n        var subStateValue = isString(relativeStateValue) ? undefined : relativeStateValue[key];\n        return stateNode.historyValue(subStateValue || stateNode.initialStateValue);\n      }, function (stateNode) {\n        return !stateNode.history;\n      })\n    };\n  };\n  /**\r\n   * Resolves to the historical value(s) of the parent state node,\r\n   * represented by state nodes.\r\n   *\r\n   * @param historyValue\r\n   */\n\n\n  StateNode.prototype.resolveHistory = function (historyValue) {\n    var _this = this;\n\n    if (this.type !== 'history') {\n      return [this];\n    }\n\n    var parent = this.parent;\n\n    if (!historyValue) {\n      var historyTarget = this.target;\n      return historyTarget ? flatten(toStatePaths(historyTarget).map(function (relativeChildPath) {\n        return parent.getFromRelativePath(relativeChildPath);\n      })) : parent.initialStateNodes;\n    }\n\n    var subHistoryValue = nestedPath(parent.path, 'states')(historyValue).current;\n\n    if (isString(subHistoryValue)) {\n      return [parent.getStateNode(subHistoryValue)];\n    }\n\n    return flatten(toStatePaths(subHistoryValue).map(function (subStatePath) {\n      return _this.history === 'deep' ? parent.getFromRelativePath(subStatePath) : [parent.states[subStatePath[0]]];\n    }));\n  };\n\n  Object.defineProperty(StateNode.prototype, \"stateIds\", {\n    /**\r\n     * All the state node IDs of this state node and its descendant state nodes.\r\n     */\n    get: function () {\n      var _this = this;\n\n      var childStateIds = flatten(keys(this.states).map(function (stateKey) {\n        return _this.states[stateKey].stateIds;\n      }));\n      return [this.id].concat(childStateIds);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"events\", {\n    /**\r\n     * All the event types accepted by this state node and its descendants.\r\n     */\n    get: function () {\n      var e_7, _a, e_8, _b;\n\n      if (this.__cache.events) {\n        return this.__cache.events;\n      }\n\n      var states = this.states;\n      var events = new Set(this.ownEvents);\n\n      if (states) {\n        try {\n          for (var _c = __values(keys(states)), _d = _c.next(); !_d.done; _d = _c.next()) {\n            var stateId = _d.value;\n            var state = states[stateId];\n\n            if (state.states) {\n              try {\n                for (var _e = (e_8 = void 0, __values(state.events)), _f = _e.next(); !_f.done; _f = _e.next()) {\n                  var event_1 = _f.value;\n                  events.add(\"\" + event_1);\n                }\n              } catch (e_8_1) {\n                e_8 = {\n                  error: e_8_1\n                };\n              } finally {\n                try {\n                  if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n                } finally {\n                  if (e_8) throw e_8.error;\n                }\n              }\n            }\n          }\n        } catch (e_7_1) {\n          e_7 = {\n            error: e_7_1\n          };\n        } finally {\n          try {\n            if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n          } finally {\n            if (e_7) throw e_7.error;\n          }\n        }\n      }\n\n      return this.__cache.events = Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(StateNode.prototype, \"ownEvents\", {\n    /**\r\n     * All the events that have transitions directly from this state node.\r\n     *\r\n     * Excludes any inert events.\r\n     */\n    get: function () {\n      var events = new Set(this.transitions.filter(function (transition) {\n        return !(!transition.target && !transition.actions.length && transition.internal);\n      }).map(function (transition) {\n        return transition.eventType;\n      }));\n      return Array.from(events);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  StateNode.prototype.resolveTarget = function (_target) {\n    var _this = this;\n\n    if (_target === undefined) {\n      // an undefined target signals that the state node should not transition from that state when receiving that event\n      return undefined;\n    }\n\n    return _target.map(function (target) {\n      if (!isString(target)) {\n        return target;\n      }\n\n      var isInternalTarget = target[0] === _this.delimiter; // If internal target is defined on machine,\n      // do not include machine key on target\n\n      if (isInternalTarget && !_this.parent) {\n        return _this.getStateNodeByPath(target.slice(1));\n      }\n\n      var resolvedTarget = isInternalTarget ? _this.key + target : target;\n\n      if (_this.parent) {\n        try {\n          var targetStateNode = _this.parent.getStateNodeByPath(resolvedTarget);\n\n          return targetStateNode;\n        } catch (err) {\n          throw new Error(\"Invalid transition definition for state node '\" + _this.id + \"':\\n\" + err.message);\n        }\n      } else {\n        return _this.getStateNodeByPath(resolvedTarget);\n      }\n    });\n  };\n\n  StateNode.prototype.formatTransition = function (transitionConfig) {\n    var _this = this;\n\n    var normalizedTarget = normalizeTarget(transitionConfig.target);\n    var internal = 'internal' in transitionConfig ? transitionConfig.internal : normalizedTarget ? normalizedTarget.some(function (_target) {\n      return isString(_target) && _target[0] === _this.delimiter;\n    }) : true;\n    var guards = this.machine.options.guards;\n    var target = this.resolveTarget(normalizedTarget);\n\n    var transition = __assign(__assign({}, transitionConfig), {\n      actions: toActionObjects(toArray(transitionConfig.actions)),\n      cond: toGuard(transitionConfig.cond, guards),\n      target: target,\n      source: this,\n      internal: internal,\n      eventType: transitionConfig.event,\n      toJSON: function () {\n        return __assign(__assign({}, transition), {\n          target: transition.target ? transition.target.map(function (t) {\n            return \"#\" + t.id;\n          }) : undefined,\n          source: \"#\" + _this.id\n        });\n      }\n    });\n\n    return transition;\n  };\n\n  StateNode.prototype.formatTransitions = function () {\n    var e_9, _a;\n\n    var _this = this;\n\n    var onConfig;\n\n    if (!this.config.on) {\n      onConfig = [];\n    } else if (Array.isArray(this.config.on)) {\n      onConfig = this.config.on;\n    } else {\n      var _b = this.config.on,\n          _c = WILDCARD,\n          _d = _b[_c],\n          wildcardConfigs = _d === void 0 ? [] : _d,\n          strictTransitionConfigs_1 = __rest(_b, [typeof _c === \"symbol\" ? _c : _c + \"\"]);\n\n      onConfig = flatten(keys(strictTransitionConfigs_1).map(function (key) {\n        if (!IS_PRODUCTION && key === NULL_EVENT) {\n          warn(false, \"Empty string transition configs (e.g., `{ on: { '': ... }}`) for transient transitions are deprecated. Specify the transition in the `{ always: ... }` property instead. \" + (\"Please check the `on` configuration for \\\"#\" + _this.id + \"\\\".\"));\n        }\n\n        var transitionConfigArray = toTransitionConfigArray(key, strictTransitionConfigs_1[key]);\n\n        if (!IS_PRODUCTION) {\n          validateArrayifiedTransitions(_this, key, transitionConfigArray);\n        }\n\n        return transitionConfigArray;\n      }).concat(toTransitionConfigArray(WILDCARD, wildcardConfigs)));\n    }\n\n    var eventlessConfig = this.config.always ? toTransitionConfigArray('', this.config.always) : [];\n    var doneConfig = this.config.onDone ? toTransitionConfigArray(String(done(this.id)), this.config.onDone) : [];\n\n    if (!IS_PRODUCTION) {\n      warn(!(this.config.onDone && !this.parent), \"Root nodes cannot have an \\\".onDone\\\" transition. Please check the config of \\\"\" + this.id + \"\\\".\");\n    }\n\n    var invokeConfig = flatten(this.invoke.map(function (invokeDef) {\n      var settleTransitions = [];\n\n      if (invokeDef.onDone) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(doneInvoke(invokeDef.id)), invokeDef.onDone))));\n      }\n\n      if (invokeDef.onError) {\n        settleTransitions.push.apply(settleTransitions, __spreadArray([], __read(toTransitionConfigArray(String(error(invokeDef.id)), invokeDef.onError))));\n      }\n\n      return settleTransitions;\n    }));\n    var delayedTransitions = this.after;\n    var formattedTransitions = flatten(__spreadArray(__spreadArray(__spreadArray(__spreadArray([], __read(doneConfig)), __read(invokeConfig)), __read(onConfig)), __read(eventlessConfig)).map(function (transitionConfig) {\n      return toArray(transitionConfig).map(function (transition) {\n        return _this.formatTransition(transition);\n      });\n    }));\n\n    try {\n      for (var delayedTransitions_1 = __values(delayedTransitions), delayedTransitions_1_1 = delayedTransitions_1.next(); !delayedTransitions_1_1.done; delayedTransitions_1_1 = delayedTransitions_1.next()) {\n        var delayedTransition = delayedTransitions_1_1.value;\n        formattedTransitions.push(delayedTransition);\n      }\n    } catch (e_9_1) {\n      e_9 = {\n        error: e_9_1\n      };\n    } finally {\n      try {\n        if (delayedTransitions_1_1 && !delayedTransitions_1_1.done && (_a = delayedTransitions_1.return)) _a.call(delayedTransitions_1);\n      } finally {\n        if (e_9) throw e_9.error;\n      }\n    }\n\n    return formattedTransitions;\n  };\n\n  return StateNode;\n}();\n\nexport { StateNode };"]},"metadata":{},"sourceType":"module"}
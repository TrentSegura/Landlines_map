{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/2021/landlines_map/src/components/LandMarks.js\";\nimport React from 'react';\nimport LandmarksData from '../data/map.json';\nimport mapboxgl from 'mapbox-gl';\nimport './LandMarks.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandMarks = ({\n  map\n}) => {\n  if (map) {\n    LandmarksData.features.forEach(landmark => {\n      const coord = [landmark.geometry.coordinates[0], landmark.geometry.coordinates[1]];\n      const popup = new mapboxgl.Popup();\n      popup.setHTML(landmark.properties.images ? `\n                <div class=\"pins\">\n               \n                <div class=\"pb-container\">\n                <img src=\"http://richardsaxton.org/websites/m12_landlines/landmarks/${landmark.properties.images}\">\n                </div>\n                              \n                <h3>${landmark.properties.name}</h3>\n                </div>\n                \n                ` : `\n\n                <div class=\"pins\">\n                <h3>${landmark.properties.name}</h3>\n                </div>\n                \n                `);\n      var el = document.createElement('div');\n      el.id = 'pin-marker';\n      map.on('mouseenter', 'LandmarksData', function (e) {\n        // Change the cursor style as a UI indicator.\n        map.getCanvas().style.cursor = 'pointer';\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var description = e.features[0].properties.description; // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        } // Populate the popup and set its coordinates\n        // based on the feature found.\n\n\n        popup.setLngLat(coordinates).setHTML(description).addTo(map);\n      });\n      map.on('mouseleave', 'places', function () {\n        map.getCanvas().style.cursor = '';\n        popup.remove();\n      });\n      const marker = new mapboxgl.Marker(el);\n      marker.setPopup(popup);\n      marker.setLngLat(coord);\n      marker.addTo(map);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LandMarks;\nexport default LandMarks;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandMarks\");","map":{"version":3,"sources":["/Users/trent/Sites/2021/landlines_map/src/components/LandMarks.js"],"names":["React","LandmarksData","mapboxgl","LandMarks","map","features","forEach","landmark","coord","geometry","coordinates","popup","Popup","setHTML","properties","images","name","el","document","createElement","id","on","e","getCanvas","style","cursor","slice","description","Math","abs","lngLat","lng","setLngLat","addTo","remove","marker","Marker","setPopup"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,iBAAP;;;AAGA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAE3B,MAAGA,GAAH,EAAO;AACHH,IAAAA,aAAa,CAACI,QAAd,CAAuBC,OAAvB,CAAgCC,QAAD,IAAa;AACxC,YAAMC,KAAK,GAAG,CAACD,QAAQ,CAACE,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,CAAD,EAAmCH,QAAQ,CAACE,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,CAAnC,CAAd;AACA,YAAMC,KAAK,GAAG,IAAIT,QAAQ,CAACU,KAAb,EAAd;AAGAD,MAAAA,KAAK,CAACE,OAAN,CACIN,QAAQ,CAACO,UAAT,CAAoBC,MAApB,GAEC;AACjB;AACA;AACA;AACA,sFAAsFR,QAAQ,CAACO,UAAT,CAAoBC,MAAO;AACjH;AACA;AACA,sBAAsBR,QAAQ,CAACO,UAAT,CAAoBE,IAAK;AAC/C;AACA;AACA,iBAZgB,GAgBC;AACjB;AACA;AACA,sBAAsBT,QAAQ,CAACO,UAAT,CAAoBE,IAAK;AAC/C;AACA;AACA,iBAvBY;AAyBA,UAAIC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAT;AACAF,MAAAA,EAAE,CAACG,EAAH,GAAQ,YAAR;AAEAhB,MAAAA,GAAG,CAACiB,EAAJ,CAAO,YAAP,EAAqB,eAArB,EAAsC,UAAUC,CAAV,EAAa;AAC/C;AACAlB,QAAAA,GAAG,CAACmB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,SAA/B;AAEA,YAAIf,WAAW,GAAGY,CAAC,CAACjB,QAAF,CAAW,CAAX,EAAcI,QAAd,CAAuBC,WAAvB,CAAmCgB,KAAnC,EAAlB;AACA,YAAIC,WAAW,GAAGL,CAAC,CAACjB,QAAF,CAAW,CAAX,EAAcS,UAAd,CAAyBa,WAA3C,CAL+C,CAO/C;AACA;AACA;;AACA,eAAOC,IAAI,CAACC,GAAL,CAASP,CAAC,CAACQ,MAAF,CAASC,GAAT,GAAerB,WAAW,CAAC,CAAD,CAAnC,IAA0C,GAAjD,EAAsD;AACtDA,UAAAA,WAAW,CAAC,CAAD,CAAX,IAAkBY,CAAC,CAACQ,MAAF,CAASC,GAAT,GAAerB,WAAW,CAAC,CAAD,CAA1B,GAAgC,GAAhC,GAAsC,CAAC,GAAzD;AACC,SAZ8C,CAc/C;AACA;;;AACAC,QAAAA,KAAK,CAACqB,SAAN,CAAgBtB,WAAhB,EAA6BG,OAA7B,CAAqCc,WAArC,EAAkDM,KAAlD,CAAwD7B,GAAxD;AACC,OAjBL;AAmBIA,MAAAA,GAAG,CAACiB,EAAJ,CAAO,YAAP,EAAqB,QAArB,EAA+B,YAAY;AAC3CjB,QAAAA,GAAG,CAACmB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,EAA/B;AACAd,QAAAA,KAAK,CAACuB,MAAN;AACC,OAHD;AAKJ,YAAMC,MAAM,GAAG,IAAIjC,QAAQ,CAACkC,MAAb,CAAoBnB,EAApB,CAAf;AACAkB,MAAAA,MAAM,CAACE,QAAP,CAAgB1B,KAAhB;AACAwB,MAAAA,MAAM,CAACH,SAAP,CAAiBxB,KAAjB;AACA2B,MAAAA,MAAM,CAACF,KAAP,CAAa7B,GAAb;AACH,KA7DD;AA8DH;;AAGD,sBACI;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAzED;;KAAMD,S;AA2EN,eAAeA,SAAf","sourcesContent":["import React from 'react'\nimport LandmarksData from '../data/map.json'\nimport mapboxgl from 'mapbox-gl';\nimport './LandMarks.css'\n\n\nconst LandMarks = ({ map }) => {\n\n    if(map){\n        LandmarksData.features.forEach((landmark) =>{\n            const coord = [landmark.geometry.coordinates[0], landmark.geometry.coordinates[1]]\n            const popup = new mapboxgl.Popup()\n               \n\n            popup.setHTML(\n                landmark.properties.images ?\n\n                `\n                <div class=\"pins\">\n               \n                <div class=\"pb-container\">\n                <img src=\"http://richardsaxton.org/websites/m12_landlines/landmarks/${landmark.properties.images}\">\n                </div>\n                              \n                <h3>${landmark.properties.name}</h3>\n                </div>\n                \n                `               \n\n                :\n\n                `\n\n                <div class=\"pins\">\n                <h3>${landmark.properties.name}</h3>\n                </div>\n                \n                ` )    \n\n            var el = document.createElement('div');\n            el.id = 'pin-marker';\n\n            map.on('mouseenter', 'LandmarksData', function (e) {\n                // Change the cursor style as a UI indicator.\n                map.getCanvas().style.cursor = 'pointer';\n                 \n                var coordinates = e.features[0].geometry.coordinates.slice();\n                var description = e.features[0].properties.description;\n                 \n                // Ensure that if the map is zoomed out such that multiple\n                // copies of the feature are visible, the popup appears\n                // over the copy being pointed to.\n                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n                }\n                 \n                // Populate the popup and set its coordinates\n                // based on the feature found.\n                popup.setLngLat(coordinates).setHTML(description).addTo(map);\n                });\n                 \n                map.on('mouseleave', 'places', function () {\n                map.getCanvas().style.cursor = '';\n                popup.remove();\n                });\n\n            const marker = new mapboxgl.Marker(el)\n            marker.setPopup(popup)\n            marker.setLngLat(coord)\n            marker.addTo(map)\n        })\n    }\n    \n\n    return (\n        <div>\n           \n        </div>\n    )\n}\n\nexport default LandMarks\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport Landmark from \"../Landmark\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landmarks = ({\n  map\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (map) {\n      Pins.features.forEach((pin, index) => {\n        const ref = React.createRef;\n        ref.current = document.createElement(\"div\");\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(Landmark, {\n          onClick: handleClick,\n          map: map,\n          pin: pin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this), ref.current);\n        new mapboxgl.Marker(ref.current).setLngLat(pin.geometry.coordinates).addTo(map);\n      });\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Landmarks, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Landmarks;\nexport default Landmarks; // const coord = [pin.geometry.coordinates[0], pin.geometry.coordinates[1]];\n// const popup = new mapboxgl.Popup();\n// const popupNode = document.createElement(\"div\");\n// const handleClick = () => {\n//   ReactDOM.render(<PopupContainer />, popupNode);\n//   console.log(\"cloiked\");\n//   popup.setLngLat(coord).setDOMContent(popupNode).addTo(map);\n// };\n// const handleMoveOff = () => {\n//   popup.remove();\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"Landmarks\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx"],"names":["React","useEffect","Pins","mapboxgl","ReactDOM","Landmark","Landmarks","map","features","forEach","pin","index","ref","createRef","current","document","createElement","render","handleClick","Marker","setLngLat","geometry","coordinates","addTo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC7BN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,GAAJ,EAAS;AACPL,MAAAA,IAAI,CAACM,QAAL,CAAcC,OAAd,CAAsB,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpC,cAAMC,GAAG,GAAGZ,KAAK,CAACa,SAAlB;AACAD,QAAAA,GAAG,CAACE,OAAJ,GAAcC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AAEAZ,QAAAA,QAAQ,CAACa,MAAT,eACE,QAAC,QAAD;AAAU,UAAA,OAAO,EAAEC,WAAnB;AAAgC,UAAA,GAAG,EAAEX,GAArC;AAA0C,UAAA,GAAG,EAAEG;AAA/C;AAAA;AAAA;AAAA;AAAA,gBADF,EAEEE,GAAG,CAACE,OAFN;AAKA,YAAIX,QAAQ,CAACgB,MAAb,CAAoBP,GAAG,CAACE,OAAxB,EACGM,SADH,CACaV,GAAG,CAACW,QAAJ,CAAaC,WAD1B,EAEGC,KAFH,CAEShB,GAFT;AAGD,OAZD;AAaD;AACF,GAhBQ,EAgBN,CAACA,GAAD,CAhBM,CAAT,CAD6B,CAiBlB;;AAEX,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CApBD;;GAAMD,S;;KAAAA,S;AAsBN,eAAeA,SAAf,C,CAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA","sourcesContent":["import React, { useEffect } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport Landmark from \"../Landmark\";\n\nconst Landmarks = ({ map }) => {\n  useEffect(() => {\n    if (map) {\n      Pins.features.forEach((pin, index) => {\n        const ref = React.createRef;\n        ref.current = document.createElement(\"div\");\n\n        ReactDOM.render(\n          <Landmark onClick={handleClick} map={map} pin={pin} />,\n          ref.current\n        );\n\n        new mapboxgl.Marker(ref.current)\n          .setLngLat(pin.geometry.coordinates)\n          .addTo(map);\n      });\n    }\n  }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <div></div>;\n};\n\nexport default Landmarks;\n\n// const coord = [pin.geometry.coordinates[0], pin.geometry.coordinates[1]];\n// const popup = new mapboxgl.Popup();\n// const popupNode = document.createElement(\"div\");\n\n// const handleClick = () => {\n//   ReactDOM.render(<PopupContainer />, popupNode);\n\n//   console.log(\"cloiked\");\n\n//   popup.setLngLat(coord).setDOMContent(popupNode).addTo(map);\n// };\n\n// const handleMoveOff = () => {\n//   popup.remove();\n// };\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport Landmark from \"../Landmark\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landmarks = ({\n  map\n}) => {\n  _s();\n\n  const [isPopupOpen, setIsPopupOpen] = useState(false); // useEffect(() => {\n  //   if (map) {\n  //     Pins.features.forEach((pin, index) => {\n  //       const ref = React.createRef;\n  //       ref.current = document.createElement(\"div\");\n  //       const clicked = () => {\n  //         console.log(\"lol this sucks\");\n  //       };\n  //       ReactDOM.render(\n  //         <Landmark onMouseEnter={clicked} map={map} pin={pin} />,\n  //         ref.current\n  //       );\n  //       new mapboxgl.Marker(ref.current)\n  //         .setLngLat(pin.geometry.coordinates)\n  //         .addTo(map);\n  //     });\n  //   }\n  // }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Landmarks, \"vFErrUU1qYQoaBmFpaEBY5pk8jE=\");\n\n_c = Landmarks;\nexport default Landmarks; // import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n// const Landmark = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       map.on(\"load\", function () {\n//         map.loadImage(\"./assets/whitecircle.svg\", (error, image) => {\n//           if (error) throw error;\n//           // Add the image to the map style.\n//           map.addImage(\"dot\", image);\n//           // Add a data source containing one point feature.\n//           map.addSource(\"point\", {\n//             type: \"geojson\",\n//             data: Pins,\n//           });\n//           // Add a layer to use the image to represent the data.\n//           map.addLayer({\n//             id: \"points\",\n//             type: \"symbol\",\n//             source: \"point\", // reference the data source\n//             layout: {\n//               \"icon-image\": \"dot\", // reference the image\n//               \"icon-size\": 0.1,\n//             },\n//           });\n//         });\n//       });\n//       map.on(\"mousemove\", \"points\", () => {});\n//     }\n//   });\n//   return <div></div>;\n// };\n// export default Landmark;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landmarks\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx"],"names":["React","useState","Pins","mapboxgl","ReactDOM","Landmark","Landmarks","map","isPopupOpen","setIsPopupOpen"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,aAArB;;;AAEA,MAAMC,SAAS,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC7B,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,KAAD,CAA9C,CAD6B,CAE7B;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAzBD;;GAAMK,S;;KAAAA,S;AA2BN,eAAeA,SAAf,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport Landmark from \"../Landmark\";\n\nconst Landmarks = ({ map }) => {\n  const [isPopupOpen, setIsPopupOpen] = useState(false);\n  // useEffect(() => {\n  //   if (map) {\n  //     Pins.features.forEach((pin, index) => {\n  //       const ref = React.createRef;\n  //       ref.current = document.createElement(\"div\");\n\n  //       const clicked = () => {\n  //         console.log(\"lol this sucks\");\n  //       };\n\n  //       ReactDOM.render(\n  //         <Landmark onMouseEnter={clicked} map={map} pin={pin} />,\n  //         ref.current\n  //       );\n\n  //       new mapboxgl.Marker(ref.current)\n  //         .setLngLat(pin.geometry.coordinates)\n  //         .addTo(map);\n  //     });\n  //   }\n  // }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return <div></div>;\n};\n\nexport default Landmarks;\n\n// import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n\n// const Landmark = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       map.on(\"load\", function () {\n//         map.loadImage(\"./assets/whitecircle.svg\", (error, image) => {\n//           if (error) throw error;\n\n//           // Add the image to the map style.\n//           map.addImage(\"dot\", image);\n\n//           // Add a data source containing one point feature.\n//           map.addSource(\"point\", {\n//             type: \"geojson\",\n//             data: Pins,\n//           });\n\n//           // Add a layer to use the image to represent the data.\n//           map.addLayer({\n//             id: \"points\",\n//             type: \"symbol\",\n//             source: \"point\", // reference the data source\n//             layout: {\n//               \"icon-image\": \"dot\", // reference the image\n//               \"icon-size\": 0.1,\n//             },\n//           });\n//         });\n//       });\n\n//       map.on(\"mousemove\", \"points\", () => {});\n//     }\n//   });\n//   return <div></div>;\n// };\n\n// export default Landmark;\n"]},"metadata":{},"sourceType":"module"}
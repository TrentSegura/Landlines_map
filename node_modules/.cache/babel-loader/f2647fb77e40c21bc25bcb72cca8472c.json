{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/LandmarksComponent/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport PopupContainer from \"../PopupContainer\";\nimport Landmarks from \"../../data/map.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LandmarksComponent = ({\n  map\n}) => {\n  _s();\n\n  const popUpRef = useRef(new mapboxgl.Popup({\n    offset: 15\n  }));\n\n  if (map) {\n    map.on(\"load\", () => {\n      // // Landmarks (aka ⚪ )\n      map.addSource(\"landmarks\", {\n        type: \"geojson\",\n        data: Landmarks\n      });\n      map.addLayer({\n        id: \"landmarks\",\n        type: \"circle\",\n        source: \"landmarks\",\n        paint: {\n          \"circle-radius\": 10,\n          \"circle-color\": \"white\",\n          \"circle-stroke-color\": \"white\",\n          \"circle-stroke-width\": 1,\n          \"circle-opacity\": 0.5\n        }\n      });\n    });\n    map.on(\"click\", e => {\n      const features = map.queryRenderedFeatures(e.point, {\n        layers: [\"landmarks\"]\n      });\n      map.getCanvas().style.cursor = \"pointer\";\n\n      if (features.length > 0) {\n        const feature = features[0]; // create popup node\n\n        const popupNode = document.createElement(\"div\");\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(PopupContainer, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 25\n        }, this), popupNode);\n        popUpRef.current.setLngLat(e.lngLat).setDOMContent(popupNode).addTo(map);\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n};\n\n_s(LandmarksComponent, \"oRU6t6gT8gG09edoKqmsQ5gt6ww=\");\n\n_c = LandmarksComponent;\nexport default LandmarksComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"LandmarksComponent\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/LandmarksComponent/index.jsx"],"names":["React","useRef","mapboxgl","ReactDOM","PopupContainer","Landmarks","LandmarksComponent","map","popUpRef","Popup","offset","on","addSource","type","data","addLayer","id","source","paint","e","features","queryRenderedFeatures","point","layers","getCanvas","style","cursor","length","feature","popupNode","document","createElement","render","current","setLngLat","lngLat","setDOMContent","addTo"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,QAA8B,OAA9B;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AAEA,OAAOC,SAAP,MAAsB,qBAAtB;;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AACtC,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAIC,QAAQ,CAACO,KAAb,CAAmB;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAAnB,CAAD,CAAvB;;AAEA,MAAIH,GAAJ,EAAS;AACPA,IAAAA,GAAG,CAACI,EAAJ,CAAO,MAAP,EAAe,MAAM;AACnB;AACAJ,MAAAA,GAAG,CAACK,SAAJ,CAAc,WAAd,EAA2B;AACzBC,QAAAA,IAAI,EAAE,SADmB;AAEzBC,QAAAA,IAAI,EAAET;AAFmB,OAA3B;AAIAE,MAAAA,GAAG,CAACQ,QAAJ,CAAa;AACXC,QAAAA,EAAE,EAAE,WADO;AAEXH,QAAAA,IAAI,EAAE,QAFK;AAGXI,QAAAA,MAAM,EAAE,WAHG;AAKXC,QAAAA,KAAK,EAAE;AACL,2BAAiB,EADZ;AAEL,0BAAgB,OAFX;AAGL,iCAAuB,OAHlB;AAIL,iCAAuB,CAJlB;AAKL,4BAAkB;AALb;AALI,OAAb;AAaD,KAnBD;AAoBAX,IAAAA,GAAG,CAACI,EAAJ,CAAO,OAAP,EAAiBQ,CAAD,IAAO;AACrB,YAAMC,QAAQ,GAAGb,GAAG,CAACc,qBAAJ,CAA0BF,CAAC,CAACG,KAA5B,EAAmC;AAClDC,QAAAA,MAAM,EAAE,CAAC,WAAD;AAD0C,OAAnC,CAAjB;AAGAhB,MAAAA,GAAG,CAACiB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,SAA/B;;AACA,UAAIN,QAAQ,CAACO,MAAT,GAAkB,CAAtB,EAAyB;AACvB,cAAMC,OAAO,GAAGR,QAAQ,CAAC,CAAD,CAAxB,CADuB,CAEvB;;AACA,cAAMS,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAlB;AACA5B,QAAAA,QAAQ,CAAC6B,MAAT,eAAgB,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAAhB,EAAoCH,SAApC;AACArB,QAAAA,QAAQ,CAACyB,OAAT,CACGC,SADH,CACaf,CAAC,CAACgB,MADf,EAEGC,aAFH,CAEiBP,SAFjB,EAGGQ,KAHH,CAGS9B,GAHT;AAID;AACF,KAfD;AAgBD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3CD;;GAAMD,kB;;KAAAA,kB;AA6CN,eAAeA,kBAAf","sourcesContent":["import React, { useRef } from \"react\";\nimport mapboxgl from \"mapbox-gl\";\nimport ReactDOM from \"react-dom\";\nimport PopupContainer from \"../PopupContainer\";\n\nimport Landmarks from \"../../data/map.json\";\n\nconst LandmarksComponent = ({ map }) => {\n  const popUpRef = useRef(new mapboxgl.Popup({ offset: 15 }));\n\n  if (map) {\n    map.on(\"load\", () => {\n      // // Landmarks (aka ⚪ )\n      map.addSource(\"landmarks\", {\n        type: \"geojson\",\n        data: Landmarks,\n      });\n      map.addLayer({\n        id: \"landmarks\",\n        type: \"circle\",\n        source: \"landmarks\",\n\n        paint: {\n          \"circle-radius\": 10,\n          \"circle-color\": \"white\",\n          \"circle-stroke-color\": \"white\",\n          \"circle-stroke-width\": 1,\n          \"circle-opacity\": 0.5,\n        },\n      });\n    });\n    map.on(\"click\", (e) => {\n      const features = map.queryRenderedFeatures(e.point, {\n        layers: [\"landmarks\"],\n      });\n      map.getCanvas().style.cursor = \"pointer\";\n      if (features.length > 0) {\n        const feature = features[0];\n        // create popup node\n        const popupNode = document.createElement(\"div\");\n        ReactDOM.render(<PopupContainer />, popupNode);\n        popUpRef.current\n          .setLngLat(e.lngLat)\n          .setDOMContent(popupNode)\n          .addTo(map);\n      }\n    });\n  }\n\n  return <div></div>;\n};\n\nexport default LandmarksComponent;\n"]},"metadata":{},"sourceType":"module"}
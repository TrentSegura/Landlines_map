{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Map/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from \"react\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\n\nimport landLines from \"../../data/LandlinesWhite\";\nimport landLinesThin from \"../../data/LandlinesThin\"; // import { ImInfo } from \"react-icons/im\";\n\nimport Header from \"../Header\";\nimport ProjectComponent from \"../ProjectComponent\";\nimport projects from \"../../data/landlines.json\";\nimport Sidebar from \"../Sidebar\";\nimport { Transition } from \"react-transition-group\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nif (!(\"remove\" in Element.prototype)) {\n  Element.prototype.remove = function () {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\nmapboxgl.accessToken = \"pk.eyJ1IjoibTEyLXRyZW50IiwiYSI6ImNrNDNuejljbjA0NzMzZW15eGk4OWMwdTEifQ.8rs6af8i7F8oeHDpbD_zQw\";\n\nconst Map = () => {\n  _s();\n\n  const mapContainerRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showPanel, setShowPanel] = useState(false);\n  var bounds = [[-110.113384, 35.747004], // Southwest coordinates\n  [-102.113384, 39.747004] // Northeast coordinates\n  ]; //   Determins which zoom level depending on screen size\n\n  const windowWidth = window.innerWidth;\n  const zoomLVL = windowWidth < 329 ? 9 : 10;\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/m12-trent/cknho9aum0mdz17p8qde7vrfo\",\n      center: [-106.1828, 37.4792],\n      zoom: zoomLVL,\n      minZoom: 1,\n      maxZoom: 15,\n      attributionControl: false,\n      maxBounds: bounds,\n      maxPitch: 0\n    }); // Load the Lines in Landlines\n\n    map.on(\"load\", () => {\n      // Thick White Lines (Aka the Landlines)\n      map.addSource(\"landlines\", {\n        type: \"geojson\",\n        data: {\n          type: \"Feature\",\n          properties: {},\n          geometry: {\n            type: \"LineString\",\n            coordinates: landLines\n          }\n        }\n      });\n      map.addLayer({\n        id: \"lines\",\n        type: \"line\",\n        source: \"landlines\",\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\"\n        },\n        paint: {\n          \"line-color\": \"#fff\",\n          \"line-opacity\": 0.7,\n          \"line-width\": 1.25\n        }\n      }); // Thin white lines\n\n      map.addSource(\"landlines-thin\", {\n        type: \"geojson\",\n        data: {\n          type: \"Feature\",\n          properties: {},\n          geometry: {\n            type: \"LineString\",\n            coordinates: landLinesThin\n          }\n        }\n      });\n      map.addLayer({\n        id: \"lines-thin\",\n        type: \"line\",\n        source: \"landlines-thin\",\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\"\n        },\n        paint: {\n          \"line-color\": \"#f9dec2\",\n          \"line-opacity\": 0.2,\n          \"line-width\": 1\n        }\n      });\n    });\n    setMap(map); // clean up on unmount\n\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  // function handleClick() {\n  //   const aboutSection = document.getElementById(\"about-section\");\n  //   aboutSection.scrollIntoView({\n  //     behavior: \"smooth\",\n  //   });\n  // }\n\n  const pickProject = project => {\n    setSelectedProject(project);\n\n    if (map) {\n      map.flyTo({\n        center: project.geometry.coordinates,\n        zoom: 13,\n        speed: 1,\n        padding: {\n          bottom: 633.73\n        }\n      });\n    }\n\n    setShowPanel(true);\n  };\n\n  console.log(window.innerHeight);\n  console.log(window.innerHeight - window.innerHeight * 0.75);\n\n  const closeSidebar = () => {\n    setSelectedProject(null);\n    setShowPanel(false);\n\n    if (map) {\n      map.flyTo({\n        zoom: 9.5,\n        speed: 1,\n        padding: {\n          left: 0,\n          bottom: 0\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-container\",\n      ref: mapContainerRef,\n      children: [/*#__PURE__*/_jsxDEV(Transition, {\n        in: showPanel,\n        timeout: 300,\n        children: state => /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Header, {\n            state: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n            project: selectedProject,\n            closeSidebar: closeSidebar,\n            state: state\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ProjectComponent, {\n        pickProject: pickProject,\n        projects: projects,\n        map: map\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Map, \"EW2mqE6rxCBr2YbfN6/kZLXaB9U=\");\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Map/index.jsx"],"names":["React","useRef","useEffect","useState","mapboxgl","landLines","landLinesThin","Header","ProjectComponent","projects","Sidebar","Transition","Element","prototype","remove","parentNode","removeChild","accessToken","Map","mapContainerRef","map","setMap","selectedProject","setSelectedProject","showPanel","setShowPanel","bounds","windowWidth","window","innerWidth","zoomLVL","container","current","style","center","zoom","minZoom","maxZoom","attributionControl","maxBounds","maxPitch","on","addSource","type","data","properties","geometry","coordinates","addLayer","id","source","layout","paint","pickProject","project","flyTo","speed","padding","bottom","console","log","innerHeight","closeSidebar","left","state"],"mappings":"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","sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\nimport mapboxgl from \"!mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\nimport landLines from \"../../data/LandlinesWhite\";\nimport landLinesThin from \"../../data/LandlinesThin\";\n\n// import { ImInfo } from \"react-icons/im\";\nimport Header from \"../Header\";\nimport ProjectComponent from \"../ProjectComponent\";\nimport projects from \"../../data/landlines.json\";\nimport Sidebar from \"../Sidebar\";\nimport { Transition } from \"react-transition-group\";\n\nif (!(\"remove\" in Element.prototype)) {\n  Element.prototype.remove = function () {\n    if (this.parentNode) {\n      this.parentNode.removeChild(this);\n    }\n  };\n}\n\nmapboxgl.accessToken =\n  \"pk.eyJ1IjoibTEyLXRyZW50IiwiYSI6ImNrNDNuejljbjA0NzMzZW15eGk4OWMwdTEifQ.8rs6af8i7F8oeHDpbD_zQw\";\n\nconst Map = () => {\n  const mapContainerRef = useRef(null);\n  const [map, setMap] = useState(null);\n  const [selectedProject, setSelectedProject] = useState(null);\n  const [showPanel, setShowPanel] = useState(false);\n\n  var bounds = [\n    [-110.113384, 35.747004], // Southwest coordinates\n    [-102.113384, 39.747004], // Northeast coordinates\n  ];\n\n  //   Determins which zoom level depending on screen size\n  const windowWidth = window.innerWidth;\n  const zoomLVL = windowWidth < 329 ? 9 : 10;\n\n  useEffect(() => {\n    const map = new mapboxgl.Map({\n      container: mapContainerRef.current,\n      style: \"mapbox://styles/m12-trent/cknho9aum0mdz17p8qde7vrfo\",\n      center: [-106.1828, 37.4792],\n      zoom: zoomLVL,\n      minZoom: 1,\n      maxZoom: 15,\n      attributionControl: false,\n      maxBounds: bounds,\n      maxPitch: 0,\n    });\n\n    // Load the Lines in Landlines\n    map.on(\"load\", () => {\n      // Thick White Lines (Aka the Landlines)\n      map.addSource(\"landlines\", {\n        type: \"geojson\",\n        data: {\n          type: \"Feature\",\n          properties: {},\n          geometry: {\n            type: \"LineString\",\n            coordinates: landLines,\n          },\n        },\n      });\n      map.addLayer({\n        id: \"lines\",\n        type: \"line\",\n        source: \"landlines\",\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\",\n        },\n        paint: {\n          \"line-color\": \"#fff\",\n          \"line-opacity\": 0.7,\n          \"line-width\": 1.25,\n        },\n      });\n\n      // Thin white lines\n      map.addSource(\"landlines-thin\", {\n        type: \"geojson\",\n        data: {\n          type: \"Feature\",\n          properties: {},\n          geometry: {\n            type: \"LineString\",\n            coordinates: landLinesThin,\n          },\n        },\n      });\n      map.addLayer({\n        id: \"lines-thin\",\n        type: \"line\",\n        source: \"landlines-thin\",\n        layout: {\n          \"line-join\": \"round\",\n          \"line-cap\": \"round\",\n        },\n        paint: {\n          \"line-color\": \"#f9dec2\",\n          \"line-opacity\": 0.2,\n          \"line-width\": 1,\n        },\n      });\n    });\n\n    setMap(map);\n    // clean up on unmount\n    return () => map.remove();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  // function handleClick() {\n  //   const aboutSection = document.getElementById(\"about-section\");\n  //   aboutSection.scrollIntoView({\n  //     behavior: \"smooth\",\n  //   });\n  // }\n\n  const pickProject = (project) => {\n    setSelectedProject(project);\n    if (map) {\n      map.flyTo({\n        center: project.geometry.coordinates,\n        zoom: 13,\n        speed: 1,\n        padding: { bottom: 633.73 },\n      });\n    }\n    setShowPanel(true);\n  };\n\n  console.log(window.innerHeight);\n  console.log(window.innerHeight - window.innerHeight * 0.75);\n\n  const closeSidebar = () => {\n    setSelectedProject(null);\n    setShowPanel(false);\n    if (map) {\n      map.flyTo({\n        zoom: 9.5,\n        speed: 1,\n        padding: { left: 0, bottom: 0 },\n      });\n    }\n  };\n\n  return (\n    <>\n      <div className=\"map-container\" ref={mapContainerRef}>\n        <Transition in={showPanel} timeout={300}>\n          {(state) => (\n            <>\n              <Header state={state} />\n\n              <Sidebar\n                project={selectedProject}\n                closeSidebar={closeSidebar}\n                state={state}\n              />\n            </>\n          )}\n        </Transition>\n\n        <ProjectComponent\n          pickProject={pickProject}\n          projects={projects}\n          map={map}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default Map;\n"]},"metadata":{},"sourceType":"module"}
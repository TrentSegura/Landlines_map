{"ast":null,"code":"import _slicedToArray from\"/Users/trent/Sites/2021/landlines_map/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useRef,useEffect,useState}from'react';import mapboxgl from'mapbox-gl';import Header from'./Header';import HeaderJR from'./HeaderJR';import MarkersMobile from'./MarkersMobile';import MarkersDesktop from'./MarkersDesktop';import LandMarks from'./LandMarks';import landLines from'../data/LandlinesWhite';import landLinesThin from'../data/LandlinesThin';import{ImInfo}from'react-icons/im';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";if(!('remove'in Element.prototype)){Element.prototype.remove=function(){if(this.parentNode){this.parentNode.removeChild(this);}};}mapboxgl.accessToken='pk.eyJ1IjoibTEyLXRyZW50IiwiYSI6ImNrNDNuejljbjA0NzMzZW15eGk4OWMwdTEifQ.8rs6af8i7F8oeHDpbD_zQw';var Map=function Map(){var mapContainerRef=useRef(null);var _useState=useState(null),_useState2=_slicedToArray(_useState,2),map=_useState2[0],setMap=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),hideHeader=_useState4[0],setHideHeader=_useState4[1];var bounds=[[-110.113384,35.747004],// Southwest coordinates\n[-102.113384,39.747004]// Northeast coordinates\n];//   Determins which zoom level depending on screen size\nvar windowWidth=window.innerWidth;var zoomLVL=windowWidth<329?7.2:8.5;useEffect(function(){var map=new mapboxgl.Map({container:mapContainerRef.current,style:'mapbox://styles/m12-trent/cknho9aum0mdz17p8qde7vrfo',center:[-106.1828,37.4792],zoom:zoomLVL,minZoom:1,maxZoom:13,attributionControl:false,maxBounds:bounds,maxPitch:0});// Load the Lines in Landlines\nmap.on('load',function(){// Thick White Lines (Aka the Landlines)\nmap.addSource('landlines',{'type':'geojson','data':{'type':'Feature','properties':{},'geometry':{'type':'LineString','coordinates':landLines}}});map.addLayer({'id':'lines','type':'line','source':'landlines','layout':{'line-join':'round','line-cap':'round'},'paint':{'line-color':'#fff','line-opacity':.7,'line-width':1.25}});// Thin white lines\nmap.addSource('landlines-thin',{'type':'geojson','data':{'type':'Feature','properties':{},'geometry':{'type':'LineString','coordinates':landLinesThin}}});map.addLayer({'id':'lines-thin','type':'line','source':'landlines-thin','layout':{'line-join':'round','line-cap':'round'},'paint':{'line-color':'#f9dec2','line-opacity':0.2,'line-width':1}});});setMap(map);// clean up on unmount\nreturn function(){return map.remove();};},[]);// eslint-disable-line react-hooks/exhaustive-deps\nfunction handleClick(){var aboutSection=document.getElementById('about-section');aboutSection.scrollIntoView({behavior:'smooth'});}var handleHeader=function handleHeader(e){setHideHeader(true);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"map-container\",ref:mapContainerRef,children:[hideHeader===false?/*#__PURE__*/_jsx(Header,{}):/*#__PURE__*/_jsx(HeaderJR,{}),window.innerWidth>450?/*#__PURE__*/_jsx(MarkersDesktop,{map:map,handleHeader:handleHeader}):/*#__PURE__*/_jsx(MarkersMobile,{map:map}),/*#__PURE__*/_jsx(LandMarks,{map:map})]}),/*#__PURE__*/_jsx(\"button\",{className:\"cta-scroll-down\",onClick:function onClick(){return handleClick();},children:/*#__PURE__*/_jsx(ImInfo,{})})]});};export default Map;","map":{"version":3,"sources":["/Users/trent/Sites/2021/landlines_map/src/components/Map.js"],"names":["React","useRef","useEffect","useState","mapboxgl","Header","HeaderJR","MarkersMobile","MarkersDesktop","LandMarks","landLines","landLinesThin","ImInfo","Element","prototype","remove","parentNode","removeChild","accessToken","Map","mapContainerRef","map","setMap","hideHeader","setHideHeader","bounds","windowWidth","window","innerWidth","zoomLVL","container","current","style","center","zoom","minZoom","maxZoom","attributionControl","maxBounds","maxPitch","on","addSource","addLayer","handleClick","aboutSection","document","getElementById","scrollIntoView","behavior","handleHeader","e"],"mappings":"4JAAA,MAAOA,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,SAAxB,CAAmCC,QAAnC,KAAmD,OAAnD,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,YAArB,CACA,MAAOC,CAAAA,aAAP,KAA0B,iBAA1B,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,SAAP,KAAsB,aAAtB,CAEA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,aAAP,KAA0B,uBAA1B,CAEA,OAASC,MAAT,KAAuB,gBAAvB,C,wFAEA,GAAI,EAAE,UAAYC,CAAAA,OAAO,CAACC,SAAtB,CAAJ,CAAsC,CAClCD,OAAO,CAACC,SAAR,CAAkBC,MAAlB,CAA2B,UAAW,CACpC,GAAI,KAAKC,UAAT,CAAqB,CACnB,KAAKA,UAAL,CAAgBC,WAAhB,CAA4B,IAA5B,EACD,CACF,CAJD,CAKH,CAGDb,QAAQ,CAACc,WAAT,CAAuB,8FAAvB,CAGA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,EAAM,CACd,GAAMC,CAAAA,eAAe,CAAGnB,MAAM,CAAC,IAAD,CAA9B,CACA,cAAsBE,QAAQ,CAAC,IAAD,CAA9B,wCAAOkB,GAAP,eAAYC,MAAZ,eAEA,eAAoCnB,QAAQ,CAAC,KAAD,CAA5C,yCAAOoB,UAAP,eAAmBC,aAAnB,eAEA,GAAIC,CAAAA,MAAM,CAAG,CACT,CAAC,CAAC,UAAF,CAAc,SAAd,CADS,CACiB;AAC1B,CAAC,CAAC,UAAF,CAAc,SAAd,CAAyB;AAFhB,CAAb,CAKA;AACE,GAAMC,CAAAA,WAAW,CAAGC,MAAM,CAACC,UAA3B,CACA,GAAMC,CAAAA,OAAO,CAAIH,WAAW,CAAG,GAAd,CAAoB,GAApB,CAA0B,GAA3C,CAGFxB,SAAS,CAAC,UAAM,CACZ,GAAMmB,CAAAA,GAAG,CAAG,GAAIjB,CAAAA,QAAQ,CAACe,GAAb,CAAiB,CAC7BW,SAAS,CAAEV,eAAe,CAACW,OADE,CAE7BC,KAAK,CAAE,qDAFsB,CAG7BC,MAAM,CAAE,CAAE,CAAC,QAAH,CAAa,OAAb,CAHqB,CAI7BC,IAAI,CAAEL,OAJuB,CAK7BM,OAAO,CAAE,CALoB,CAM7BC,OAAO,CAAE,EANoB,CAO7BC,kBAAkB,CAAE,KAPS,CAQ7BC,SAAS,CAAEb,MARkB,CAS7Bc,QAAQ,CAAE,CATmB,CAAjB,CAAZ,CAaA;AACAlB,GAAG,CAACmB,EAAJ,CAAO,MAAP,CAAe,UAAM,CACjB;AACAnB,GAAG,CAACoB,SAAJ,CAAc,WAAd,CAA2B,CACvB,OAAQ,SADe,CAEvB,OAAQ,CACJ,OAAQ,SADJ,CAEJ,aAAc,EAFV,CAGJ,WAAY,CACR,OAAQ,YADA,CAER,cAAe/B,SAFP,CAHR,CAFe,CAA3B,EAWIW,GAAG,CAACqB,QAAJ,CAAa,CACT,KAAM,OADG,CAET,OAAQ,MAFC,CAGT,SAAU,WAHD,CAIT,SAAU,CACN,YAAa,OADP,CAEN,WAAY,OAFN,CAJD,CAQT,QAAS,CACL,aAAc,MADT,CAEL,eAAgB,EAFX,CAGL,aAAc,IAHT,CARA,CAAb,EAeA;AACArB,GAAG,CAACoB,SAAJ,CAAc,gBAAd,CAAgC,CAC5B,OAAQ,SADoB,CAE5B,OAAQ,CACJ,OAAQ,SADJ,CAEJ,aAAc,EAFV,CAGJ,WAAY,CACR,OAAQ,YADA,CAER,cAAe9B,aAFP,CAHR,CAFoB,CAAhC,EAWAU,GAAG,CAACqB,QAAJ,CAAa,CACT,KAAM,YADG,CAET,OAAQ,MAFC,CAGT,SAAU,gBAHD,CAIT,SAAU,CACN,YAAa,OADP,CAEN,WAAY,OAFN,CAJD,CAQT,QAAS,CACL,aAAc,SADT,CAET,eAAgB,GAFP,CAGT,aAAc,CAHL,CARA,CAAb,EAeP,CAvDD,EAyDJpB,MAAM,CAACD,GAAD,CAAN,CAIA;AACA,MAAO,kBAAMA,CAAAA,GAAG,CAACN,MAAJ,EAAN,EAAP,CACC,CA9EQ,CA8EN,EA9EM,CAAT,CA8EQ;AAER,QAAS4B,CAAAA,WAAT,EAAuB,CACnB,GAAMC,CAAAA,YAAY,CAAGC,QAAQ,CAACC,cAAT,CAAwB,eAAxB,CAArB,CACAF,YAAY,CAACG,cAAb,CAA4B,CACxBC,QAAQ,CAAE,QADc,CAA5B,EAGH,CAED,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,CAAD,CAAO,CACxB1B,aAAa,CAAC,IAAD,CAAb,CACH,CAFD,CAIA,mBACI,oCACI,aAAK,SAAS,CAAC,eAAf,CAA+B,GAAG,CAAEJ,eAApC,WACKG,UAAU,GAAK,KAAf,cAAuB,KAAC,MAAD,IAAvB,cAAmC,KAAC,QAAD,IADxC,CAEKI,MAAM,CAACC,UAAP,CAAoB,GAApB,cAA0B,KAAC,cAAD,EAAgB,GAAG,CAAEP,GAArB,CAA0B,YAAY,CAAE4B,YAAxC,EAA1B,cAAqF,KAAC,aAAD,EAAe,GAAG,CAAE5B,GAApB,EAF1F,cAGI,KAAC,SAAD,EAAW,GAAG,CAAEA,GAAhB,EAHJ,GADJ,cAOI,eAAQ,SAAS,CAAC,iBAAlB,CAAoC,OAAO,CAAE,yBAAKsB,CAAAA,WAAW,EAAhB,EAA7C,uBAAiE,KAAC,MAAD,IAAjE,EAPJ,GADJ,CAYH,CAvHD,CAyHA,cAAexB,CAAAA,GAAf","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\nimport mapboxgl from 'mapbox-gl';\nimport Header from './Header';\nimport HeaderJR from './HeaderJR';\nimport MarkersMobile from './MarkersMobile';\nimport MarkersDesktop from './MarkersDesktop';\nimport LandMarks from './LandMarks';\n\nimport landLines from '../data/LandlinesWhite'\nimport landLinesThin from '../data/LandlinesThin'\n\nimport { ImInfo } from 'react-icons/im';\n\nif (!('remove' in Element.prototype)) {\n    Element.prototype.remove = function() {\n      if (this.parentNode) {\n        this.parentNode.removeChild(this);\n      }\n    };\n}\n \n\nmapboxgl.accessToken = 'pk.eyJ1IjoibTEyLXRyZW50IiwiYSI6ImNrNDNuejljbjA0NzMzZW15eGk4OWMwdTEifQ.8rs6af8i7F8oeHDpbD_zQw';\n\n\nconst Map = () => {\n    const mapContainerRef = useRef(null);\n    const [map, setMap] = useState(null)\n\n    const [hideHeader, setHideHeader] = useState(false)\n\n    var bounds = [\n        [-110.113384, 35.747004], // Southwest coordinates\n        [-102.113384, 39.747004] // Northeast coordinates\n      ]\n\n    //   Determins which zoom level depending on screen size\n      const windowWidth = window.innerWidth\n      const zoomLVL = (windowWidth < 329 ? 7.2 : 8.5)\n\n\n    useEffect(() => {\n        const map = new mapboxgl.Map({\n        container: mapContainerRef.current,\n        style: 'mapbox://styles/m12-trent/cknho9aum0mdz17p8qde7vrfo',\n        center: [ -106.1828, 37.4792 ],\n        zoom: zoomLVL,\n        minZoom: 1,\n        maxZoom: 13,\n        attributionControl: false,\n        maxBounds: bounds,\n        maxPitch: 0,\n    });\n\n\n        // Load the Lines in Landlines\n        map.on('load', () => {\n            // Thick White Lines (Aka the Landlines)\n            map.addSource('landlines', {\n                'type': 'geojson',\n                'data': {\n                    'type': 'Feature',\n                    'properties': {},\n                    'geometry': {\n                        'type': 'LineString',\n                        'coordinates': landLines\n                        }\n                    }    \n                });\n                map.addLayer({\n                    'id': 'lines',\n                    'type': 'line',\n                    'source': 'landlines',\n                    'layout': {\n                        'line-join': 'round',\n                        'line-cap': 'round'\n                        },\n                    'paint': {\n                        'line-color': '#fff',\n                        'line-opacity': .7,\n                        'line-width': 1.25\n                     }\n                });\n\n                // Thin white lines\n                map.addSource('landlines-thin', {\n                    'type': 'geojson',\n                    'data': {\n                        'type': 'Feature',\n                        'properties': {},\n                        'geometry': {\n                            'type': 'LineString',\n                            'coordinates': landLinesThin\n                            }\n                        }    \n                    });\n                map.addLayer({\n                    'id': 'lines-thin',\n                    'type': 'line',\n                    'source': 'landlines-thin',\n                    'layout': {\n                        'line-join': 'round',\n                        'line-cap': 'round'\n                        },\n                    'paint': {\n                        'line-color': '#f9dec2',\n                    'line-opacity': 0.2,\n                    'line-width': 1\n                        }\n                    });\n\n        })\n    \n    setMap(map)\n\n\n\n    // clean up on unmount\n    return () => map.remove();\n    }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n    function handleClick() {\n        const aboutSection = document.getElementById('about-section')\n        aboutSection.scrollIntoView({\n            behavior: 'smooth'\n        })\n    }\n\n    const handleHeader = (e) => {\n        setHideHeader(true)\n    }\n\n    return (\n        <div>\n            <div className='map-container' ref={mapContainerRef}>\n                {hideHeader === false ? <Header/> : <HeaderJR/>}\n                {window.innerWidth > 450 ? <MarkersDesktop map={map} handleHeader={handleHeader} /> : <MarkersMobile map={map}/> }\n                <LandMarks map={map} />\n\n            </div>\n            <button className=\"cta-scroll-down\" onClick={()=> handleClick()}><ImInfo/></button>\n            \n        </div>\n    )\n}\n\nexport default Map\n"]},"metadata":{},"sourceType":"module"}
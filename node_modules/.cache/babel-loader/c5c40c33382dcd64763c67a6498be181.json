{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Pins.js\";\nimport React from \"react\";\nimport PinsData from \"../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./Pins.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Pins = ({\n  map\n}) => {\n  if (map) {\n    PinsData.features.forEach(pin => {\n      const coord = [pin.geometry.coordinates[0], pin.geometry.coordinates[1]];\n      const popup = new mapboxgl.Popup();\n      const imgSrc = \"assets/pins/\" + pin.properties.images;\n      popup.setHTML(pin.properties.images ? `\n                <div class=\"pins\">\n               \n                <div class=\"pb-container\">\n                <img src=\"${imgSrc}\">\n                </div>\n                              \n                <h3>${pin.properties.name}</h3>\n                </div>\n                \n                ` : `\n\n                <div class=\"pins\">\n                <h3>${pin.properties.name}</h3>\n                </div>\n                \n                `);\n      var el = document.createElement(\"div\");\n      el.id = \"pin-marker\";\n      map.on(\"mouseenter\", \"PinsData\", function (e) {\n        // Change the cursor style as a UI indicator.\n        map.getCanvas().style.cursor = \"pointer\";\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var description = e.features[0].properties.description; // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        } // Populate the popup and set its coordinates\n        // based on the feature found.\n\n\n        popup.setLngLat(coordinates).setHTML(description).addTo(map);\n      });\n      map.on(\"mouseleave\", \"places\", function () {\n        map.getCanvas().style.cursor = \"\";\n        popup.remove();\n      });\n      const marker = new mapboxgl.Marker(el);\n      marker.setPopup(popup);\n      marker.setLngLat(coord);\n      marker.addTo(map);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 10\n  }, this);\n};\n\n_c = Pins;\nexport default Pins;\n\nvar _c;\n\n$RefreshReg$(_c, \"Pins\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Pins.js"],"names":["React","PinsData","mapboxgl","Pins","map","features","forEach","pin","coord","geometry","coordinates","popup","Popup","imgSrc","properties","images","setHTML","name","el","document","createElement","id","on","e","getCanvas","style","cursor","slice","description","Math","abs","lngLat","lng","setLngLat","addTo","remove","marker","Marker","setPopup"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,kBAArB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,YAAP;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AACxB,MAAIA,GAAJ,EAAS;AACPH,IAAAA,QAAQ,CAACI,QAAT,CAAkBC,OAAlB,CAA2BC,GAAD,IAAS;AACjC,YAAMC,KAAK,GAAG,CAACD,GAAG,CAACE,QAAJ,CAAaC,WAAb,CAAyB,CAAzB,CAAD,EAA8BH,GAAG,CAACE,QAAJ,CAAaC,WAAb,CAAyB,CAAzB,CAA9B,CAAd;AACA,YAAMC,KAAK,GAAG,IAAIT,QAAQ,CAACU,KAAb,EAAd;AAEA,YAAMC,MAAM,GAAG,iBAAiBN,GAAG,CAACO,UAAJ,CAAeC,MAA/C;AAEAJ,MAAAA,KAAK,CAACK,OAAN,CACET,GAAG,CAACO,UAAJ,CAAeC,MAAf,GACK;AACb;AACA;AACA;AACA,4BAA4BF,MAAO;AACnC;AACA;AACA,sBAAsBN,GAAG,CAACO,UAAJ,CAAeG,IAAK;AAC1C;AACA;AACA,iBAXQ,GAYK;AACb;AACA;AACA,sBAAsBV,GAAG,CAACO,UAAJ,CAAeG,IAAK;AAC1C;AACA;AACA,iBAnBM;AAsBA,UAAIC,EAAE,GAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAT;AACAF,MAAAA,EAAE,CAACG,EAAH,GAAQ,YAAR;AAEAjB,MAAAA,GAAG,CAACkB,EAAJ,CAAO,YAAP,EAAqB,UAArB,EAAiC,UAAUC,CAAV,EAAa;AAC5C;AACAnB,QAAAA,GAAG,CAACoB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,SAA/B;AAEA,YAAIhB,WAAW,GAAGa,CAAC,CAAClB,QAAF,CAAW,CAAX,EAAcI,QAAd,CAAuBC,WAAvB,CAAmCiB,KAAnC,EAAlB;AACA,YAAIC,WAAW,GAAGL,CAAC,CAAClB,QAAF,CAAW,CAAX,EAAcS,UAAd,CAAyBc,WAA3C,CAL4C,CAO5C;AACA;AACA;;AACA,eAAOC,IAAI,CAACC,GAAL,CAASP,CAAC,CAACQ,MAAF,CAASC,GAAT,GAAetB,WAAW,CAAC,CAAD,CAAnC,IAA0C,GAAjD,EAAsD;AACpDA,UAAAA,WAAW,CAAC,CAAD,CAAX,IAAkBa,CAAC,CAACQ,MAAF,CAASC,GAAT,GAAetB,WAAW,CAAC,CAAD,CAA1B,GAAgC,GAAhC,GAAsC,CAAC,GAAzD;AACD,SAZ2C,CAc5C;AACA;;;AACAC,QAAAA,KAAK,CAACsB,SAAN,CAAgBvB,WAAhB,EAA6BM,OAA7B,CAAqCY,WAArC,EAAkDM,KAAlD,CAAwD9B,GAAxD;AACD,OAjBD;AAmBAA,MAAAA,GAAG,CAACkB,EAAJ,CAAO,YAAP,EAAqB,QAArB,EAA+B,YAAY;AACzClB,QAAAA,GAAG,CAACoB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,GAA+B,EAA/B;AACAf,QAAAA,KAAK,CAACwB,MAAN;AACD,OAHD;AAKA,YAAMC,MAAM,GAAG,IAAIlC,QAAQ,CAACmC,MAAb,CAAoBnB,EAApB,CAAf;AACAkB,MAAAA,MAAM,CAACE,QAAP,CAAgB3B,KAAhB;AACAyB,MAAAA,MAAM,CAACH,SAAP,CAAiBzB,KAAjB;AACA4B,MAAAA,MAAM,CAACF,KAAP,CAAa9B,GAAb;AACD,KA3DD;AA4DD;;AAED,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAjED;;KAAMD,I;AAmEN,eAAeA,IAAf","sourcesContent":["import React from \"react\";\nimport PinsData from \"../data/map.json\";\nimport mapboxgl from \"mapbox-gl\";\nimport \"./Pins.css\";\n\nconst Pins = ({ map }) => {\n  if (map) {\n    PinsData.features.forEach((pin) => {\n      const coord = [pin.geometry.coordinates[0], pin.geometry.coordinates[1]];\n      const popup = new mapboxgl.Popup();\n\n      const imgSrc = \"assets/pins/\" + pin.properties.images;\n\n      popup.setHTML(\n        pin.properties.images\n          ? `\n                <div class=\"pins\">\n               \n                <div class=\"pb-container\">\n                <img src=\"${imgSrc}\">\n                </div>\n                              \n                <h3>${pin.properties.name}</h3>\n                </div>\n                \n                `\n          : `\n\n                <div class=\"pins\">\n                <h3>${pin.properties.name}</h3>\n                </div>\n                \n                `\n      );\n\n      var el = document.createElement(\"div\");\n      el.id = \"pin-marker\";\n\n      map.on(\"mouseenter\", \"PinsData\", function (e) {\n        // Change the cursor style as a UI indicator.\n        map.getCanvas().style.cursor = \"pointer\";\n\n        var coordinates = e.features[0].geometry.coordinates.slice();\n        var description = e.features[0].properties.description;\n\n        // Ensure that if the map is zoomed out such that multiple\n        // copies of the feature are visible, the popup appears\n        // over the copy being pointed to.\n        while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n          coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n        }\n\n        // Populate the popup and set its coordinates\n        // based on the feature found.\n        popup.setLngLat(coordinates).setHTML(description).addTo(map);\n      });\n\n      map.on(\"mouseleave\", \"places\", function () {\n        map.getCanvas().style.cursor = \"\";\n        popup.remove();\n      });\n\n      const marker = new mapboxgl.Marker(el);\n      marker.setPopup(popup);\n      marker.setLngLat(coord);\n      marker.addTo(map);\n    });\n  }\n\n  return <div></div>;\n};\n\nexport default Pins;\n"]},"metadata":{},"sourceType":"module"}
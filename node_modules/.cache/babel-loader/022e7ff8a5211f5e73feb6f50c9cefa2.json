{"ast":null,"code":"import React from'react';import LandmarksData from'../data/map.json';import mapboxgl from'mapbox-gl';import'./LandMarks.css';import{jsx as _jsx}from\"react/jsx-runtime\";var LandMarks=function LandMarks(_ref){var map=_ref.map;if(map){LandmarksData.features.forEach(function(landmark){var coord=[landmark.geometry.coordinates[0],landmark.geometry.coordinates[1]];var popup=new mapboxgl.Popup();popup.setHTML(landmark.properties.images?\"\\n                <div class=\\\"pins\\\">\\n               \\n                <div class=\\\"pb-container\\\">\\n                <img src=\\\"http://richardsaxton.org/websites/m12_landlines/landmarks/\".concat(landmark.properties.images,\"\\\">\\n                </div>\\n                              \\n                <h3>\").concat(landmark.properties.name,\"</h3>\\n                </div>\\n                \\n                \"):\"\\n\\n                <div class=\\\"pins\\\">\\n                <h3>\".concat(landmark.properties.name,\"</h3>\\n                </div>\\n                \\n                \"));var el=document.createElement('div');el.id='pin-marker';map.on('mouseenter','LandmarksData',function(e){// Change the cursor style as a UI indicator.\nmap.getCanvas().style.cursor='pointer';var coordinates=e.features[0].geometry.coordinates.slice();var description=e.features[0].properties.description;// Ensure that if the map is zoomed out such that multiple\n// copies of the feature are visible, the popup appears\n// over the copy being pointed to.\nwhile(Math.abs(e.lngLat.lng-coordinates[0])>180){coordinates[0]+=e.lngLat.lng>coordinates[0]?360:-360;}// Populate the popup and set its coordinates\n// based on the feature found.\npopup.setLngLat(coordinates).setHTML(description).addTo(map);});map.on('mouseleave','places',function(){map.getCanvas().style.cursor='';popup.remove();});var marker=new mapboxgl.Marker(el);marker.setPopup(popup);marker.setLngLat(coord);marker.addTo(map);});}return/*#__PURE__*/_jsx(\"div\",{});};export default LandMarks;","map":{"version":3,"sources":["/Users/trent/Sites/2021/landlines_map/src/components/LandMarks.js"],"names":["React","LandmarksData","mapboxgl","LandMarks","map","features","forEach","landmark","coord","geometry","coordinates","popup","Popup","setHTML","properties","images","name","el","document","createElement","id","on","e","getCanvas","style","cursor","slice","description","Math","abs","lngLat","lng","setLngLat","addTo","remove","marker","Marker","setPopup"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,kBAA1B,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,iBAAP,C,2CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,MAAa,IAAVC,CAAAA,GAAU,MAAVA,GAAU,CAE3B,GAAGA,GAAH,CAAO,CACHH,aAAa,CAACI,QAAd,CAAuBC,OAAvB,CAA+B,SAACC,QAAD,CAAa,CACxC,GAAMC,CAAAA,KAAK,CAAG,CAACD,QAAQ,CAACE,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,CAAD,CAAmCH,QAAQ,CAACE,QAAT,CAAkBC,WAAlB,CAA8B,CAA9B,CAAnC,CAAd,CACA,GAAMC,CAAAA,KAAK,CAAG,GAAIT,CAAAA,QAAQ,CAACU,KAAb,EAAd,CAGAD,KAAK,CAACE,OAAN,CACIN,QAAQ,CAACO,UAAT,CAAoBC,MAApB,uMAMsER,QAAQ,CAACO,UAAT,CAAoBC,MAN1F,6FASMR,QAAQ,CAACO,UAAT,CAAoBE,IAT1B,8IAmBMT,QAAQ,CAACO,UAAT,CAAoBE,IAnB1B,qEADJ,EAyBA,GAAIC,CAAAA,EAAE,CAAGC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAT,CACAF,EAAE,CAACG,EAAH,CAAQ,YAAR,CAEAhB,GAAG,CAACiB,EAAJ,CAAO,YAAP,CAAqB,eAArB,CAAsC,SAAUC,CAAV,CAAa,CAC/C;AACAlB,GAAG,CAACmB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,CAA+B,SAA/B,CAEA,GAAIf,CAAAA,WAAW,CAAGY,CAAC,CAACjB,QAAF,CAAW,CAAX,EAAcI,QAAd,CAAuBC,WAAvB,CAAmCgB,KAAnC,EAAlB,CACA,GAAIC,CAAAA,WAAW,CAAGL,CAAC,CAACjB,QAAF,CAAW,CAAX,EAAcS,UAAd,CAAyBa,WAA3C,CAEA;AACA;AACA;AACA,MAAOC,IAAI,CAACC,GAAL,CAASP,CAAC,CAACQ,MAAF,CAASC,GAAT,CAAerB,WAAW,CAAC,CAAD,CAAnC,EAA0C,GAAjD,CAAsD,CACtDA,WAAW,CAAC,CAAD,CAAX,EAAkBY,CAAC,CAACQ,MAAF,CAASC,GAAT,CAAerB,WAAW,CAAC,CAAD,CAA1B,CAAgC,GAAhC,CAAsC,CAAC,GAAzD,CACC,CAED;AACA;AACAC,KAAK,CAACqB,SAAN,CAAgBtB,WAAhB,EAA6BG,OAA7B,CAAqCc,WAArC,EAAkDM,KAAlD,CAAwD7B,GAAxD,EACC,CAjBL,EAmBIA,GAAG,CAACiB,EAAJ,CAAO,YAAP,CAAqB,QAArB,CAA+B,UAAY,CAC3CjB,GAAG,CAACmB,SAAJ,GAAgBC,KAAhB,CAAsBC,MAAtB,CAA+B,EAA/B,CACAd,KAAK,CAACuB,MAAN,GACC,CAHD,EAKJ,GAAMC,CAAAA,MAAM,CAAG,GAAIjC,CAAAA,QAAQ,CAACkC,MAAb,CAAoBnB,EAApB,CAAf,CACAkB,MAAM,CAACE,QAAP,CAAgB1B,KAAhB,EACAwB,MAAM,CAACH,SAAP,CAAiBxB,KAAjB,EACA2B,MAAM,CAACF,KAAP,CAAa7B,GAAb,EACH,CA7DD,EA8DH,CAGD,mBACI,cADJ,CAKH,CAzED,CA2EA,cAAeD,CAAAA,SAAf","sourcesContent":["import React from 'react'\nimport LandmarksData from '../data/map.json'\nimport mapboxgl from 'mapbox-gl';\nimport './LandMarks.css'\n\n\nconst LandMarks = ({ map }) => {\n\n    if(map){\n        LandmarksData.features.forEach((landmark) =>{\n            const coord = [landmark.geometry.coordinates[0], landmark.geometry.coordinates[1]]\n            const popup = new mapboxgl.Popup()\n               \n\n            popup.setHTML(\n                landmark.properties.images ?\n\n                `\n                <div class=\"pins\">\n               \n                <div class=\"pb-container\">\n                <img src=\"http://richardsaxton.org/websites/m12_landlines/landmarks/${landmark.properties.images}\">\n                </div>\n                              \n                <h3>${landmark.properties.name}</h3>\n                </div>\n                \n                `               \n\n                :\n\n                `\n\n                <div class=\"pins\">\n                <h3>${landmark.properties.name}</h3>\n                </div>\n                \n                ` )    \n\n            var el = document.createElement('div');\n            el.id = 'pin-marker';\n\n            map.on('mouseenter', 'LandmarksData', function (e) {\n                // Change the cursor style as a UI indicator.\n                map.getCanvas().style.cursor = 'pointer';\n                 \n                var coordinates = e.features[0].geometry.coordinates.slice();\n                var description = e.features[0].properties.description;\n                 \n                // Ensure that if the map is zoomed out such that multiple\n                // copies of the feature are visible, the popup appears\n                // over the copy being pointed to.\n                while (Math.abs(e.lngLat.lng - coordinates[0]) > 180) {\n                coordinates[0] += e.lngLat.lng > coordinates[0] ? 360 : -360;\n                }\n                 \n                // Populate the popup and set its coordinates\n                // based on the feature found.\n                popup.setLngLat(coordinates).setHTML(description).addTo(map);\n                });\n                 \n                map.on('mouseleave', 'places', function () {\n                map.getCanvas().style.cursor = '';\n                popup.remove();\n                });\n\n            const marker = new mapboxgl.Marker(el)\n            marker.setPopup(popup)\n            marker.setLngLat(coord)\n            marker.addTo(map)\n        })\n    }\n    \n\n    return (\n        <div>\n           \n        </div>\n    )\n}\n\nexport default LandMarks\n"]},"metadata":{},"sourceType":"module"}
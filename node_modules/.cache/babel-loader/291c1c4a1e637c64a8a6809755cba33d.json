{"ast":null,"code":"var _jsxFileName = \"/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx\",\n    _s = $RefreshSig$();\n\n// import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n// import mapboxgl from \"mapbox-gl\";\n// import ReactDOM from \"react-dom\";\n// import Landmark from \"../Landmark\";\n// const Landmarks = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       Pins.features.forEach((pin, index) => {\n//         const ref = React.createRef;\n//         ref.current = document.createElement(\"div\");\n//         ReactDOM.render(<Landmark map={map} pin={pin} />, ref.current);\n//         new mapboxgl.Marker(ref.current)\n//           .setLngLat(pin.geometry.coordinates)\n//           .addTo(map);\n//       });\n//     }\n//   }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n//   return <div></div>;\n// };\n// export default Landmarks;\nimport React, { useEffect } from \"react\";\nimport Pins from \"../../data/map.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landmark = ({\n  map\n}) => {\n  _s();\n\n  useEffect(() => {\n    if (map) {\n      map.on(\"load\", function () {\n        map.loadImage(\"https://docs.mapbox.com/mapbox-gl-js/assets/cat.png\", (error, image) => {\n          if (error) throw error; // Add the image to the map style.\n\n          map.addImage(\"cat\", image); // Add a data source containing one point feature.\n\n          map.addSource(\"point\", {\n            type: \"geojson\",\n            data: Pins\n          }); // Add a layer to use the image to represent the data.\n\n          map.addLayer({\n            id: \"points\",\n            type: \"symbol\",\n            source: \"point\",\n            // reference the data source\n            layout: {\n              \"icon-image\": \"cat\",\n              // reference the image\n              \"icon-size\": 0.25\n            }\n          });\n        });\n      });\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n};\n\n_s(Landmark, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = Landmark;\nexport default Landmark;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landmark\");","map":{"version":3,"sources":["/Users/trent/Sites/landlines_map_test/src/components/Landmarks/index.jsx"],"names":["React","useEffect","Pins","Landmark","map","on","loadImage","error","image","addImage","addSource","type","data","addLayer","id","source","layout"],"mappings":";;;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,qBAAjB;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAa;AAAA;;AAC5BH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIG,GAAJ,EAAS;AACPA,MAAAA,GAAG,CAACC,EAAJ,CAAO,MAAP,EAAe,YAAY;AACzBD,QAAAA,GAAG,CAACE,SAAJ,CACE,qDADF,EAEE,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAChB,cAAID,KAAJ,EAAW,MAAMA,KAAN,CADK,CAGhB;;AACAH,UAAAA,GAAG,CAACK,QAAJ,CAAa,KAAb,EAAoBD,KAApB,EAJgB,CAMhB;;AACAJ,UAAAA,GAAG,CAACM,SAAJ,CAAc,OAAd,EAAuB;AACrBC,YAAAA,IAAI,EAAE,SADe;AAErBC,YAAAA,IAAI,EAAEV;AAFe,WAAvB,EAPgB,CAYhB;;AACAE,UAAAA,GAAG,CAACS,QAAJ,CAAa;AACXC,YAAAA,EAAE,EAAE,QADO;AAEXH,YAAAA,IAAI,EAAE,QAFK;AAGXI,YAAAA,MAAM,EAAE,OAHG;AAGM;AACjBC,YAAAA,MAAM,EAAE;AACN,4BAAc,KADR;AACe;AACrB,2BAAa;AAFP;AAJG,WAAb;AASD,SAxBH;AA0BD,OA3BD;AA4BD;AACF,GA/BQ,CAAT;AAgCA,sBAAO;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CAlCD;;GAAMb,Q;;KAAAA,Q;AAoCN,eAAeA,QAAf","sourcesContent":["// import React, { useEffect } from \"react\";\n// import Pins from \"../../data/map.json\";\n// import mapboxgl from \"mapbox-gl\";\n// import ReactDOM from \"react-dom\";\n// import Landmark from \"../Landmark\";\n\n// const Landmarks = ({ map }) => {\n//   useEffect(() => {\n//     if (map) {\n//       Pins.features.forEach((pin, index) => {\n//         const ref = React.createRef;\n//         ref.current = document.createElement(\"div\");\n\n//         ReactDOM.render(<Landmark map={map} pin={pin} />, ref.current);\n\n//         new mapboxgl.Marker(ref.current)\n//           .setLngLat(pin.geometry.coordinates)\n//           .addTo(map);\n//       });\n//     }\n//   }, [map]); // eslint-disable-line react-hooks/exhaustive-deps\n\n//   return <div></div>;\n// };\n\n// export default Landmarks;\n\nimport React, { useEffect } from \"react\";\nimport Pins from \"../../data/map.json\";\n\nconst Landmark = ({ map }) => {\n  useEffect(() => {\n    if (map) {\n      map.on(\"load\", function () {\n        map.loadImage(\n          \"https://docs.mapbox.com/mapbox-gl-js/assets/cat.png\",\n          (error, image) => {\n            if (error) throw error;\n\n            // Add the image to the map style.\n            map.addImage(\"cat\", image);\n\n            // Add a data source containing one point feature.\n            map.addSource(\"point\", {\n              type: \"geojson\",\n              data: Pins,\n            });\n\n            // Add a layer to use the image to represent the data.\n            map.addLayer({\n              id: \"points\",\n              type: \"symbol\",\n              source: \"point\", // reference the data source\n              layout: {\n                \"icon-image\": \"cat\", // reference the image\n                \"icon-size\": 0.25,\n              },\n            });\n          }\n        );\n      });\n    }\n  });\n  return <div></div>;\n};\n\nexport default Landmark;\n"]},"metadata":{},"sourceType":"module"}